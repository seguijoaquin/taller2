<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="d0/d9c/rtfgen_8cpp" kind="file">
    <compoundname>rtfgen.cpp</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">qdir.h</includes>
    <includes local="no">qregexp.h</includes>
    <includes local="no">qtextstream.h</includes>
    <includes refid="d4/daa/rtfgen_8h" local="yes">rtfgen.h</includes>
    <includes refid="db/d16/config_8h" local="yes">config.h</includes>
    <includes refid="d2/d0d/message_8h" local="yes">message.h</includes>
    <includes refid="d1/da1/doxygen_8h" local="yes">doxygen.h</includes>
    <includes refid="d8/d3c/util_8h" local="yes">util.h</includes>
    <includes refid="d9/d1b/diagram_8h" local="yes">diagram.h</includes>
    <includes refid="d8/dce/language_8h" local="yes">language.h</includes>
    <includes refid="d6/d4a/dot_8h" local="yes">dot.h</includes>
    <includes refid="df/dfc/version_8h" local="yes">version.h</includes>
    <includes refid="dd/d66/pagedef_8h" local="yes">pagedef.h</includes>
    <includes refid="d4/df3/rtfstyle_8h" local="yes">rtfstyle.h</includes>
    <includes refid="d1/da7/rtfdocvisitor_8h" local="yes">rtfdocvisitor.h</includes>
    <includes refid="de/d9c/docparser_8h" local="yes">docparser.h</includes>
    <includes refid="d6/d15/dirdef_8h" local="yes">dirdef.h</includes>
    <includes refid="dd/dec/vhdldocgen_8h" local="yes">vhdldocgen.h</includes>
    <includes refid="d2/de2/portable_8h" local="yes">portable.h</includes>
    <includes refid="d1/de6/groupdef_8h" local="yes">groupdef.h</includes>
    <includes refid="d2/df8/classlist_8h" local="yes">classlist.h</includes>
    <includes refid="dc/dd6/filename_8h" local="yes">filename.h</includes>
    <includes refid="d7/d97/namespacedef_8h" local="yes">namespacedef.h</includes>
    <incdepgraph>
      <node id="4477">
        <label>qcstring.h</label>
      </node>
      <node id="4470">
        <label>qregexp.h</label>
      </node>
      <node id="4486">
        <label>qgstring.h</label>
      </node>
      <node id="4473">
        <label>outputgen.h</label>
        <link refid="df/d06/outputgen_8h_source"/>
        <childnode refid="4474" relation="include">
        </childnode>
        <childnode refid="4475" relation="include">
        </childnode>
        <childnode refid="4478" relation="include">
        </childnode>
        <childnode refid="4482" relation="include">
        </childnode>
      </node>
      <node id="4515">
        <label>rtfstyle.h</label>
        <link refid="d4/df3/rtfstyle_8h_source"/>
        <childnode refid="4470" relation="include">
        </childnode>
        <childnode refid="4480" relation="include">
        </childnode>
      </node>
      <node id="4474">
        <label>qstack.h</label>
      </node>
      <node id="4518">
        <label>docparser.h</label>
        <link refid="de/d9c/docparser_8h_source"/>
        <childnode refid="4483" relation="include">
        </childnode>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4477" relation="include">
        </childnode>
        <childnode refid="4517" relation="include">
        </childnode>
        <childnode refid="4519" relation="include">
        </childnode>
      </node>
      <node id="4491">
        <label>qdatetime.h</label>
      </node>
      <node id="4488">
        <label>qstrlist.h</label>
      </node>
      <node id="4503">
        <label>qglobal.h</label>
      </node>
      <node id="4526">
        <label>classlist.h</label>
        <link refid="d2/df8/classlist_8h_source"/>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4480" relation="include">
        </childnode>
        <childnode refid="4506" relation="include">
        </childnode>
        <childnode refid="4479" relation="include">
        </childnode>
      </node>
      <node id="4467">
        <label>src/rtfgen.cpp</label>
        <link refid="rtfgen.cpp"/>
        <childnode refid="4468" relation="include">
        </childnode>
        <childnode refid="4469" relation="include">
        </childnode>
        <childnode refid="4470" relation="include">
        </childnode>
        <childnode refid="4471" relation="include">
        </childnode>
        <childnode refid="4472" relation="include">
        </childnode>
        <childnode refid="4487" relation="include">
        </childnode>
        <childnode refid="4489" relation="include">
        </childnode>
        <childnode refid="4490" relation="include">
        </childnode>
        <childnode refid="4500" relation="include">
        </childnode>
        <childnode refid="4502" relation="include">
        </childnode>
        <childnode refid="4504" relation="include">
        </childnode>
        <childnode refid="4508" relation="include">
        </childnode>
        <childnode refid="4513" relation="include">
        </childnode>
        <childnode refid="4514" relation="include">
        </childnode>
        <childnode refid="4515" relation="include">
        </childnode>
        <childnode refid="4516" relation="include">
        </childnode>
        <childnode refid="4518" relation="include">
        </childnode>
        <childnode refid="4495" relation="include">
        </childnode>
        <childnode refid="4520" relation="include">
        </childnode>
        <childnode refid="4524" relation="include">
        </childnode>
        <childnode refid="4525" relation="include">
        </childnode>
        <childnode refid="4526" relation="include">
        </childnode>
        <childnode refid="4527" relation="include">
        </childnode>
        <childnode refid="4529" relation="include">
        </childnode>
      </node>
      <node id="4485">
        <label>qstring.h</label>
      </node>
      <node id="4468">
        <label>stdlib.h</label>
      </node>
      <node id="4513">
        <label>version.h</label>
        <link refid="df/dfc/version_8h_source"/>
      </node>
      <node id="4517">
        <label>docvisitor.h</label>
        <link refid="d2/d3c/docvisitor_8h_source"/>
      </node>
      <node id="4493">
        <label>membergroup.h</label>
        <link refid="d9/d11/membergroup_8h_source"/>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4479" relation="include">
        </childnode>
        <childnode refid="4494" relation="include">
        </childnode>
      </node>
      <node id="4479">
        <label>sortdict.h</label>
        <link refid="d9/d21/sortdict_8h_source"/>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4480" relation="include">
        </childnode>
        <childnode refid="4481" relation="include">
        </childnode>
      </node>
      <node id="4497">
        <label>memberlist.h</label>
        <link refid="dd/d78/memberlist_8h_source"/>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4498" relation="include">
        </childnode>
        <childnode refid="4479" relation="include">
        </childnode>
        <childnode refid="4494" relation="include">
        </childnode>
      </node>
      <node id="4507">
        <label>qptrdict.h</label>
      </node>
      <node id="4504">
        <label>language.h</label>
        <link refid="d8/dce/language_8h_source"/>
        <childnode refid="4505" relation="include">
        </childnode>
      </node>
      <node id="4523">
        <label>entry.h</label>
        <link refid="d1/dc6/entry_8h_source"/>
        <childnode refid="4494" relation="include">
        </childnode>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4486" relation="include">
        </childnode>
      </node>
      <node id="4509">
        <label>qwaitcondition.h</label>
      </node>
      <node id="4508">
        <label>dot.h</label>
        <link refid="d6/d4a/dot_8h_source"/>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4480" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
        <childnode refid="4510" relation="include">
        </childnode>
        <childnode refid="4511" relation="include">
        </childnode>
        <childnode refid="4512" relation="include">
        </childnode>
        <childnode refid="4479" relation="include">
        </childnode>
      </node>
      <node id="4469">
        <label>qdir.h</label>
      </node>
      <node id="4527">
        <label>filename.h</label>
        <link refid="dc/dd6/filename_8h_source"/>
        <childnode refid="4480" relation="include">
        </childnode>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4528" relation="include">
        </childnode>
      </node>
      <node id="4492">
        <label>qcache.h</label>
      </node>
      <node id="4506">
        <label>classdef.h</label>
        <link refid="d1/da6/classdef_8h_source"/>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4480" relation="include">
        </childnode>
        <childnode refid="4507" relation="include">
        </childnode>
        <childnode refid="4496" relation="include">
        </childnode>
      </node>
      <node id="4489">
        <label>message.h</label>
        <link refid="d2/d0d/message_8h_source"/>
        <childnode refid="4483" relation="include">
        </childnode>
      </node>
      <node id="4500">
        <label>util.h</label>
        <link refid="d8/d3c/util_8h"/>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4501" relation="include">
        </childnode>
        <childnode refid="4494" relation="include">
        </childnode>
      </node>
      <node id="4481">
        <label>qintdict.h</label>
      </node>
      <node id="4484">
        <label>qiodevice.h</label>
      </node>
      <node id="4516">
        <label>rtfdocvisitor.h</label>
        <link refid="d1/da7/rtfdocvisitor_8h_source"/>
        <childnode refid="4517" relation="include">
        </childnode>
        <childnode refid="4474" relation="include">
        </childnode>
        <childnode refid="4477" relation="include">
        </childnode>
      </node>
      <node id="4487">
        <label>config.h</label>
        <link refid="db/d16/config_8h_source"/>
        <childnode refid="4488" relation="include">
        </childnode>
        <childnode refid="4480" relation="include">
        </childnode>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4482" relation="include">
        </childnode>
      </node>
      <node id="4499">
        <label>sys/types.h</label>
      </node>
      <node id="4511">
        <label>qqueue.h</label>
      </node>
      <node id="4514">
        <label>pagedef.h</label>
        <link refid="dd/d66/pagedef_8h_source"/>
        <childnode refid="4496" relation="include">
        </childnode>
        <childnode refid="4479" relation="include">
        </childnode>
      </node>
      <node id="4494">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="4477" relation="include">
        </childnode>
      </node>
      <node id="4476">
        <label>qlist.h</label>
      </node>
      <node id="4482">
        <label>ftextstream.h</label>
        <link refid="df/d83/ftextstream_8h_source"/>
        <childnode refid="4483" relation="include">
        </childnode>
        <childnode refid="4484" relation="include">
        </childnode>
        <childnode refid="4485" relation="include">
        </childnode>
        <childnode refid="4486" relation="include">
        </childnode>
      </node>
      <node id="4502">
        <label>diagram.h</label>
        <link refid="d9/d1b/diagram_8h_source"/>
        <childnode refid="4503" relation="include">
        </childnode>
      </node>
      <node id="4471">
        <label>qtextstream.h</label>
      </node>
      <node id="4490">
        <label>doxygen.h</label>
        <link refid="d1/da1/doxygen_8h_source"/>
        <childnode refid="4491" relation="include">
        </childnode>
        <childnode refid="4492" relation="include">
        </childnode>
        <childnode refid="4488" relation="include">
        </childnode>
        <childnode refid="4480" relation="include">
        </childnode>
        <childnode refid="4481" relation="include">
        </childnode>
        <childnode refid="4482" relation="include">
        </childnode>
        <childnode refid="4479" relation="include">
        </childnode>
        <childnode refid="4493" relation="include">
        </childnode>
        <childnode refid="4495" relation="include">
        </childnode>
        <childnode refid="4497" relation="include">
        </childnode>
      </node>
      <node id="4498">
        <label>memberdef.h</label>
        <link refid="d4/d46/memberdef_8h_source"/>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4499" relation="include">
        </childnode>
        <childnode refid="4494" relation="include">
        </childnode>
        <childnode refid="4496" relation="include">
        </childnode>
      </node>
      <node id="4528">
        <label>filedef.h</label>
        <link refid="d4/d3a/filedef_8h_source"/>
        <childnode refid="4475" relation="include">
        </childnode>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4481" relation="include">
        </childnode>
        <childnode refid="4480" relation="include">
        </childnode>
        <childnode refid="4496" relation="include">
        </childnode>
        <childnode refid="4479" relation="include">
        </childnode>
        <childnode refid="4497" relation="include">
        </childnode>
      </node>
      <node id="4525">
        <label>groupdef.h</label>
        <link refid="d1/de6/groupdef_8h_source"/>
        <childnode refid="4479" relation="include">
        </childnode>
        <childnode refid="4496" relation="include">
        </childnode>
      </node>
      <node id="4501">
        <label>ctype.h</label>
      </node>
      <node id="4478">
        <label>section.h</label>
        <link refid="d1/d2a/section_8h_source"/>
        <childnode refid="4479" relation="include">
        </childnode>
      </node>
      <node id="4512">
        <label>qthread.h</label>
      </node>
      <node id="4472">
        <label>rtfgen.h</label>
        <link refid="d4/daa/rtfgen_8h_source"/>
        <childnode refid="4473" relation="include">
        </childnode>
      </node>
      <node id="4496">
        <label>definition.h</label>
        <link refid="df/da1/definition_8h_source"/>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4480" relation="include">
        </childnode>
        <childnode refid="4494" relation="include">
        </childnode>
      </node>
      <node id="4475">
        <label>index.h</label>
        <link refid="d1/db5/index_8h_source"/>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4477" relation="include">
        </childnode>
      </node>
      <node id="4495">
        <label>dirdef.h</label>
        <link refid="d6/d15/dirdef_8h_source"/>
        <childnode refid="4479" relation="include">
        </childnode>
        <childnode refid="4496" relation="include">
        </childnode>
        <childnode refid="4476" relation="include">
        </childnode>
      </node>
      <node id="4480">
        <label>qdict.h</label>
      </node>
      <node id="4524">
        <label>portable.h</label>
        <link refid="d2/de2/portable_8h"/>
        <childnode refid="4499" relation="include">
        </childnode>
        <childnode refid="4483" relation="include">
        </childnode>
        <childnode refid="4503" relation="include">
        </childnode>
      </node>
      <node id="4510">
        <label>qmutex.h</label>
      </node>
      <node id="4519">
        <label>htmlattrib.h</label>
        <link refid="d0/d73/htmlattrib_8h_source"/>
        <childnode refid="4477" relation="include">
        </childnode>
        <childnode refid="4476" relation="include">
        </childnode>
      </node>
      <node id="4483">
        <label>stdio.h</label>
      </node>
      <node id="4520">
        <label>vhdldocgen.h</label>
        <link refid="dd/dec/vhdldocgen_8h_source"/>
        <childnode refid="4480" relation="include">
        </childnode>
        <childnode refid="4477" relation="include">
        </childnode>
        <childnode refid="4521" relation="include">
        </childnode>
        <childnode refid="4522" relation="include">
        </childnode>
        <childnode refid="4523" relation="include">
        </childnode>
      </node>
      <node id="4521">
        <label>layout.h</label>
        <link refid="db/d51/layout_8h_source"/>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4494" relation="include">
        </childnode>
      </node>
      <node id="4505">
        <label>translator.h</label>
        <link refid="d9/df1/translator_8h_source"/>
        <childnode refid="4506" relation="include">
        </childnode>
      </node>
      <node id="4529">
        <label>namespacedef.h</label>
        <link refid="d7/d97/namespacedef_8h_source"/>
        <childnode refid="4488" relation="include">
        </childnode>
        <childnode refid="4480" relation="include">
        </childnode>
        <childnode refid="4479" relation="include">
        </childnode>
        <childnode refid="4496" relation="include">
        </childnode>
      </node>
      <node id="4522">
        <label>arguments.h</label>
        <link refid="df/d9b/arguments_8h_source"/>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4477" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d0/d9c/rtfgen_8cpp_1a8e937453cd49cd7e753fa4e9d77d3c38" prot="public" static="no">
        <name>DBG_RTF</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp" line="48" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d0/d9c/rtfgen_8cpp_1a2996b202ffa4a28fb842837caae8fa0f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>static QCString dateToRTFDateString</definition>
        <argsstring>()</argsstring>
        <name>dateToRTFDateString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp" line="51" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp" bodystart="50" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="d0/d9c/rtfgen_8cpp_1af926c5c6e881ff9d1ce9e8e26bd9c0a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>static QCString makeIndexName</definition>
        <argsstring>(const char *s, int i)</argsstring>
        <name>makeIndexName</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp" line="205" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp" bodystart="204" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="d0/d9c/rtfgen_8cpp_1abe03bf3096ce8ecd54bd585fced49356" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isLeadBytes</definition>
        <argsstring>(int c)</argsstring>
        <name>isLeadBytes</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp" line="2240" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp" bodystart="2239" bodyend="2267"/>
      </memberdef>
      <memberdef kind="function" id="d0/d9c/rtfgen_8cpp_1a3f2842e42f3365ae0ed55e0825c2bb16" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void encodeForOutput</definition>
        <argsstring>(FTextStream &amp;t, const QCString &amp;s)</argsstring>
        <name>encodeForOutput</name>
        <param>
          <type><ref refid="dc/d3c/class_f_text_stream" kindref="compound">FTextStream</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp" line="2272" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp" bodystart="2271" bodyend="2329"/>
      </memberdef>
      <memberdef kind="function" id="d0/d9c/rtfgen_8cpp_1ad2ad3f231d52ef51949e1cc2f52ad941" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool preProcessFile</definition>
        <argsstring>(QDir &amp;d, QCString &amp;infName, FTextStream &amp;t, bool bIncludeHeader=TRUE)</argsstring>
        <name>preProcessFile</name>
        <param>
          <type>QDir &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>QCString &amp;</type>
          <declname>infName</declname>
        </param>
        <param>
          <type><ref refid="dc/d3c/class_f_text_stream" kindref="compound">FTextStream</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bIncludeHeader</declname>
          <defval>TRUE</defval>
        </param>
        <briefdescription>
<para>VERY brittle routine inline RTF&apos;s included by other RTF&apos;s. </para>        </briefdescription>
        <detaileddescription>
<para>it is recursive and ugly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp" line="2336" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp" bodystart="2335" bodyend="2400"/>
      </memberdef>
      <memberdef kind="function" id="d0/d9c/rtfgen_8cpp_1a6c46025b4ad3cde983f30c1a70a10d28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testRTFOutput</definition>
        <argsstring>(const char *name)</argsstring>
        <name>testRTFOutput</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Tests the integrity of the result by counting brackets. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp" line="2503" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp" bodystart="2502" bodyend="2541"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>rtfgen.cpp,v<sp/>1.14<sp/>2001/03/19<sp/>19:27:41<sp/>root<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1997-2013<sp/>by<sp/>Parker<sp/>Waechter<sp/>&amp;<sp/>Dimitri<sp/>van<sp/>Heesch.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Style<sp/>sheet<sp/>additions<sp/>by<sp/>Alexander<sp/>Bartolich</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and<sp/>distribute<sp/>this<sp/>software<sp/>and<sp/>its</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>documentation<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>is<sp/>hereby</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>granted.<sp/>No<sp/>representations<sp/>are<sp/>made<sp/>about<sp/>the<sp/>suitability<sp/>of<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>for<sp/>any<sp/>purpose.<sp/>It<sp/>is<sp/>provided<sp/>&quot;as<sp/>is&quot;<sp/>without<sp/>express<sp/>or<sp/>implied<sp/>warranty.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Documents<sp/>produced<sp/>by<sp/>Doxygen<sp/>are<sp/>derivative<sp/>works<sp/>derived<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>input<sp/>used<sp/>in<sp/>their<sp/>production;<sp/>they<sp/>are<sp/>not<sp/>affected<sp/>by<sp/>this<sp/>license.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qdir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qregexp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qtextstream.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rtfgen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;message.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;doxygen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d3c/util_8h" kindref="compound" tooltip="A bunch of utility functions.">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;diagram.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;language.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dot.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;version.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pagedef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rtfstyle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rtfdocvisitor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;docparser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dirdef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vhdldocgen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/de2/portable_8h" kindref="compound" tooltip="Portable versions of functions that are platform dependent.">portable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;groupdef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;classlist.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;filename.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;namespacedef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DBG_RTF(x)<sp/>x;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBG_RTF(x)</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QCString<sp/>dateToRTFDateString()</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QDateTime<sp/>&amp;d<sp/>=<sp/>QDateTime::currentDateTime();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>QCString<sp/>result;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>result.sprintf(</highlight><highlight class="stringliteral">&quot;\\yr%d\\mo%d\\dy%d\\hr%d\\min%d\\sec%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.date().year(),<sp/>d.date().month(),<sp/>d.date().day(),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d.time().hour(),d.time().minute(),d.time().second());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">RTFGenerator::RTFGenerator()<sp/>:<sp/><ref refid="d3/d8e/class_output_generator" kindref="compound" tooltip="Abstract output generator.">OutputGenerator</ref>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>dir=Config_getString(</highlight><highlight class="stringliteral">&quot;RTF_OUTPUT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>col=0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//insideTabbing=FALSE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>m_listLevel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>m_bstartedBody<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>m_omitParagraph<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>m_numCols<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">RTFGenerator::~RTFGenerator()</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>RTFGenerator::append(const<sp/>OutputGenerator<sp/>*g)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>g-&gt;getContents();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>col+=((RTFGenerator<sp/>*)g)-&gt;col;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//insideTabbing=insideTabbing<sp/>||<sp/>((RTFGenerator<sp/>*)g)-&gt;insideTabbing;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>m_listLevel=((RTFGenerator<sp/>*)g)-&gt;m_listLevel;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>m_omitParagraph=((RTFGenerator<sp/>*)g)-&gt;m_omitParagraph;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//printf(&quot;RTFGenerator::append(%s)<sp/>insideTabbing=%s\n&quot;,<sp/>g-&gt;getContents().data(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/><sp/><sp/><sp/>insideTabbing<sp/>?<sp/>&quot;TRUE&quot;<sp/>:<sp/>&quot;FALSE&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//OutputGenerator<sp/>*RTFGenerator::copy()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>RTFGenerator<sp/>*result<sp/>=<sp/>new<sp/>RTFGenerator;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//result-&gt;insideTabbing=insideTabbing;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>result-&gt;m_listLevel=m_listLevel;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>result-&gt;m_omitParagraph=m_omitParagraph;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>result;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::writeStyleSheetFile(QFile<sp/>&amp;file)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>QTextStream<sp/>t(&amp;file);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Generated<sp/>by<sp/>doxygen<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>versionString<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>This<sp/>file<sp/>describes<sp/>styles<sp/>used<sp/>for<sp/>generating<sp/>RTF<sp/>output.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>All<sp/>text<sp/>after<sp/>a<sp/>hash<sp/>(#)<sp/>is<sp/>considered<sp/>a<sp/>comment<sp/>and<sp/>will<sp/>be<sp/>ignored.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Remove<sp/>a<sp/>hash<sp/>to<sp/>activate<sp/>a<sp/>line.\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i=0<sp/>;<sp/>rtf_Style_Default[i].reference!=0<sp/>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Default[i].name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>rtf_Style_Default[i].reference</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>rtf_Style_Default[i].definition<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::writeExtensionsFile(QFile<sp/>&amp;file)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>QTextStream<sp/>t(&amp;file);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Generated<sp/>by<sp/>doxygen<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>versionString<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>This<sp/>file<sp/>describes<sp/>extensions<sp/>used<sp/>for<sp/>generating<sp/>RTF<sp/>output.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>All<sp/>text<sp/>after<sp/>a<sp/>hash<sp/>(#)<sp/>is<sp/>considered<sp/>a<sp/>comment<sp/>and<sp/>will<sp/>be<sp/>ignored.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Remove<sp/>a<sp/>hash<sp/>to<sp/>activate<sp/>a<sp/>line.\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Overrides<sp/>the<sp/>project<sp/>title.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#Title<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Name<sp/>of<sp/>the<sp/>company<sp/>that<sp/>produced<sp/>this<sp/>document.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#Company<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Filename<sp/>of<sp/>a<sp/>company<sp/>or<sp/>project<sp/>logo.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#LogoFilename<sp/><sp/><sp/><sp/>=<sp/>\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Author<sp/>of<sp/>the<sp/>document.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#Author<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Type<sp/>of<sp/>document<sp/>(e.g.<sp/>Design<sp/>Specification,<sp/>User<sp/>Manual,<sp/>etc.).\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#DocumentType<sp/><sp/><sp/><sp/>=<sp/>\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Document<sp/>tracking<sp/>number.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#DocumentId<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Name<sp/>of<sp/>the<sp/>author&apos;s<sp/>manager.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>This<sp/>field<sp/>is<sp/>not<sp/>displayed<sp/>in<sp/>the<sp/>document<sp/>itself,<sp/>but<sp/>it<sp/>is<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>available<sp/>in<sp/>the<sp/>information<sp/>block<sp/>of<sp/>the<sp/>rtf<sp/>file.<sp/><sp/>In<sp/>Microsoft<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Word,<sp/>it<sp/>is<sp/>available<sp/>under<sp/>File:Properties.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#Manager<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Subject<sp/>of<sp/>the<sp/>document.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>This<sp/>field<sp/>is<sp/>not<sp/>displayed<sp/>in<sp/>the<sp/>document<sp/>itself,<sp/>but<sp/>it<sp/>is<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>available<sp/>in<sp/>the<sp/>information<sp/>block<sp/>of<sp/>the<sp/>rtf<sp/>file.<sp/><sp/>In<sp/>Microsoft<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Word,<sp/>it<sp/>is<sp/>available<sp/>under<sp/>File:Properties.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#Subject<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Comments<sp/>regarding<sp/>the<sp/>document.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>This<sp/>field<sp/>is<sp/>not<sp/>displayed<sp/>in<sp/>the<sp/>document<sp/>itself,<sp/>but<sp/>it<sp/>is<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>available<sp/>in<sp/>the<sp/>information<sp/>block<sp/>of<sp/>the<sp/>rtf<sp/>file.<sp/><sp/>In<sp/>Microsoft<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Word,<sp/>it<sp/>is<sp/>available<sp/>under<sp/>File:Properties.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#Comments<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Keywords<sp/>associated<sp/>with<sp/>the<sp/>document.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>This<sp/>field<sp/>is<sp/>not<sp/>displayed<sp/>in<sp/>the<sp/>document<sp/>itself,<sp/>but<sp/>it<sp/>is<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>available<sp/>in<sp/>the<sp/>information<sp/>block<sp/>of<sp/>the<sp/>rtf<sp/>file.<sp/><sp/>In<sp/>Microsoft<sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>Word,<sp/>it<sp/>is<sp/>available<sp/>under<sp/>File:Properties.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#Keywords<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::init()</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>QCString<sp/>dir=Config_getString(</highlight><highlight class="stringliteral">&quot;RTF_OUTPUT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>QDir<sp/>d(dir);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d.exists()<sp/>&amp;&amp;<sp/>!d.mkdir(dir))</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>create<sp/>output<sp/>directory<sp/>%s\n&quot;</highlight><highlight class="normal">,dir.data());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>rtf_Style.setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>duplicate<sp/>strings<sp/>of<sp/>rtf_Style_Default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d3/d40/struct_rtf___style___default" kindref="compound">Rtf_Style_Default</ref>*<sp/>def<sp/>=<sp/>rtf_Style_Default;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(def-&gt;reference<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(def-&gt;definition<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;Internal:<sp/>rtf_Style_Default[%s]<sp/>has<sp/>no<sp/>definition.\n&quot;</highlight><highlight class="normal">,<sp/>def-&gt;name);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/dd8/struct_style_data" kindref="compound">StyleData</ref>*<sp/>styleData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="da/dd8/struct_style_data" kindref="compound">StyleData</ref>(def-&gt;reference,<sp/>def-&gt;definition);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>rtf_Style.insert(def-&gt;name,<sp/>styleData);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>def++;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>overwrite<sp/>some<sp/>(or<sp/>all)<sp/>definitions<sp/>from<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>QCString<sp/>&amp;rtfStyleSheetFile<sp/>=<sp/>Config_getString(</highlight><highlight class="stringliteral">&quot;RTF_STYLESHEET_FILE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rtfStyleSheetFile.isEmpty())</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>loadStylesheet(rtfStyleSheetFile,<sp/>rtf_Style);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>user<sp/>has<sp/>defined<sp/>an<sp/>extension<sp/>file,<sp/>load<sp/>its<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>QCString<sp/>&amp;rtfExtensionsFile<sp/>=<sp/>Config_getString(</highlight><highlight class="stringliteral">&quot;RTF_EXTENSIONS_FILE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rtfExtensionsFile.isEmpty())</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>loadExtensions(rtfExtensionsFile);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>createSubDirs(d);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QCString<sp/>makeIndexName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>QCString<sp/>result=s;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>result+=(char)(i+</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::beginRTFDocument()</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>all<sp/>the<sp/>included<sp/>RTF<sp/>files<sp/>should<sp/>begin<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/>*<sp/>same<sp/>header</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;{\\rtf1\\ansi\\ansicpg&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;<ref refid="d8/dfb/class_translator_1a9953a4c0e6a4fc7d017abcd5c2939e0f" kindref="member">trRTFansicp</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;\\uc1<sp/>\\deff0\\deflang1033\\deflangfe1033\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;{\\comment<sp/>Beginning<sp/>font<sp/>list}\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;&quot;{\\fonttbl<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">{\\f0\\froman\\fcharset</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>theTranslator-&gt;trRTFCharSet();</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\fprq2{\\*\\panose<sp/>02020603050405020304}Times<sp/>New<sp/>Roman;}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">{\\f1\\fswiss\\fcharset</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>theTranslator-&gt;trRTFCharSet();</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\fprq2{\\*\\panose<sp/>020b0604020202020204}Arial;}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">{\\f2\\fmodern\\fcharset</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>theTranslator-&gt;trRTFCharSet();</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\fprq1{\\*\\panose<sp/>02070309020205020404}Courier<sp/>New;}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">{\\f3\\froman\\fcharset2\\fprq2{\\*\\panose<sp/>05050102010706020507}Symbol;}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">{\\comment<sp/>begin<sp/>colors}\n</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">{\\colortbl;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red0\\green0\\blue0;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red0\\green0\\blue255;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red0\\green255\\blue255;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red0\\green255\\blue0;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red255\\green0\\blue255;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red255\\green0\\blue0;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red255\\green255\\blue0;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red255\\green255\\blue255;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red0\\green0\\blue128;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red0\\green128\\blue128;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red0\\green128\\blue0;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red128\\green0\\blue128;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red128\\green0\\blue0;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red128\\green128\\blue0;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red128\\green128\\blue128;</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\red192\\green192\\blue192;}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">{\\comment<sp/>Beginning<sp/>style<sp/>list}\n</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">{\\stylesheet\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="250"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">{\\widctlpar\\adjustright<sp/>\\fs20\\cgrid<sp/>\\snext0<sp/>Normal;}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="251"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral"><sp/><sp/>//<sp/>sort<sp/>styles<sp/>ascending<sp/>by<sp/>\s-number<sp/>via<sp/>an<sp/>intermediate<sp/>QArray</highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral"><sp/><sp/>QArray&lt;const<sp/>StyleData*&gt;<sp/>array(128);</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"><sp/><sp/>array.fill(0);</highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/>QDictIterator&lt;StyleData&gt;<sp/>iter(rtf_Style);</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/>const<sp/>StyleData*<sp/>style;</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/>for(;<sp/>(style<sp/>=<sp/>iter.current());<sp/>++iter)</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>unsigned<sp/>index<sp/>=<sp/>style-&gt;index;</highlight></codeline>
<codeline lineno="260"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>unsigned<sp/>size<sp/>=<sp/>array.size();</highlight></codeline>
<codeline lineno="261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(index<sp/>&gt;=<sp/>size)</highlight></codeline>
<codeline lineno="262"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>+1<sp/>to<sp/>add<sp/>at<sp/>least<sp/>one<sp/>element,<sp/>then<sp/>align<sp/>up<sp/>to<sp/>multiple<sp/>of<sp/>8</highlight></codeline>
<codeline lineno="264"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>array.resize((index<sp/>+<sp/>1<sp/>+<sp/>7)<sp/>&amp;<sp/>~7);</highlight></codeline>
<codeline lineno="265"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>array.fill(0,<sp/>size);</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(index<sp/>&lt;<sp/>array.size());</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(array.at(index)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>key(iter.currentKey());</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>msg(&quot;</highlight><highlight class="normal">Style<sp/></highlight><highlight class="stringliteral">&apos;%s&apos;</highlight><highlight class="normal"><sp/>redefines<sp/>\\s%d.\n</highlight><highlight class="stringliteral">&quot;,<sp/>key.data(),<sp/>index);</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>array.at(index)<sp/>=<sp/>style;</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/>//<sp/>write<sp/>array<sp/>elements</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/>unsigned<sp/>size<sp/>=<sp/>array.size();</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/>for(unsigned<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++)</highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>const<sp/>StyleData*<sp/>style<sp/>=<sp/>array.at(i);</highlight></codeline>
<codeline lineno="281"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(style<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="282"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>style-&gt;reference<sp/>&lt;&lt;<sp/>style-&gt;definition<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">;}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="285"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/>//<sp/>this<sp/>comment<sp/>is<sp/>needed<sp/>for<sp/>postprocessing!</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">{\\comment<sp/>begin<sp/>body}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral">void<sp/>RTFGenerator::beginRTFChapter()</highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>BeginRTFChapter}\n</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset;</highlight></codeline>
<codeline lineno="296"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"><sp/><sp/>//<sp/>if<sp/>we<sp/>are<sp/>compact,<sp/>no<sp/>extra<sp/>page<sp/>breaks...</highlight></codeline>
<codeline lineno="298"><highlight class="stringliteral"><sp/><sp/>if<sp/>(Config_getBool(&quot;</highlight><highlight class="normal">COMPACT_RTF</highlight><highlight class="stringliteral">&quot;))</highlight></codeline>
<codeline lineno="299"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\sect\\sectd\\sbknone\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\sect\\sbknone\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>rtfwriteRuler_thick();</highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="stringliteral"><sp/><sp/>else</highlight></codeline>
<codeline lineno="305"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\sect\\sbkpage\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="306"><highlight class="stringliteral"><sp/><sp/>//t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\sect\\sectd\\sbkpage\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="307"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="308"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style[&quot;</highlight><highlight class="normal">Heading1</highlight><highlight class="stringliteral">&quot;]-&gt;reference<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="309"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="310"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral">void<sp/>RTFGenerator::beginRTFSection()</highlight></codeline>
<codeline lineno="312"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="313"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>BeginRTFSection}\n</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset;</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/>//<sp/>if<sp/>we<sp/>are<sp/>compact,<sp/>no<sp/>extra<sp/>page<sp/>breaks...</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/>if<sp/>(Config_getBool(&quot;</highlight><highlight class="normal">COMPACT_RTF</highlight><highlight class="stringliteral">&quot;))</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\sect\\sectd\\sbknone\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\sect\\sbknone\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>rtfwriteRuler_emboss();</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"><sp/><sp/>else</highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\sect\\sbkpage\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/>//t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\sect\\sectd\\sbkpage\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style[&quot;</highlight><highlight class="normal">Heading2</highlight><highlight class="stringliteral">&quot;]-&gt;reference<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral">void<sp/>RTFGenerator::startFile(const<sp/>char<sp/>*name,const<sp/>char<sp/>*,const<sp/>char<sp/>*)</highlight></codeline>
<codeline lineno="332"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="333"><highlight class="stringliteral"><sp/><sp/>//setEncoding(QCString().sprintf(&quot;</highlight><highlight class="normal">CP%s</highlight><highlight class="stringliteral">&quot;,theTranslator-&gt;trRTFansicp()));</highlight></codeline>
<codeline lineno="334"><highlight class="stringliteral"><sp/><sp/>QCString<sp/>fileName=name;</highlight></codeline>
<codeline lineno="335"><highlight class="stringliteral"><sp/><sp/>relPath<sp/>=<sp/>relativePathToRoot(fileName);</highlight></codeline>
<codeline lineno="336"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"><sp/><sp/>if<sp/>(fileName.right(4)!=&quot;</highlight><highlight class="normal">.rtf</highlight><highlight class="stringliteral">&quot;<sp/>)<sp/>fileName+=&quot;</highlight><highlight class="normal">.rtf</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"><sp/><sp/>startPlainFile(fileName);</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/>beginRTFDocument();</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral">void<sp/>RTFGenerator::endFile()</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>endFile}\n</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="347"><highlight class="stringliteral"><sp/><sp/>endPlainFile();</highlight></codeline>
<codeline lineno="348"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="349"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="350"><highlight class="stringliteral">void<sp/>RTFGenerator::startProjectNumber()</highlight></codeline>
<codeline lineno="351"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="352"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">{\\comment<sp/>startProjectNumber<sp/>}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="353"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="354"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="355"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="356"><highlight class="stringliteral">void<sp/>RTFGenerator::endProjectNumber()</highlight></codeline>
<codeline lineno="357"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="358"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">{\\comment<sp/>endProjectNumber<sp/>}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="359"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="360"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="361"><highlight class="stringliteral">void<sp/>RTFGenerator::startIndexSection(IndexSections<sp/>is)</highlight></codeline>
<codeline lineno="362"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="363"><highlight class="stringliteral"><sp/><sp/>//QCString<sp/>paperName;</highlight></codeline>
<codeline lineno="364"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="365"><highlight class="stringliteral"><sp/><sp/>m_listLevel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="366"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="367"><highlight class="stringliteral"><sp/><sp/>switch<sp/>(is)</highlight></codeline>
<codeline lineno="368"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isTitlePageStart:</highlight></codeline>
<codeline lineno="370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>basic<sp/>RTFstart</highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>get<sp/>readyfor<sp/>author<sp/>etc</highlight></codeline>
<codeline lineno="372"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\info<sp/>\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\title<sp/>{\\comment<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="375"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isTitlePageAuthor:</highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rtf_subject)<sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\subject<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;&lt;<sp/>rtf_subject<sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rtf_comments)<sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;&lt;<sp/>rtf_comments<sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rtf_company)<sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\company<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;&lt;<sp/>rtf_company<sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rtf_author)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\author<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;&lt;<sp/>rtf_author<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rtf_manager)<sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\manager<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;&lt;<sp/>rtf_manager<sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rtf_documentType)<sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\category<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>rtf_documentType<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rtf_keywords)<sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\keywords<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>rtf_keywords<sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="386"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="387"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isMainPage:</highlight></codeline>
<codeline lineno="388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//Introduction</highlight></codeline>
<codeline lineno="389"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="390"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="391"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>//case<sp/>isPackageIndex:</highlight></codeline>
<codeline lineno="392"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>//<sp/><sp/>//Package<sp/>Index</highlight></codeline>
<codeline lineno="393"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>//<sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="394"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>//<sp/><sp/>break;</highlight></codeline>
<codeline lineno="395"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isModuleIndex:</highlight></codeline>
<codeline lineno="396"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//Module<sp/>Index</highlight></codeline>
<codeline lineno="397"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="398"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="399"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isDirIndex:</highlight></codeline>
<codeline lineno="400"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//Directory<sp/>Index</highlight></codeline>
<codeline lineno="401"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="402"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="403"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isNamespaceIndex:</highlight></codeline>
<codeline lineno="404"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//Namespace<sp/>Index</highlight></codeline>
<codeline lineno="405"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="406"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="407"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isClassHierarchyIndex:</highlight></codeline>
<codeline lineno="408"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//Hierarchical<sp/>Index</highlight></codeline>
<codeline lineno="409"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>start<sp/>classhierarchy}\n</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="410"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="411"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="412"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isCompoundIndex:</highlight></codeline>
<codeline lineno="413"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//Annotated<sp/>Compound<sp/>Index</highlight></codeline>
<codeline lineno="414"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="415"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="416"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isFileIndex:</highlight></codeline>
<codeline lineno="417"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//Annotated<sp/>File<sp/>Index</highlight></codeline>
<codeline lineno="418"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="419"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="420"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isPageIndex:</highlight></codeline>
<codeline lineno="421"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//Related<sp/>Page<sp/>Index</highlight></codeline>
<codeline lineno="422"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="423"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="424"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isModuleDocumentation:</highlight></codeline>
<codeline lineno="425"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Module<sp/>Documentation</highlight></codeline>
<codeline lineno="427"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GroupSDict::Iterator<sp/>gli(*Doxygen::groupSDict);</highlight></codeline>
<codeline lineno="428"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GroupDef<sp/>*gd;</highlight></codeline>
<codeline lineno="429"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>found=FALSE;</highlight></codeline>
<codeline lineno="430"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(gli.toFirst();(gd=gli.current())<sp/>&amp;&amp;<sp/>!found;++gli)</highlight></codeline>
<codeline lineno="431"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!gd-&gt;isReference())</highlight></codeline>
<codeline lineno="433"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="435"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found=TRUE;</highlight></codeline>
<codeline lineno="436"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="440"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isDirDocumentation:</highlight></codeline>
<codeline lineno="441"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Directory<sp/>Documentation</highlight></codeline>
<codeline lineno="443"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDict&lt;DirDef&gt;::Iterator<sp/>dli(*Doxygen::directories);</highlight></codeline>
<codeline lineno="444"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DirDef<sp/>*dd;</highlight></codeline>
<codeline lineno="445"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>found=FALSE;</highlight></codeline>
<codeline lineno="446"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(dli.toFirst();(dd=dli.current())<sp/>&amp;&amp;<sp/>!found;++dli)</highlight></codeline>
<codeline lineno="447"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(dd-&gt;isLinkableInProject())</highlight></codeline>
<codeline lineno="449"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="451"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found=TRUE;</highlight></codeline>
<codeline lineno="452"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="456"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isNamespaceDocumentation:</highlight></codeline>
<codeline lineno="457"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Namespace<sp/>Documentation</highlight></codeline>
<codeline lineno="459"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NamespaceSDict::Iterator<sp/>nli(*Doxygen::namespaceSDict);</highlight></codeline>
<codeline lineno="460"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NamespaceDef<sp/>*nd;</highlight></codeline>
<codeline lineno="461"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>found=FALSE;</highlight></codeline>
<codeline lineno="462"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(nli.toFirst();(nd=nli.current())<sp/>&amp;&amp;<sp/>!found;++nli)</highlight></codeline>
<codeline lineno="463"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(nd-&gt;isLinkableInProject())</highlight></codeline>
<codeline lineno="465"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="467"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found=TRUE;</highlight></codeline>
<codeline lineno="468"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="472"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isClassDocumentation:</highlight></codeline>
<codeline lineno="473"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Compound<sp/>Documentation</highlight></codeline>
<codeline lineno="475"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassSDict::Iterator<sp/>cli(*Doxygen::classSDict);</highlight></codeline>
<codeline lineno="476"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassDef<sp/>*cd=0;</highlight></codeline>
<codeline lineno="477"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>found=FALSE;</highlight></codeline>
<codeline lineno="478"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(cli.toFirst();(cd=cli.current())<sp/>&amp;&amp;<sp/>!found;++cli)</highlight></codeline>
<codeline lineno="479"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(cd-&gt;isLinkableInProject()<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="481"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd-&gt;templateMaster()==0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="482"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!cd-&gt;isEmbeddedInOuterScope()</highlight></codeline>
<codeline lineno="483"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="484"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="486"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found=TRUE;</highlight></codeline>
<codeline lineno="487"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="491"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isFileDocumentation:</highlight></codeline>
<codeline lineno="492"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//File<sp/>Documentation</highlight></codeline>
<codeline lineno="494"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>isFirst=TRUE;</highlight></codeline>
<codeline lineno="495"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FileName<sp/>*fn=Doxygen::inputNameList-&gt;first();</highlight></codeline>
<codeline lineno="496"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(fn)</highlight></codeline>
<codeline lineno="497"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FileDef<sp/>*fd=fn-&gt;first();</highlight></codeline>
<codeline lineno="499"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(fd)</highlight></codeline>
<codeline lineno="500"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(fd-&gt;isLinkableInProject())</highlight></codeline>
<codeline lineno="502"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(isFirst)</highlight></codeline>
<codeline lineno="504"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="506"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isFirst=FALSE;</highlight></codeline>
<codeline lineno="507"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="508"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd=fn-&gt;next();</highlight></codeline>
<codeline lineno="511"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn=Doxygen::inputNameList-&gt;next();</highlight></codeline>
<codeline lineno="513"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="516"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isExampleDocumentation:</highlight></codeline>
<codeline lineno="517"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Example<sp/>Documentation</highlight></codeline>
<codeline lineno="519"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="520"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="522"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isPageDocumentation:</highlight></codeline>
<codeline lineno="523"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Page<sp/>Documentation</highlight></codeline>
<codeline lineno="525"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="526"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="528"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isPageDocumentation2:</highlight></codeline>
<codeline lineno="529"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\tc<sp/>\\v<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="531"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="533"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isEndIndex:</highlight></codeline>
<codeline lineno="534"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="535"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="537"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="538"><highlight class="stringliteral">void<sp/>RTFGenerator::endIndexSection(IndexSections<sp/>is)</highlight></codeline>
<codeline lineno="539"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="540"><highlight class="stringliteral"><sp/><sp/>bool<sp/>fortranOpt<sp/>=<sp/>Config_getBool(&quot;</highlight><highlight class="normal">OPTIMIZE_FOR_FORTRAN</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="541"><highlight class="stringliteral"><sp/><sp/>bool<sp/>vhdlOpt<sp/><sp/><sp/><sp/>=<sp/>Config_getBool(&quot;</highlight><highlight class="normal">OPTIMIZE_OUTPUT_VHDL</highlight><highlight class="stringliteral">&quot;);<sp/><sp/></highlight></codeline>
<codeline lineno="542"><highlight class="stringliteral"><sp/><sp/>switch<sp/>(is)</highlight></codeline>
<codeline lineno="543"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isTitlePageStart:</highlight></codeline>
<codeline lineno="545"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rtf_title)</highlight></codeline>
<codeline lineno="546"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>User<sp/>has<sp/>overridden<sp/>document<sp/>title<sp/>in<sp/>extensions<sp/>file</highlight></codeline>
<codeline lineno="547"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>rtf_title;</highlight></codeline>
<codeline lineno="548"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="549"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>Config_getString(&quot;</highlight><highlight class="normal">PROJECT_NAME</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="550"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="551"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isTitlePageAuthor:</highlight></codeline>
<codeline lineno="552"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">Doxgyen.<sp/>}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="554"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\creatim<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>dateToRTFDateString()<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}\n}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="555"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>end<sp/>of<sp/>infoblock}\n</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="556"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>setup<sp/>for<sp/>this<sp/>section</highlight></codeline>
<codeline lineno="557"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="558"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\\sectd\\pgnlcrm\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="559"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">{\\footer<sp/></highlight><highlight class="stringliteral">&quot;&lt;&lt;rtf_Style[&quot;</highlight><highlight class="normal">Footer</highlight><highlight class="stringliteral">&quot;]-&gt;reference<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\chpgn}}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="560"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>the<sp/>title<sp/>entry</highlight></codeline>
<codeline lineno="561"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>begin<sp/>title<sp/>page}\n</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="562"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="563"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="564"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_Style[&quot;</highlight><highlight class="normal">SubTitle</highlight><highlight class="stringliteral">&quot;]-&gt;reference<sp/>&lt;&lt;<sp/>endl;<sp/>//<sp/>set<sp/>to<sp/>title<sp/>style</highlight></codeline>
<codeline lineno="565"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="566"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\vertalc\\qc\\par\\par\\par\\par\\par\\par\\par\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="567"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(rtf_logoFilename)</highlight></codeline>
<codeline lineno="568"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\field\\flddirty<sp/>{\\*\\fldinst<sp/>INCLUDEPICTURE<sp/>\</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_logoFilename;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>\\\\d<sp/>\\\\*MERGEFORMAT}<sp/>{\\fldrslt<sp/>IMAGE<sp/>}}\\par\\par\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rtf_company)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_company<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par\\par\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_Style[</highlight><highlight class="stringliteral">&quot;Title&quot;</highlight><highlight class="normal">]-&gt;reference<sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>title<sp/>style</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit<sp/>{\\*\\fldinst<sp/>TITLE<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>TITLE}}\\par&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_Style[</highlight><highlight class="stringliteral">&quot;SubTitle&quot;</highlight><highlight class="normal">]-&gt;reference<sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>title<sp/>style</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rtf_documentType)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_documentType<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rtf_documentId)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_documentId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par\\par\\par\\par\\par\\par\\par\\par\\par\\par\\par\\par\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_Style[</highlight><highlight class="stringliteral">&quot;SubTitle&quot;</highlight><highlight class="normal">]-&gt;reference<sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>subtitle<sp/>style</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit<sp/>{\\*\\fldinst<sp/>AUTHOR<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>AUTHOR}}\\par&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Version<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Config_getString(</highlight><highlight class="stringliteral">&quot;PROJECT_NUMBER&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit<sp/>{\\*\\fldinst<sp/>CREATEDATE<sp/>\\\\*MERGEFORMAT}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;{\\fldrslt<sp/>CREATEDATE}}\\par&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\page\\page&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>End<sp/>title<sp/>page}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>table<sp/>of<sp/>contents<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>Table<sp/>of<sp/>contents}\n</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="602"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\vertalt\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="603"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="604"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style[&quot;</highlight><highlight class="normal">Heading1</highlight><highlight class="stringliteral">&quot;]-&gt;reference;</highlight></codeline>
<codeline lineno="605"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>theTranslator-&gt;trRTFTableOfContents()<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\par</highlight><highlight class="stringliteral">&quot;&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="606"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\par</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="607"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\field\\fldedit<sp/>{\\*\\fldinst<sp/>TOC<sp/>\\\\f<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>Table<sp/>of<sp/>contents}}\\par\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="608"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="609"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="611"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>isMainPage:</highlight></codeline>
<codeline lineno="612"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\par<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="613"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!Doxygen::mainPage<sp/>||<sp/>Doxygen::mainPage-&gt;title().isEmpty())</highlight></codeline>
<codeline lineno="614"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\tc<sp/>\\v<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>theTranslator-&gt;trMainPage()<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="616"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="618"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\tc<sp/>\\v<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>substitute(Doxygen::mainPage-&gt;title(),&quot;</highlight><highlight class="normal">%</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="stringliteral">&quot;)<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="620"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(Config_getBool(&quot;GENERATE_TREEVIEW&quot;))<sp/>t<sp/>&lt;&lt;<sp/>&quot;main&quot;;<sp/>else<sp/>t<sp/>&lt;&lt;<sp/>&quot;index&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//case<sp/>isPackageIndex:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\par<sp/>&quot;<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{\\tc<sp/>\\v<sp/>&quot;<sp/>&lt;&lt;<sp/>theTranslator-&gt;trPackageList()<sp/>&lt;&lt;<sp/>&quot;}&quot;&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;packages.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isModuleIndex:</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trModuleIndex()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;modules.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isDirIndex:</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trDirIndex()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;dirs.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isNamespaceIndex:</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fortranOpt)</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trModulesIndex()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trNamespaceIndex()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;namespaces.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isClassHierarchyIndex:</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trHierarchicalIndex()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;hierarchy.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isCompoundIndex:</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fortranOpt)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trCompoundIndexFortran()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vhdlOpt)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>VhdlDocGen::trDesignUnitIndex()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trCompoundIndex()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;annotated.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isFileIndex:</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trFileIndex()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;files.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isPageIndex:</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trPageIndex()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;pages.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isModuleDocumentation:</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GroupSDict::Iterator<sp/>gli(*Doxygen::groupSDict);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d09/class_group_def" kindref="compound" tooltip="A model of a group of symbols.">GroupDef</ref><sp/>*gd;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trModuleDocumentation()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gli.toFirst();(gd=gli.current());++gli)</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gd-&gt;<ref refid="d5/dcc/class_definition_1aeac1898371c546441cf689c1f66e359b" kindref="member">isReference</ref>())</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>gd-&gt;<ref refid="d8/d09/class_group_def_1a67914ef80cfb1958b5b5f36b13866b83" kindref="member">getOutputFileBase</ref>();</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isDirDocumentation:</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d50/class_s_dict" kindref="compound" tooltip="Ordered dictionary of elements of type T.">SDict&lt;DirDef&gt;::Iterator</ref><sp/>dli(*Doxygen::directories);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*dd;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trDirDocumentation()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(dli.toFirst();(dd=dli.current());++dli)</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dd-&gt;<ref refid="d4/dd4/class_dir_def_1a6f4bf73e2fd28f421f4359b0135187b6" kindref="member">isLinkableInProject</ref>())</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>dd-&gt;<ref refid="d4/dd4/class_dir_def_1a45b42037a0ed21aaba3950e7fb53fbd9" kindref="member">getOutputFileBase</ref>();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isNamespaceDocumentation:</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NamespaceSDict::Iterator<sp/>nli(*Doxygen::namespaceSDict);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d07/class_namespace_def" kindref="compound" tooltip="A model of a namespace symbol.">NamespaceDef</ref><sp/>*nd;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found=FALSE;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(nli.toFirst();(nd=nli.current())<sp/>&amp;&amp;<sp/>!found;++nli)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nd-&gt;<ref refid="d0/d07/class_namespace_def_1abdc3193c30d63172fd72c9ab38d22312" kindref="member">isLinkableInProject</ref>())</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>nd-&gt;<ref refid="d0/d07/class_namespace_def_1a3c7ccf4e29b4e6bfeaf2b17109f80f57" kindref="member">getOutputFileBase</ref>();</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found=TRUE;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((nd=nli.current()))</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nd-&gt;<ref refid="d0/d07/class_namespace_def_1abdc3193c30d63172fd72c9ab38d22312" kindref="member">isLinkableInProject</ref>())</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFSection();</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>nd-&gt;<ref refid="d0/d07/class_namespace_def_1a3c7ccf4e29b4e6bfeaf2b17109f80f57" kindref="member">getOutputFileBase</ref>();</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nli;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isClassDocumentation:</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassSDict::Iterator<sp/>cli(*Doxygen::classSDict);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref><sp/>*cd=0;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found=FALSE;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fortranOpt)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trTypeDocumentation()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trClassDocumentation()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cli.toFirst();(cd=cli.current())<sp/>&amp;&amp;<sp/>!found;++cli)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cd-&gt;<ref refid="d1/dcf/class_class_def_1acb4255cf08ddb71608af6467b6850783" kindref="member" tooltip="returns TRUE iff a link is possible to this item within this project.">isLinkableInProject</ref>()<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="d1/dcf/class_class_def_1af6d871db00924a443ef14c86c830c0d9" kindref="member" tooltip="Returns the template master of which this class is an instance.">templateMaster</ref>()==0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!cd-&gt;isEmbeddedInOuterScope()</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>cd-&gt;<ref refid="d1/dcf/class_class_def_1a7bc3e33011d6da98a5fd202a1dbe75fb" kindref="member" tooltip="Returns the unique base name (without extension) of the class&amp;#39;s file on disk.">getOutputFileBase</ref>();</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found=TRUE;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;(cd=cli.current());++cli)</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cd-&gt;<ref refid="d1/dcf/class_class_def_1acb4255cf08ddb71608af6467b6850783" kindref="member" tooltip="returns TRUE iff a link is possible to this item within this project.">isLinkableInProject</ref>()<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cd-&gt;<ref refid="d1/dcf/class_class_def_1af6d871db00924a443ef14c86c830c0d9" kindref="member" tooltip="Returns the template master of which this class is an instance.">templateMaster</ref>()==0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!cd-&gt;isEmbeddedInOuterScope()</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFSection();</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>cd-&gt;<ref refid="d1/dcf/class_class_def_1a7bc3e33011d6da98a5fd202a1dbe75fb" kindref="member" tooltip="Returns the unique base name (without extension) of the class&amp;#39;s file on disk.">getOutputFileBase</ref>();</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isFileDocumentation:</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFirst=TRUE;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/db9/class_file_name" kindref="compound" tooltip="Class representing all files with a certain base name.">FileName</ref><sp/>*fn=Doxygen::inputNameList-&gt;first();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trFileDocumentation()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fn)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fd=fn-&gt;first();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fd)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd-&gt;<ref refid="de/db0/class_file_def_1a19db473ad3a95f44c28b0ba2378fdac2" kindref="member">isLinkableInProject</ref>())</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isFirst)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>fd-&gt;<ref refid="de/db0/class_file_def_1aed87b82d9fc3ce4629034232b711f4a9" kindref="member">getOutputFileBase</ref>();</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isFirst=FALSE;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFSection();</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>fd-&gt;<ref refid="de/db0/class_file_def_1aed87b82d9fc3ce4629034232b711f4a9" kindref="member">getOutputFileBase</ref>();</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd=fn-&gt;next();</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn=Doxygen::inputNameList-&gt;next();</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isExampleDocumentation:</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//t<sp/>&lt;&lt;<sp/>&quot;}\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trExampleDocumentation()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PageSDict::Iterator<sp/>pdi(*Doxygen::exampleSDict);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d41/class_page_def" kindref="compound" tooltip="A model of a page symbol.">PageDef</ref><sp/>*pd=pdi.toFirst();</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pd)</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>pd-&gt;<ref refid="dd/d41/class_page_def_1aa08ebea225e51faed63111ba64e78960" kindref="member">getOutputFileBase</ref>();</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(++pdi;(pd=pdi.current());++pdi)</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFSection();</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>pd-&gt;<ref refid="dd/d41/class_page_def_1aa08ebea225e51faed63111ba64e78960" kindref="member">getOutputFileBase</ref>();</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isPageDocumentation:</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="comment">//#error<sp/>&quot;fix<sp/>me<sp/>in<sp/>the<sp/>same<sp/>way<sp/>as<sp/>the<sp/>latex<sp/>index...&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//t<sp/>&lt;&lt;<sp/>&quot;{\\tc<sp/>\\v<sp/>&quot;<sp/>&lt;&lt;<sp/>theTranslator-&gt;trPageDocumentation()<sp/>&lt;&lt;<sp/>&quot;}&quot;&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//t<sp/>&lt;&lt;<sp/>&quot;}&quot;&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//PageSDict::Iterator<sp/>pdi(*Doxygen::pageSDict);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//PageDef<sp/>*pd=pdi.toFirst();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bool<sp/>first=TRUE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(pdi.toFirst();(pd=pdi.current());++pdi)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(!pd-&gt;getGroupDef()<sp/>&amp;&amp;<sp/>!pd-&gt;isReference())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(first)<sp/>t<sp/>&lt;&lt;<sp/>&quot;\\par<sp/>&quot;<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>pd-&gt;getOutputFileBase();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>first=FALSE;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isPageDocumentation2:</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>isEndIndex:</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style[</highlight><highlight class="stringliteral">&quot;Heading1&quot;</highlight><highlight class="normal">]-&gt;reference;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>theTranslator-&gt;trRTFGeneralIndex()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc<sp/>\\v<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trRTFGeneralIndex()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit<sp/>{\\*\\fldinst<sp/>INDEX<sp/>\\\\c2<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>INDEX}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::writePageLink(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first)</highlight></codeline>
<codeline lineno="891"><highlight class="normal">{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first)<sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field\\fldedit{\\*\\fldinst<sp/>INCLUDETEXT<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.rtf\&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>includedstuff}}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::lastIndexPage()</highlight></codeline>
<codeline lineno="899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;{\\comment<sp/>Beginning<sp/>Body<sp/>of<sp/>RTF<sp/>Document}\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>page<sp/>and<sp/>setup<sp/>for<sp/>rest<sp/>of<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;&quot;\\sect<sp/>\\sbkpage<sp/>\\pgndec<sp/>\\pgnrestart\n&quot;;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;&quot;\\sect<sp/>\\sectd<sp/>\\sbknone\n&quot;;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>new<sp/>footer<sp/>with<sp/>arabic<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;&quot;{\\footer<sp/></highlight><highlight class="stringliteral">&quot;&lt;&lt;<sp/>rtf_Style[&quot;</highlight><highlight class="normal">Footer</highlight><highlight class="stringliteral">&quot;]-&gt;reference<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\chpgn}}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="907"><highlight class="stringliteral"><sp/><sp/>//t<sp/>&lt;&lt;<sp/>rtf_Style[&quot;</highlight><highlight class="normal">Heading1</highlight><highlight class="stringliteral">&quot;]-&gt;reference<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="908"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="909"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="910"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="911"><highlight class="stringliteral">void<sp/>RTFGenerator::writeStyleInfo(int)</highlight></codeline>
<codeline lineno="912"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="913"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="914"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="915"><highlight class="stringliteral">void<sp/>RTFGenerator::lineBreak(const<sp/>char<sp/>*)</highlight></codeline>
<codeline lineno="916"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="917"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(lineBreak)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="918"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\par</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="919"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="920"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="921"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="922" refid="d0/da4/class_r_t_f_generator_1ace3fd5e7a703cbae0272372d7e55083b" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::writeString(const<sp/>char<sp/>*text)</highlight></codeline>
<codeline lineno="923"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="924"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>text;</highlight></codeline>
<codeline lineno="925"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="926"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="927"><highlight class="stringliteral">void<sp/>RTFGenerator::startIndexList()</highlight></codeline>
<codeline lineno="928"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="929"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(startIndexList)}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="930"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="931"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\par</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="932"><highlight class="stringliteral"><sp/><sp/>incrementIndentLevel();</highlight></codeline>
<codeline lineno="933"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_LCList_DepthStyle()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="934"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="935"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="936"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="937"><highlight class="stringliteral">void<sp/>RTFGenerator::endIndexList()</highlight></codeline>
<codeline lineno="938"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="939"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(endIndexList)}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="940"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!m_omitParagraph)</highlight></codeline>
<codeline lineno="941"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\par</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="943"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="944"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="946"><highlight class="stringliteral"><sp/><sp/>decrementIndentLevel();</highlight></codeline>
<codeline lineno="947"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="948"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="950" refid="d0/da4/class_r_t_f_generator_1a277db06db2dc29602f3209ca899111c9" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::startItemList()</highlight></codeline>
<codeline lineno="951"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="952"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="953"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(<ref refid="d0/da4/class_r_t_f_generator_1a277db06db2dc29602f3209ca899111c9" kindref="member">startItemList</ref><sp/>level=</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>m_listLevel<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">)<sp/>}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="954"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="955"><highlight class="stringliteral"><sp/><sp/>incrementIndentLevel();</highlight></codeline>
<codeline lineno="956"><highlight class="stringliteral"><sp/><sp/>rtf_listItemInfo[m_listLevel].isEnum<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="957"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="958"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="960" refid="d0/da4/class_r_t_f_generator_1a530e2868f7db6b92a4423cdee7fc9f75" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::endItemList()</highlight></codeline>
<codeline lineno="961"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="962"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="963"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(<ref refid="d0/da4/class_r_t_f_generator_1a530e2868f7db6b92a4423cdee7fc9f75" kindref="member">endItemList</ref><sp/>level=</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>m_listLevel<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">)}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="964"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="965"><highlight class="stringliteral"><sp/><sp/>decrementIndentLevel();</highlight></codeline>
<codeline lineno="966"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="967"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="968"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="970"><highlight class="stringliteral">//void<sp/>RTFGenerator::startEnumList()<sp/><sp/>//<sp/>starts<sp/>an<sp/>enumeration<sp/>list</highlight></codeline>
<codeline lineno="971"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="972"><highlight class="stringliteral">//<sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(startEnumList)}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="973"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="974"><highlight class="stringliteral">//<sp/><sp/>incrementIndentLevel();</highlight></codeline>
<codeline lineno="975"><highlight class="stringliteral">//<sp/><sp/>rtf_listItemInfo[m_listLevel].isEnum<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="976"><highlight class="stringliteral">//<sp/><sp/>rtf_listItemInfo[m_listLevel].number<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="977"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="978"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="980"><highlight class="stringliteral">//void<sp/>RTFGenerator::endEnumList()</highlight></codeline>
<codeline lineno="981"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="982"><highlight class="stringliteral">//<sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="983"><highlight class="stringliteral">//<sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(endEnumList)}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="984"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="985"><highlight class="stringliteral">//<sp/><sp/>decrementIndentLevel();</highlight></codeline>
<codeline lineno="986"><highlight class="stringliteral">//<sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="987"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="988"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="990" refid="d0/da4/class_r_t_f_generator_1ae09155b5cf6fb7457ae598f22d65d045" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::startItemListItem()</highlight></codeline>
<codeline lineno="991"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="992"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(<ref refid="d0/da4/class_r_t_f_generator_1ae09155b5cf6fb7457ae598f22d65d045" kindref="member">startItemListItem</ref>)}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="993"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="994"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset;</highlight></codeline>
<codeline lineno="995"><highlight class="stringliteral"><sp/><sp/>if<sp/>(rtf_listItemInfo[m_listLevel].isEnum)</highlight></codeline>
<codeline lineno="996"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_EList_DepthStyle()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="998"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_listItemInfo[m_listLevel].number<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">.\\tab<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="999"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>rtf_listItemInfo[m_listLevel].number++;</highlight></codeline>
<codeline lineno="1000"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="stringliteral"><sp/><sp/>else</highlight></codeline>
<codeline lineno="1002"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_BList_DepthStyle()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1004"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1006"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1007"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1008" refid="d0/da4/class_r_t_f_generator_1a4d3cc3baac4adda9ef5da4c9e470871b" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::endItemListItem()</highlight></codeline>
<codeline lineno="1009"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1010"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(<ref refid="d0/da4/class_r_t_f_generator_1a4d3cc3baac4adda9ef5da4c9e470871b" kindref="member">endItemListItem</ref>)}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1011"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1012"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1013"><highlight class="stringliteral">void<sp/>RTFGenerator::startIndexItem(const<sp/>char<sp/>*,const<sp/>char<sp/>*)</highlight></codeline>
<codeline lineno="1014"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1015"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(startIndexItem)}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1016"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1017"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!m_omitParagraph)</highlight></codeline>
<codeline lineno="1018"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\par</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1020"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1021"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1023"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1024"><highlight class="stringliteral">void<sp/>RTFGenerator::endIndexItem(const<sp/>char<sp/>*ref,const<sp/>char<sp/>*fn)</highlight></codeline>
<codeline lineno="1025"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1026"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(endIndexItem)}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1027"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!ref<sp/>&amp;&amp;<sp/>fn)</highlight></codeline>
<codeline lineno="1028"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\tab<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1030"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>writeRTFReference(fn);</highlight></codeline>
<codeline lineno="1031"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1032"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="stringliteral"><sp/><sp/>else</highlight></codeline>
<codeline lineno="1034"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1036"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1038"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1039"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1040"><highlight class="stringliteral">//void<sp/>RTFGenerator::writeIndexFileItem(const<sp/>char<sp/>*,const<sp/>char<sp/>*text)</highlight></codeline>
<codeline lineno="1041"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1042"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\item\\contentsline{section}{</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1043"><highlight class="stringliteral">//<sp/><sp/>docify(text);</highlight></codeline>
<codeline lineno="1044"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}{\\pageref{</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>text<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1045"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1046"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1047" refid="d0/da4/class_r_t_f_generator_1a265ab601396745bb97d5c6cee59329d6" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::startHtmlLink(const<sp/>char<sp/>*url)</highlight></codeline>
<codeline lineno="1048"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1049"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1050"><highlight class="stringliteral"><sp/><sp/>if<sp/>(Config_getBool(&quot;</highlight><highlight class="normal">RTF_HYPERLINKS</highlight><highlight class="stringliteral">&quot;))</highlight></codeline>
<codeline lineno="1051"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\field<sp/>{\\*\\fldinst<sp/>{<sp/>HYPERLINK<sp/><sp/>\\\\l<sp/>\</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>url;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>}{}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}{\\fldrslt<sp/>{\\cs37\\ul\\cf2<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1ac3760aa18a5102cd8e8b0a4969f0953d" kindref="member">startTypewriter</ref>();</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063" refid="d0/da4/class_r_t_f_generator_1a73a4ea59114077ea461ff16757c8429b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/da4/class_r_t_f_generator_1a73a4ea59114077ea461ff16757c8429b" kindref="member">RTFGenerator::endHtmlLink</ref>()</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Config_getBool(</highlight><highlight class="stringliteral">&quot;RTF_HYPERLINKS&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}}}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1af9e17986de22ddd0b3a4afe4449b4a2c" kindref="member">endTypewriter</ref>();</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>RTFGenerator::writeMailLink(const<sp/>char<sp/>*url)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>startTypewriter();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>docify(url);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>endTypewriter();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::writeStartAnnoItem(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*f,</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>(writeStartAnnoItem)}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{\\b<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1087"><highlight class="stringliteral"><sp/><sp/>if<sp/>(path)<sp/>docify(path);</highlight></codeline>
<codeline lineno="1088"><highlight class="stringliteral"><sp/><sp/>if<sp/>(f<sp/>&amp;&amp;<sp/>Config_getBool(&quot;</highlight><highlight class="normal">RTF_HYPERLINKS</highlight><highlight class="stringliteral">&quot;))</highlight></codeline>
<codeline lineno="1089"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\field<sp/>{\\*\\fldinst<sp/>{<sp/>HYPERLINK<sp/><sp/>\\\\l<sp/>\</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtfFormatBmkStr(f);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>}{}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}{\\fldrslt<sp/>{\\cs37\\ul\\cf2<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1a0e292cd3d60599a4ddfad4036c0b6d46" kindref="member">docify</ref>(name);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}}}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1a0e292cd3d60599a4ddfad4036c0b6d46" kindref="member">docify</ref>(name);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::writeEndAnnoItem(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>(writeEndAnnoItem)}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/>if<sp/>(name)</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\tab<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>writeRTFReference(name);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::startIndexKey()</highlight></codeline>
<codeline lineno="1123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>(startIndexKey)}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{\\b<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1126"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1127"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1128"><highlight class="stringliteral">void<sp/>RTFGenerator::endIndexKey()</highlight></codeline>
<codeline lineno="1129"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1130"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(endIndexKey)}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1131"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1132"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1133"><highlight class="stringliteral">void<sp/>RTFGenerator::startIndexValue(bool<sp/>hasBrief)</highlight></codeline>
<codeline lineno="1134"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1135"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(startIndexValue)}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1136"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1137"><highlight class="stringliteral"><sp/><sp/>if<sp/>(hasBrief)<sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1138"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1139"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1140"><highlight class="stringliteral">void<sp/>RTFGenerator::endIndexValue(const<sp/>char<sp/>*name,bool<sp/>hasBrief)</highlight></codeline>
<codeline lineno="1141"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1142"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(endIndexValue)}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1143"><highlight class="stringliteral"><sp/><sp/>if<sp/>(hasBrief)<sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1144"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1145"><highlight class="stringliteral"><sp/><sp/>if<sp/>(name)</highlight></codeline>
<codeline lineno="1146"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\tab<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>writeRTFReference(name);</highlight></codeline>
<codeline lineno="1149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1150"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="stringliteral"><sp/><sp/>else</highlight></codeline>
<codeline lineno="1152"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1154"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph=FALSE;</highlight></codeline>
<codeline lineno="1156"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1157"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1158"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1159"><highlight class="stringliteral">void<sp/>RTFGenerator::startSubsection()</highlight></codeline>
<codeline lineno="1160"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1161"><highlight class="stringliteral"><sp/><sp/>//beginRTFSubSection();</highlight></codeline>
<codeline lineno="1162"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;&quot;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1163"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>Begin<sp/>SubSection}\n</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="1164"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset;</highlight></codeline>
<codeline lineno="1165"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style[&quot;</highlight><highlight class="normal">Heading3</highlight><highlight class="stringliteral">&quot;]-&gt;reference<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1166"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1167"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1168"><highlight class="stringliteral">void<sp/>RTFGenerator::endSubsection()</highlight></codeline>
<codeline lineno="1169"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1170"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1171"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1172"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1173"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1174"><highlight class="stringliteral">void<sp/>RTFGenerator::startSubsubsection()</highlight></codeline>
<codeline lineno="1175"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1176"><highlight class="stringliteral"><sp/><sp/>//beginRTFSubSubSection();</highlight></codeline>
<codeline lineno="1177"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1178"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>Begin<sp/>SubSubSection}\n</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="1179"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1180"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_Style[&quot;</highlight><highlight class="normal">Heading4</highlight><highlight class="stringliteral">&quot;]-&gt;reference<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1181"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1182"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1183"><highlight class="stringliteral">void<sp/>RTFGenerator::endSubsubsection()</highlight></codeline>
<codeline lineno="1184"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1185"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1186"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1187"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1188"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1189"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1190"><highlight class="stringliteral">//void<sp/>RTFGenerator::writeClassLink(const<sp/>char<sp/>*,const<sp/>char<sp/>*,</highlight></codeline>
<codeline lineno="1191"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>char<sp/>*,const<sp/>char<sp/>*name)</highlight></codeline>
<codeline lineno="1192"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1193"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\bf<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1194"><highlight class="stringliteral">//<sp/><sp/>docify(name);</highlight></codeline>
<codeline lineno="1195"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1196"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1197"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1198"><highlight class="stringliteral">//void<sp/>RTFGenerator::startTable(bool,int<sp/>colNumbers)<sp/></highlight></codeline>
<codeline lineno="1199"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1200"><highlight class="stringliteral">//<sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>startTable}\n</highlight><highlight class="stringliteral">&quot;;)</highlight></codeline>
<codeline lineno="1201"><highlight class="stringliteral">//<sp/><sp/>m_numCols=colNumbers;</highlight></codeline>
<codeline lineno="1202"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\par\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1203"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1204"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="1205"><highlight class="stringliteral">//void<sp/>RTFGenerator::endTable(bool<sp/>hasCaption)<sp/></highlight></codeline>
<codeline lineno="1206"><highlight class="stringliteral">//{<sp/></highlight></codeline>
<codeline lineno="1207"><highlight class="stringliteral">//<sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>endTable}\n</highlight><highlight class="stringliteral">&quot;;)</highlight></codeline>
<codeline lineno="1208"><highlight class="stringliteral">//<sp/><sp/>if<sp/>(!hasCaption)<sp/></highlight></codeline>
<codeline lineno="1209"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\n\\pard<sp/>\\widctlpar\\intbl\\adjustright\n{\\row<sp/>}\n</highlight><highlight class="stringliteral">&quot;;<sp/></highlight></codeline>
<codeline lineno="1210"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\pard\n</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="1211"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1212"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="1213"><highlight class="stringliteral">//void<sp/><sp/>RTFGenerator::startCaption()<sp/></highlight></codeline>
<codeline lineno="1214"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1215"><highlight class="stringliteral">//<sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>startCaption}\n</highlight><highlight class="stringliteral">&quot;;)</highlight></codeline>
<codeline lineno="1216"><highlight class="stringliteral">//<sp/><sp/>endTableRow();</highlight></codeline>
<codeline lineno="1217"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\trowd<sp/>\\trgaph108\\trleft-108\\trbrdrt\\brdrs\\brdrw10<sp/>\\trbrdrl\\brdrs\\brdrw10<sp/>\\trbrdrb\\brdrs\\brdrw10<sp/>\\trbrdrr\\brdrs\\brdrw10<sp/>\\trbrdrh\\brdrs\\brdrw10<sp/>\\trbrdrv\\brdrs\\brdrw10</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1218"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\clvertalt\\clbrdrt\\brdrs\\brdrw10<sp/>\\clbrdrl\\brdrs\\brdrw10<sp/>\\clbrdrb\\brdrs\\brdrw10<sp/>\\clbrdrr<sp/>\\brdrs\\brdrw10<sp/>\\cltxlrtb<sp/>\\cellx</highlight><highlight class="stringliteral">&quot;&lt;&lt;rtf_pageWidth&lt;&lt;&quot;</highlight><highlight class="normal">\\pard<sp/>\\qc\\nowidctlpar\\widctlpar\\intbl\\adjustright<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1219"><highlight class="stringliteral">//<sp/><sp/>nextTableColumn();</highlight></codeline>
<codeline lineno="1220"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1221"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="1222"><highlight class="stringliteral">//void<sp/><sp/>RTFGenerator::endCaption()<sp/></highlight></codeline>
<codeline lineno="1223"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1224"><highlight class="stringliteral">//<sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>endCaption}\n</highlight><highlight class="stringliteral">&quot;;)</highlight></codeline>
<codeline lineno="1225"><highlight class="stringliteral">//<sp/><sp/>endTableColumn();</highlight></codeline>
<codeline lineno="1226"><highlight class="stringliteral">//<sp/><sp/>endTableRow();</highlight></codeline>
<codeline lineno="1227"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1228"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="1229"><highlight class="stringliteral">//void<sp/>RTFGenerator::nextTableRow()<sp/></highlight></codeline>
<codeline lineno="1230"><highlight class="stringliteral">//{<sp/><sp/></highlight></codeline>
<codeline lineno="1231"><highlight class="stringliteral">//<sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>nextTableRow}\n</highlight><highlight class="stringliteral">&quot;;)</highlight></codeline>
<codeline lineno="1232"><highlight class="stringliteral">//<sp/><sp/>ASSERT(m_numCols&gt;0<sp/>&amp;&amp;<sp/>m_numCols&lt;25);</highlight></codeline>
<codeline lineno="1233"><highlight class="stringliteral">//<sp/><sp/>uint<sp/>columnWidth=rtf_pageWidth/m_numCols;</highlight></codeline>
<codeline lineno="1234"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\trowd<sp/>\\trgaph108\\trleft-108\\trbrdrt\\brdrs\\brdrw10<sp/></highlight><highlight class="stringliteral">&quot;</highlight></codeline>
<codeline lineno="1235"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">\\trbrdrl\\brdrs\\brdrw10<sp/>\\trbrdrb\\brdrs\\brdrw10<sp/></highlight><highlight class="stringliteral">&quot;</highlight></codeline>
<codeline lineno="1236"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">\\trbrdrr\\brdrs\\brdrw10<sp/>\\trbrdrh\\brdrs\\brdrw10<sp/></highlight><highlight class="stringliteral">&quot;</highlight></codeline>
<codeline lineno="1237"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">\\trbrdrv\\brdrs\\brdrw10<sp/></highlight><highlight class="stringliteral">&quot;&lt;&lt;endl;</highlight></codeline>
<codeline lineno="1238"><highlight class="stringliteral">//<sp/><sp/>for<sp/>(int<sp/>i=0;i&lt;m_numCols;i++)<sp/></highlight></codeline>
<codeline lineno="1239"><highlight class="stringliteral">//<sp/><sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\clvertalt\\clbrdrt\\brdrs\\brdrw10<sp/>\\clbrdrl\\brdrs\\brdrw10<sp/></highlight><highlight class="stringliteral">&quot;</highlight></codeline>
<codeline lineno="1241"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">\\clbrdrb\\brdrs\\brdrw10<sp/>\\clbrdrr<sp/>\\brdrs\\brdrw10<sp/>\\cltxlrtb<sp/></highlight><highlight class="stringliteral">&quot;</highlight></codeline>
<codeline lineno="1242"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">\\cellx</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>(i*columnWidth)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1243"><highlight class="stringliteral">//<sp/><sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\pard<sp/>\\widctlpar\\intbl\\adjustright\n{</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1245"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1246"><highlight class="stringliteral">//<sp/></highlight></codeline>
<codeline lineno="1247"><highlight class="stringliteral">//void<sp/>RTFGenerator::endTableRow()<sp/></highlight></codeline>
<codeline lineno="1248"><highlight class="stringliteral">//{<sp/></highlight></codeline>
<codeline lineno="1249"><highlight class="stringliteral">//<sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>endTableRow}\n</highlight><highlight class="stringliteral">&quot;;)</highlight></codeline>
<codeline lineno="1250"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\n\\pard<sp/>\\widctlpar\\intbl\\adjustright\n{\\row<sp/>}\n</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1251"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1252"><highlight class="stringliteral">//<sp/></highlight></codeline>
<codeline lineno="1253"><highlight class="stringliteral">//void<sp/>RTFGenerator::nextTableColumn()<sp/></highlight></codeline>
<codeline lineno="1254"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1255"><highlight class="stringliteral">//<sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>nextTableColumn}\n</highlight><highlight class="stringliteral">&quot;;)</highlight></codeline>
<codeline lineno="1256"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1257"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1258"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="1259"><highlight class="stringliteral">//void<sp/>RTFGenerator::endTableColumn()<sp/></highlight></codeline>
<codeline lineno="1260"><highlight class="stringliteral">//{<sp/></highlight></codeline>
<codeline lineno="1261"><highlight class="stringliteral">//<sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>endTableColumn}\n</highlight><highlight class="stringliteral">&quot;;)</highlight></codeline>
<codeline lineno="1262"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal"><sp/>\\cell<sp/>}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1263"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1264"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="1265"><highlight class="stringliteral">void<sp/>RTFGenerator::startTextLink(const<sp/>char<sp/>*f,const<sp/>char<sp/>*anchor)</highlight></codeline>
<codeline lineno="1266"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1267"><highlight class="stringliteral"><sp/><sp/>if<sp/>(Config_getBool(&quot;</highlight><highlight class="normal">RTF_HYPERLINKS</highlight><highlight class="stringliteral">&quot;))</highlight></codeline>
<codeline lineno="1268"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>QCString<sp/>ref;</highlight></codeline>
<codeline lineno="1270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(f)</highlight></codeline>
<codeline lineno="1271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>ref+=f;</highlight></codeline>
<codeline lineno="1273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(anchor)</highlight></codeline>
<codeline lineno="1275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>ref+=&apos;_&apos;;</highlight></codeline>
<codeline lineno="1277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>ref+=anchor;</highlight></codeline>
<codeline lineno="1278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\field<sp/>{\\*\\fldinst<sp/>{<sp/>HYPERLINK<sp/><sp/>\\\\l<sp/>\</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtfFormatBmkStr(ref);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>}{}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}{\\fldrslt<sp/>{\\cs37\\ul\\cf2<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::endTextLink()</highlight></codeline>
<codeline lineno="1288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Config_getBool(</highlight><highlight class="stringliteral">&quot;RTF_HYPERLINKS&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}}}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295" refid="d0/da4/class_r_t_f_generator_1a5b27737ba89d55761a9908a088631367" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/da4/class_r_t_f_generator_1a5b27737ba89d55761a9908a088631367" kindref="member">RTFGenerator::writeObjectLink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ref,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*f,</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*anchor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text)</highlight></codeline>
<codeline lineno="1297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ref<sp/>&amp;&amp;<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;RTF_HYPERLINKS&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>refName;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refName+=f;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refName+=</highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refName+=anchor;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field<sp/>{\\*\\fldinst<sp/>{<sp/>HYPERLINK<sp/><sp/>\\\\l<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtfFormatBmkStr(refName);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>}{}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}{\\fldrslt<sp/>{\\cs37\\ul\\cf2<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1a0e292cd3d60599a4ddfad4036c0b6d46" kindref="member">docify</ref>(text);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}}}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1acb774060df0aaad9be8f91018503b20b" kindref="member">startBold</ref>();</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1a0e292cd3d60599a4ddfad4036c0b6d46" kindref="member">docify</ref>(text);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1a430a7df863505527d0b1da4c70116a05" kindref="member">endBold</ref>();</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::startPageRef()</highlight></codeline>
<codeline lineno="1329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1a235071d9e43bed7dabaec79e88bf43c7" kindref="member">startEmphasis</ref>();</highlight></codeline>
<codeline lineno="1332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::endPageRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*clname,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*anchor)</highlight></codeline>
<codeline lineno="1335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/>QCString<sp/>ref;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clname)</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>ref+=clname;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor)</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>ref+=</highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>ref+=anchor;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/>writeRTFReference(ref);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1a283896a8d13cd017f4b765d82ba1e132" kindref="member">endEmphasis</ref>();</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351" refid="d0/da4/class_r_t_f_generator_1ad598f8811fde4d3b1849c2e9b92a6686" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/da4/class_r_t_f_generator_1ad598f8811fde4d3b1849c2e9b92a6686" kindref="member">RTFGenerator::writeCodeLink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ref,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*f,</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*anchor,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ref<sp/>&amp;&amp;<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;RTF_HYPERLINKS&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>refName;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f)</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refName+=f;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor)</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refName+=</highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>refName+=anchor;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\field<sp/>{\\*\\fldinst<sp/>{<sp/>HYPERLINK<sp/><sp/>\\\\l<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtfFormatBmkStr(refName);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>}{}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}{\\fldrslt<sp/>{\\cs37\\ul\\cf2<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1a331ca74e622c48bbbcad7e02139a6bfb" kindref="member">codify</ref>(name);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}}}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1a331ca74e622c48bbbcad7e02139a6bfb" kindref="member">codify</ref>(name);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::startTitleHead(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)</highlight></codeline>
<codeline lineno="1384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;{\\comment<sp/>startTitleHead}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>beginRTFSection();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_Style[&quot;Heading2&quot;]-&gt;reference<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/da4/class_r_t_f_generator" kindref="compound" tooltip="Generator for RTF output.">RTFGenerator</ref>::endTitleHead(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="1392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;{\\comment<sp/>endTitleHead}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\par<sp/>&quot;<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/>if<sp/>(name)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>table<sp/>of<sp/>contents<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\tc\\tcl2<sp/>\\v<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1a0e292cd3d60599a4ddfad4036c0b6d46" kindref="member">docify</ref>(name);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>an<sp/>index<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/>addIndexItem(name,0);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>writeAnchor(0,name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(Config_getBool(&quot;RTF_HYPERLINKS&quot;)<sp/>&amp;&amp;<sp/>fileName)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>writeAnchor(fileName,0);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::startTitle()</highlight></codeline>
<codeline lineno="1418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;{\\comment<sp/>startTitle}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>if<sp/>(Config_getBool(&quot;COMPACT_RTF&quot;))</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>beginRTFSection();</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>else</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>beginRTFChapter();</highlight></codeline>
<codeline lineno="1424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/da4/class_r_t_f_generator" kindref="compound" tooltip="Generator for RTF output.">RTFGenerator</ref>::startGroupHeader(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extraIndent)</highlight></codeline>
<codeline lineno="1427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;{\\comment<sp/>startGroupHeader}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//newParagraph();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/>if<sp/>(extraIndent==2)</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style[</highlight><highlight class="stringliteral">&quot;Heading5&quot;</highlight><highlight class="normal">]-&gt;reference;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extraIndent==1)</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style[</highlight><highlight class="stringliteral">&quot;Heading4&quot;</highlight><highlight class="normal">]-&gt;reference;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>extraIndent==0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style[</highlight><highlight class="stringliteral">&quot;Heading3&quot;</highlight><highlight class="normal">]-&gt;reference;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::endGroupHeader(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;{\\comment<sp/>endGroupHeader}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\par&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/da4/class_r_t_f_generator" kindref="compound" tooltip="Generator for RTF output.">RTFGenerator</ref>::startMemberDoc(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*clname,</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*memname,</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>showInline)</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>startMemberDoc}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/>if<sp/>(memname<sp/>&amp;&amp;<sp/>memname[0]!=&apos;@&apos;)</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>addIndexItem(memname,clname);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>addIndexItem(clname,memname);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_Style[showInline<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Heading5&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Heading4&quot;</highlight><highlight class="normal">]-&gt;reference;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//styleStack.push(rtf_Style_Heading4);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;RTFGenerator::startMemberDoc()<sp/>`%s&apos;\n&quot;,rtf_Style[&quot;Heading4&quot;]-&gt;reference);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1acb774060df0aaad9be8f91018503b20b" kindref="member">startBold</ref>();</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::endMemberDoc(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>endMemberDoc}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//const<sp/>char<sp/>*style<sp/>=<sp/>styleStack.pop();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;RTFGenerator::endMemberDoc()<sp/>`%s&apos;\n&quot;,style);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ASSERT(style==rtf_Style[&quot;Heading4&quot;]-&gt;reference);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><ref refid="d0/da4/class_r_t_f_generator_1a430a7df863505527d0b1da4c70116a05" kindref="member">endBold</ref>();</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/da4/class_r_t_f_generator" kindref="compound" tooltip="Generator for RTF output.">RTFGenerator</ref>::startDoxyAnchor(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>startDoxyAnchor}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::endDoxyAnchor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fName,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*anchor)</highlight></codeline>
<codeline lineno="1493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/>QCString<sp/>ref;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fName)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>ref+=fName;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor)</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>ref+=</highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>ref+=anchor;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>endDoxyAnchor}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{\\bkmkstart<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1507"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtfFormatBmkStr(ref);</highlight></codeline>
<codeline lineno="1508"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1509"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\bkmkend<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1510"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtfFormatBmkStr(ref);</highlight></codeline>
<codeline lineno="1511"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1512"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1513"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1514"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1515"><highlight class="stringliteral">//void<sp/>RTFGenerator::writeLatexLabel(const<sp/>char<sp/>*clName,const<sp/>char<sp/>*anchor)</highlight></codeline>
<codeline lineno="1516"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1517"><highlight class="stringliteral">//<sp/><sp/>writeDoxyAnchor(0,clName,anchor,0);</highlight></codeline>
<codeline lineno="1518"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1519"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1520"><highlight class="stringliteral">void<sp/>RTFGenerator::addIndexItem(const<sp/>char<sp/>*s1,const<sp/>char<sp/>*s2)</highlight></codeline>
<codeline lineno="1521"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1522"><highlight class="stringliteral"><sp/><sp/>if<sp/>(s1)</highlight></codeline>
<codeline lineno="1523"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1524"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\xe<sp/>\\v<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1525"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>docify(s1);</highlight></codeline>
<codeline lineno="1526"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(s2)</highlight></codeline>
<codeline lineno="1527"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\:</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1529"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>docify(s2);</highlight></codeline>
<codeline lineno="1530"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1532"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1533"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1534"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1535"><highlight class="stringliteral">void<sp/>RTFGenerator::startIndent()</highlight></codeline>
<codeline lineno="1536"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1537"><highlight class="stringliteral"><sp/><sp/>incrementIndentLevel();</highlight></codeline>
<codeline lineno="1538"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(startIndent)<sp/>}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1539"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1540"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_CList_DepthStyle()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1541"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1542"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1543"><highlight class="stringliteral">void<sp/>RTFGenerator::endIndent()</highlight></codeline>
<codeline lineno="1544"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1545"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1546"><highlight class="stringliteral"><sp/><sp/>decrementIndentLevel();</highlight></codeline>
<codeline lineno="1547"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1548"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1549"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1550" refid="d0/da4/class_r_t_f_generator_1a9c6c7896f2bd09fb5e6ce53b9e6cee5c" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::startDescription()</highlight></codeline>
<codeline lineno="1551"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1552"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(<ref refid="d0/da4/class_r_t_f_generator_1a9c6c7896f2bd09fb5e6ce53b9e6cee5c" kindref="member">startDescription</ref>)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1553"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1554"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_DList_DepthStyle();</highlight></codeline>
<codeline lineno="1555"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1556"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1557" refid="d0/da4/class_r_t_f_generator_1a4c9b42e803206c575f464d82eec460d9" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::endDescription()</highlight></codeline>
<codeline lineno="1558"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1559"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(<ref refid="d0/da4/class_r_t_f_generator_1a4c9b42e803206c575f464d82eec460d9" kindref="member">endDescription</ref>)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1560"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1561"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1562"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1563"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1564" refid="d0/da4/class_r_t_f_generator_1a39ef721382a2a25ef0a41463a34f1b02" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::startDescItem()</highlight></codeline>
<codeline lineno="1565"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1566"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1567"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(<ref refid="d0/da4/class_r_t_f_generator_1a39ef721382a2a25ef0a41463a34f1b02" kindref="member">startDescItem</ref>)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1568"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\b<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1569"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1570"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1571" refid="d0/da4/class_r_t_f_generator_1aaeb8cbfab437b4198548c4f06dc12847" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::endDescItem()</highlight></codeline>
<codeline lineno="1572"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1573"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(<ref refid="d0/da4/class_r_t_f_generator_1aaeb8cbfab437b4198548c4f06dc12847" kindref="member">endDescItem</ref>)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1574"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1575"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1576"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1577"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1578"><highlight class="stringliteral">void<sp/>RTFGenerator::startMemberDescription(const<sp/>char<sp/>*,const<sp/>char<sp/>*)</highlight></codeline>
<codeline lineno="1579"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1580"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(startMemberDescription)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1581"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1582"><highlight class="stringliteral"><sp/><sp/>incrementIndentLevel();</highlight></codeline>
<codeline lineno="1583"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_CList_DepthStyle();</highlight></codeline>
<codeline lineno="1584"><highlight class="stringliteral"><sp/><sp/>startEmphasis();</highlight></codeline>
<codeline lineno="1585"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1586"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1587"><highlight class="stringliteral">void<sp/>RTFGenerator::endMemberDescription()</highlight></codeline>
<codeline lineno="1588"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1589"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(endMemberDescription)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1590"><highlight class="stringliteral"><sp/><sp/>endEmphasis();</highlight></codeline>
<codeline lineno="1591"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1592"><highlight class="stringliteral"><sp/><sp/>decrementIndentLevel();</highlight></codeline>
<codeline lineno="1593"><highlight class="stringliteral"><sp/><sp/>//t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\par</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1594"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1595"><highlight class="stringliteral"><sp/><sp/>//m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1596"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1597"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1598"><highlight class="stringliteral">void<sp/>RTFGenerator::startDescList(SectionTypes)</highlight></codeline>
<codeline lineno="1599"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1600"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(startDescList)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1601"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;;<sp/>//<sp/>ends<sp/>at<sp/>endDescList</highlight></codeline>
<codeline lineno="1602"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;;<sp/>//<sp/>ends<sp/>at<sp/>endDescTitle</highlight></codeline>
<codeline lineno="1603"><highlight class="stringliteral"><sp/><sp/>startBold();</highlight></codeline>
<codeline lineno="1604"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1605"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1606"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1607"><highlight class="stringliteral">//void<sp/>RTFGenerator::endDescTitle()</highlight></codeline>
<codeline lineno="1608"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1609"><highlight class="stringliteral">//<sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(endDescTitle)<sp/>}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1610"><highlight class="stringliteral">//<sp/><sp/>endBold();</highlight></codeline>
<codeline lineno="1611"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1612"><highlight class="stringliteral">//<sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1613"><highlight class="stringliteral">//<sp/><sp/>incrementIndentLevel();</highlight></codeline>
<codeline lineno="1614"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_DList_DepthStyle();</highlight></codeline>
<codeline lineno="1615"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1616"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1617"><highlight class="stringliteral">void<sp/>RTFGenerator::startDescForItem()</highlight></codeline>
<codeline lineno="1618"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1619"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(startDescForItem)<sp/>}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1620"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1621"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1622"><highlight class="stringliteral">void<sp/>RTFGenerator::endDescForItem()</highlight></codeline>
<codeline lineno="1623"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1624"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(endDescForItem)<sp/>}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1625"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1626"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1627"><highlight class="stringliteral">//void<sp/>RTFGenerator::endDescList()</highlight></codeline>
<codeline lineno="1628"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1629"><highlight class="stringliteral">//<sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(endDescList)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1630"><highlight class="stringliteral">//<sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1631"><highlight class="stringliteral">//<sp/><sp/>decrementIndentLevel();</highlight></codeline>
<codeline lineno="1632"><highlight class="stringliteral">//<sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1633"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1634"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1635"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1636"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1637"><highlight class="stringliteral">void<sp/>RTFGenerator::startSection(const<sp/>char<sp/>*,const<sp/>char<sp/>*title,SectionInfo::SectionType<sp/>type)</highlight></codeline>
<codeline lineno="1638"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1639"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(startSection)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1640"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1641"><highlight class="stringliteral"><sp/><sp/>t&lt;&lt;<sp/>rtf_Style_Reset;</highlight></codeline>
<codeline lineno="1642"><highlight class="stringliteral"><sp/><sp/>int<sp/>num=4;</highlight></codeline>
<codeline lineno="1643"><highlight class="stringliteral"><sp/><sp/>switch(type)</highlight></codeline>
<codeline lineno="1644"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>SectionInfo::Page:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num=2;<sp/>break;</highlight></codeline>
<codeline lineno="1646"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>SectionInfo::Section:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>num=3;<sp/>break;</highlight></codeline>
<codeline lineno="1647"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>SectionInfo::Subsection:<sp/><sp/><sp/><sp/>num=4;<sp/>break;</highlight></codeline>
<codeline lineno="1648"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>SectionInfo::Subsubsection:<sp/>num=4;<sp/>break;</highlight></codeline>
<codeline lineno="1649"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>SectionInfo::Paragraph:<sp/><sp/><sp/><sp/><sp/>num=4;<sp/>break;</highlight></codeline>
<codeline lineno="1650"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>default:<sp/>ASSERT(0);<sp/>break;</highlight></codeline>
<codeline lineno="1651"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1652"><highlight class="stringliteral"><sp/><sp/>QCString<sp/>heading;</highlight></codeline>
<codeline lineno="1653"><highlight class="stringliteral"><sp/><sp/>heading.sprintf(&quot;</highlight><highlight class="normal">Heading%d</highlight><highlight class="stringliteral">&quot;,num);</highlight></codeline>
<codeline lineno="1654"><highlight class="stringliteral"><sp/><sp/>//<sp/>set<sp/>style</highlight></codeline>
<codeline lineno="1655"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style[heading]-&gt;reference;</highlight></codeline>
<codeline lineno="1656"><highlight class="stringliteral"><sp/><sp/>//<sp/>make<sp/>table<sp/>of<sp/>contents<sp/>entry</highlight></codeline>
<codeline lineno="1657"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\tc\\tcl</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>num<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal"><sp/>\\v<sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1658"><highlight class="stringliteral"><sp/><sp/>docify(title);</highlight></codeline>
<codeline lineno="1659"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1660"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1661"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1662"><highlight class="stringliteral">void<sp/>RTFGenerator::endSection(const<sp/>char<sp/>*lab,SectionInfo::SectionType)</highlight></codeline>
<codeline lineno="1663"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1664"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(endSection)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1665"><highlight class="stringliteral"><sp/><sp/>//<sp/>make<sp/>bookmark</highlight></codeline>
<codeline lineno="1666"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph=FALSE;</highlight></codeline>
<codeline lineno="1667"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1668"><highlight class="stringliteral"><sp/><sp/>writeAnchor(0,lab);</highlight></codeline>
<codeline lineno="1669"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1670"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1671"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1672"><highlight class="stringliteral">//void<sp/>RTFGenerator::writeSectionRef(const<sp/>char<sp/>*ref,const<sp/>char<sp/>*,</highlight></codeline>
<codeline lineno="1673"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>char<sp/>*lab,const<sp/>char<sp/>*title)</highlight></codeline>
<codeline lineno="1674"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1675"><highlight class="stringliteral">//<sp/><sp/>if<sp/>(ref)</highlight></codeline>
<codeline lineno="1676"><highlight class="stringliteral">//<sp/><sp/>{</highlight></codeline>
<codeline lineno="1677"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>docify(title);</highlight></codeline>
<codeline lineno="1678"><highlight class="stringliteral">//<sp/><sp/>}</highlight></codeline>
<codeline lineno="1679"><highlight class="stringliteral">//<sp/><sp/>else</highlight></codeline>
<codeline lineno="1680"><highlight class="stringliteral">//<sp/><sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>startBold();</highlight></codeline>
<codeline lineno="1682"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>docify(title);</highlight></codeline>
<codeline lineno="1683"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>endBold();</highlight></codeline>
<codeline lineno="1684"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1685"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>docify(theTranslator-&gt;trPageAbbreviation());</highlight></codeline>
<codeline lineno="1686"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>writeRTFReference(lab);</highlight></codeline>
<codeline lineno="1687"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1688"><highlight class="stringliteral">//<sp/><sp/>}</highlight></codeline>
<codeline lineno="1689"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1690"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="1691"><highlight class="stringliteral">//void<sp/>RTFGenerator::writeSectionRefItem(const<sp/>char<sp/>*,const<sp/>char<sp/>*lab,</highlight></codeline>
<codeline lineno="1692"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>const<sp/>char<sp/>*title)</highlight></codeline>
<codeline lineno="1693"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1694"><highlight class="stringliteral">//<sp/><sp/>docify(title);</highlight></codeline>
<codeline lineno="1695"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\tab</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="1696"><highlight class="stringliteral">//<sp/><sp/>writeRTFReference(lab);</highlight></codeline>
<codeline lineno="1697"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1698"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1699"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="1700"><highlight class="stringliteral">//void<sp/>RTFGenerator::writeSectionRefAnchor(const<sp/>char<sp/>*name,const<sp/>char<sp/>*lab,</highlight></codeline>
<codeline lineno="1701"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>const<sp/>char<sp/>*title)</highlight></codeline>
<codeline lineno="1702"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1703"><highlight class="stringliteral">//<sp/><sp/>writeSectionRef(name,lab,title);</highlight></codeline>
<codeline lineno="1704"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1705"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1706"><highlight class="stringliteral">//char*<sp/>RTFGenerator::getMultiByte(int<sp/>c)</highlight></codeline>
<codeline lineno="1707"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1708"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>static<sp/>char<sp/>s[10];</highlight></codeline>
<codeline lineno="1709"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="1710"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>sprintf(s,&quot;</highlight><highlight class="normal">\\</highlight><highlight class="stringliteral">&apos;%X&quot;,c);</highlight></codeline>
<codeline lineno="1711"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>return<sp/>s;</highlight></codeline>
<codeline lineno="1712"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1713"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1714" refid="d0/da4/class_r_t_f_generator_1a0e292cd3d60599a4ddfad4036c0b6d46" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::docify(const<sp/>char<sp/>*str)</highlight></codeline>
<codeline lineno="1715"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1716"><highlight class="stringliteral"><sp/><sp/>if<sp/>(str)</highlight></codeline>
<codeline lineno="1717"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1718"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>const<sp/>unsigned<sp/>char<sp/>*p=(const<sp/>unsigned<sp/>char<sp/>*)str;</highlight></codeline>
<codeline lineno="1719"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>c;</highlight></codeline>
<codeline lineno="1720"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>//unsigned<sp/>char<sp/>pc=&apos;</highlight><highlight class="normal">\0</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="1721"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>while<sp/>(*p)</highlight></codeline>
<codeline lineno="1722"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1723"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//static<sp/>bool<sp/>MultiByte<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1724"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>c=*p++;</highlight></codeline>
<codeline lineno="1725"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1726"><highlight class="stringliteral">#if<sp/>0</highlight></codeline>
<codeline lineno="1727"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>MultiByte<sp/>)</highlight></codeline>
<codeline lineno="1728"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1729"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>getMultiByte(<sp/>c<sp/>);</highlight></codeline>
<codeline lineno="1730"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiByte<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1731"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight></codeline>
<codeline lineno="1732"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>c<sp/>&gt;=<sp/>0x80<sp/>)</highlight></codeline>
<codeline lineno="1734"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1735"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiByte<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1736"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>getMultiByte(<sp/>c<sp/>);</highlight></codeline>
<codeline lineno="1737"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight></codeline>
<codeline lineno="1738"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1739"><highlight class="stringliteral">#endif</highlight></codeline>
<codeline lineno="1740"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1741"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(c)</highlight></codeline>
<codeline lineno="1742"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1743"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&apos;:<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\{&quot;;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="1744"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&apos;:<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\}&quot;;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="1745"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">\\</highlight><highlight class="stringliteral">&apos;:<sp/>t<sp/>&lt;&lt;<sp/>&quot;\\\\&quot;;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="1746"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline lineno="1747"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1748"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>see<sp/>if<sp/>we<sp/>can<sp/>insert<sp/>an<sp/>hyphenation<sp/>hint</highlight></codeline>
<codeline lineno="1749"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//if<sp/>(isupper(c)<sp/>&amp;&amp;<sp/>islower(pc)<sp/>&amp;&amp;<sp/>!insideTabbing)<sp/>t<sp/>&lt;&lt;<sp/>&quot;\\-&quot;;</highlight></codeline>
<codeline lineno="1750"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>(char)c;</highlight></codeline>
<codeline lineno="1751"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1752"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1753"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//pc<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="1754"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>m_omitParagraph<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1755"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1756"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1757"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1758"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1759" refid="d0/da4/class_r_t_f_generator_1a331ca74e622c48bbbcad7e02139a6bfb" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::codify(const<sp/>char<sp/>*str)</highlight></codeline>
<codeline lineno="1760"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1761"><highlight class="stringliteral"><sp/><sp/>//<sp/>note<sp/>that<sp/>RTF<sp/>does<sp/>not<sp/>have<sp/>a<sp/>&quot;verbatim&quot;,<sp/>so<sp/>&quot;\n&quot;<sp/>means</highlight></codeline>
<codeline lineno="1762"><highlight class="stringliteral"><sp/><sp/>//<sp/>nothing...<sp/>add<sp/>a<sp/>&quot;newParagraph()&quot;;</highlight></codeline>
<codeline lineno="1763"><highlight class="stringliteral"><sp/><sp/>//static<sp/>char<sp/>spaces[]=&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;;</highlight></codeline>
<codeline lineno="1764"><highlight class="stringliteral"><sp/><sp/>if<sp/>(str)</highlight></codeline>
<codeline lineno="1765"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1766"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>const<sp/>unsigned<sp/>char<sp/>*p=(const<sp/>unsigned<sp/>char<sp/>*)str;</highlight></codeline>
<codeline lineno="1767"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>c;</highlight></codeline>
<codeline lineno="1768"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>int<sp/>spacesToNextTabStop;</highlight></codeline>
<codeline lineno="1769"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1770"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>while<sp/>(*p)</highlight></codeline>
<codeline lineno="1771"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1772"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//static<sp/>bool<sp/>MultiByte<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1773"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1774"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>c=*p++;</highlight></codeline>
<codeline lineno="1775"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1776"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>switch(c)</highlight></codeline>
<codeline lineno="1777"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1778"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">\t</highlight><highlight class="stringliteral">&apos;:<sp/><sp/>spacesToNextTabStop<sp/>=<sp/>Config_getInt(&quot;TAB_SIZE&quot;)<sp/>-<sp/>(col%Config_getInt(&quot;TAB_SIZE&quot;));</highlight></codeline>
<codeline lineno="1779"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>Doxygen::spaces.left(spacesToNextTabStop);</highlight></codeline>
<codeline lineno="1780"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col+=spacesToNextTabStop;</highlight></codeline>
<codeline lineno="1781"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="1782"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&apos;:<sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1783"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&apos;;<sp/>col=0;</highlight></codeline>
<codeline lineno="1784"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="1785"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&apos;:<sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\{&quot;;<sp/>col++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="1786"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&apos;:<sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\}&quot;;<sp/>col++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="1787"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">\\</highlight><highlight class="stringliteral">&apos;:<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\\\&quot;;<sp/>col++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="1788"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default:<sp/><sp/><sp/><sp/>p=(const<sp/>unsigned<sp/>char<sp/>*)writeUtf8Char(t,(const<sp/>char<sp/>*)p-1);<sp/>col++;<sp/>break;</highlight></codeline>
<codeline lineno="1789"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1790"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1791"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1792"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1793"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1794" refid="d0/da4/class_r_t_f_generator_1a1d1912d4a9d95b54ee88b12b3306e3d2" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::writeChar(char<sp/>c)</highlight></codeline>
<codeline lineno="1795"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1796"><highlight class="stringliteral"><sp/><sp/>char<sp/>cs[2];</highlight></codeline>
<codeline lineno="1797"><highlight class="stringliteral"><sp/><sp/>cs[0]=c;</highlight></codeline>
<codeline lineno="1798"><highlight class="stringliteral"><sp/><sp/>cs[1]=0;</highlight></codeline>
<codeline lineno="1799"><highlight class="stringliteral"><sp/><sp/>docify(cs);</highlight></codeline>
<codeline lineno="1800"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1801"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1802"><highlight class="stringliteral">void<sp/>RTFGenerator::startClassDiagram()</highlight></codeline>
<codeline lineno="1803"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1804"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;&quot;{\\comment<sp/>startClassDiagram<sp/>}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1805"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1806"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1807"><highlight class="stringliteral">void<sp/>RTFGenerator::endClassDiagram(const<sp/>ClassDiagram<sp/>&amp;d,</highlight></codeline>
<codeline lineno="1808"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>const<sp/>char<sp/>*fileName,const<sp/>char<sp/>*)</highlight></codeline>
<codeline lineno="1809"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1810"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1811"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1812"><highlight class="stringliteral"><sp/><sp/>//<sp/>create<sp/>a<sp/>png<sp/>file</highlight></codeline>
<codeline lineno="1813"><highlight class="stringliteral"><sp/><sp/>d.writeImage(t,dir,relPath,fileName,FALSE);</highlight></codeline>
<codeline lineno="1814"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1815"><highlight class="stringliteral"><sp/><sp/>//<sp/>display<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="1816"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1817"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1818"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\par\\pard<sp/>\\qc<sp/>{\\field\\flddirty<sp/>{\\*\\fldinst<sp/>INCLUDEPICTURE<sp/>\&quot;&quot;;</highlight></codeline>
<codeline lineno="1819"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>fileName<sp/>&lt;&lt;<sp/>&quot;.png\&quot;&quot;;</highlight></codeline>
<codeline lineno="1820"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;<sp/>\\\\d<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>IMAGE}}\\par&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1821"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1822"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1823"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1824"><highlight class="stringliteral">//void<sp/>RTFGenerator::writeFormula(const<sp/>char<sp/>*,const<sp/>char<sp/>*text)</highlight></codeline>
<codeline lineno="1825"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1826"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>text;</highlight></codeline>
<codeline lineno="1827"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1828"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1829"><highlight class="stringliteral">void<sp/>RTFGenerator::startMemberItem(const<sp/>char<sp/>*,int,const<sp/>char<sp/>*)</highlight></codeline>
<codeline lineno="1830"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1831"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;&quot;{\\comment<sp/>startMemberItem<sp/>}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1832"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_BList_DepthStyle()<sp/>&lt;&lt;<sp/>endl;<sp/>//<sp/>set<sp/>style<sp/>to<sp/>appropriate<sp/>depth</highlight></codeline>
<codeline lineno="1833"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1834"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1835"><highlight class="stringliteral">void<sp/>RTFGenerator::endMemberItem()</highlight></codeline>
<codeline lineno="1836"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1837"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;&quot;{\\comment<sp/>endMemberItem<sp/>}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1838"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1839"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1840"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1841"><highlight class="stringliteral">void<sp/>RTFGenerator::writeAnchor(const<sp/>char<sp/>*fileName,const<sp/>char<sp/>*name)</highlight></codeline>
<codeline lineno="1842"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1843"><highlight class="stringliteral"><sp/><sp/>QCString<sp/>anchor;</highlight></codeline>
<codeline lineno="1844"><highlight class="stringliteral"><sp/><sp/>if<sp/>(fileName)</highlight></codeline>
<codeline lineno="1845"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1846"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>anchor+=fileName;</highlight></codeline>
<codeline lineno="1847"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1848"><highlight class="stringliteral"><sp/><sp/>if<sp/>(fileName<sp/>&amp;&amp;<sp/>name)</highlight></codeline>
<codeline lineno="1849"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1850"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>anchor+=&apos;</highlight><highlight class="normal">_</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="1851"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1852"><highlight class="stringliteral"><sp/><sp/>if<sp/>(name)</highlight></codeline>
<codeline lineno="1853"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1854"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>anchor+=name;</highlight></codeline>
<codeline lineno="1855"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1856"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1857"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;&quot;{\\comment<sp/>writeAnchor<sp/>(&quot;<sp/>&lt;&lt;<sp/>anchor<sp/>&lt;&lt;<sp/>&quot;)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1858"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{\\bkmkstart<sp/>&quot;<sp/>&lt;&lt;<sp/>rtfFormatBmkStr(anchor)<sp/>&lt;&lt;<sp/>&quot;}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1859"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{\\bkmkend<sp/>&quot;<sp/>&lt;&lt;<sp/>rtfFormatBmkStr(anchor)<sp/>&lt;&lt;<sp/>&quot;}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1860"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1861"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1862"><highlight class="stringliteral">void<sp/>RTFGenerator::writeRTFReference(const<sp/>char<sp/>*label)</highlight></codeline>
<codeline lineno="1863"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1864"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{\\field\\fldedit<sp/>{\\*\\fldinst<sp/>PAGEREF<sp/>&quot;;</highlight></codeline>
<codeline lineno="1865"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtfFormatBmkStr(label);</highlight></codeline>
<codeline lineno="1866"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>pagenum}}&quot;;</highlight></codeline>
<codeline lineno="1867"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1868"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1869" refid="d0/da4/class_r_t_f_generator_1ac7783a014fb21a8688b4f334aea2cc30" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::startCodeFragment()</highlight></codeline>
<codeline lineno="1870"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1871"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startCodeFragment)<sp/>}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1872"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1873"><highlight class="stringliteral"><sp/><sp/>//newParagraph();</highlight></codeline>
<codeline lineno="1874"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_Code_DepthStyle();</highlight></codeline>
<codeline lineno="1875"><highlight class="stringliteral"><sp/><sp/>//styleStack.push(rtf_Style_CodeExample);</highlight></codeline>
<codeline lineno="1876"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1877"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1878" refid="d0/da4/class_r_t_f_generator_1ae75111adf81a1179b924ab7656d8c74c" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::endCodeFragment()</highlight></codeline>
<codeline lineno="1879"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1880"><highlight class="stringliteral"><sp/><sp/>//newParagraph();</highlight></codeline>
<codeline lineno="1881"><highlight class="stringliteral"><sp/><sp/>//styleStack.pop();</highlight></codeline>
<codeline lineno="1882"><highlight class="stringliteral"><sp/><sp/>//printf(&quot;RTFGenerator::endCodeFrament()<sp/>top=%s\n&quot;,styleStack.top());</highlight></codeline>
<codeline lineno="1883"><highlight class="stringliteral"><sp/><sp/>//t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>styleStack.top()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1884"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endCodeFragment)<sp/>}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1885"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1886"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1887"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1888"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1889"><highlight class="stringliteral">void<sp/>RTFGenerator::writeNonBreakableSpace(int)</highlight></codeline>
<codeline lineno="1890"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1891"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\~<sp/>&quot;;</highlight></codeline>
<codeline lineno="1892"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1893"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1894"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1895"><highlight class="stringliteral">void<sp/>RTFGenerator::startMemberList()</highlight></codeline>
<codeline lineno="1896"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1897"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1898"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startMemberList)<sp/>}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1899"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1900"><highlight class="stringliteral">#ifdef<sp/>DELETEDCODE</highlight></codeline>
<codeline lineno="1901"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!insideTabbing)</highlight></codeline>
<codeline lineno="1902"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\begin{CompactItemize}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1903"><highlight class="stringliteral">#endif</highlight></codeline>
<codeline lineno="1904"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1905"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1906"><highlight class="stringliteral">void<sp/>RTFGenerator::endMemberList()</highlight></codeline>
<codeline lineno="1907"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1908"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endMemberList)<sp/>}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1909"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1910"><highlight class="stringliteral">#ifdef<sp/>DELETEDCODE</highlight></codeline>
<codeline lineno="1911"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!insideTabbing)</highlight></codeline>
<codeline lineno="1912"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\end{CompactItemize}&quot;<sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1913"><highlight class="stringliteral">#endif</highlight></codeline>
<codeline lineno="1914"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1915"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1916"><highlight class="stringliteral">//void<sp/>RTFGenerator::startImage(const<sp/>char<sp/>*name,const<sp/>char<sp/>*,bool)</highlight></codeline>
<codeline lineno="1917"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1918"><highlight class="stringliteral">//<sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1919"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1920"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1921"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\par\\pard<sp/>\\qc<sp/>{\\field\\flddirty<sp/>{\\*\\fldinst<sp/>INCLUDEPICTURE<sp/>&quot;;</highlight></codeline>
<codeline lineno="1922"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="1923"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;<sp/>\\\\d<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>IMAGE}}\\par&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1924"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1925"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1926"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="1927"><highlight class="stringliteral">//void<sp/>RTFGenerator::endImage(bool)</highlight></codeline>
<codeline lineno="1928"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1929"><highlight class="stringliteral">//<sp/><sp/>//<sp/>not<sp/>yet<sp/>implemented</highlight></codeline>
<codeline lineno="1930"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1931"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="1932"><highlight class="stringliteral">//void<sp/>RTFGenerator::startDotFile(const<sp/>char<sp/>*name,bool)</highlight></codeline>
<codeline lineno="1933"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1934"><highlight class="stringliteral">//<sp/><sp/>QCString<sp/>baseName=name;</highlight></codeline>
<codeline lineno="1935"><highlight class="stringliteral">//<sp/><sp/>int<sp/>i;</highlight></codeline>
<codeline lineno="1936"><highlight class="stringliteral">//<sp/><sp/>if<sp/>((i=baseName.findRev(&apos;</highlight><highlight class="normal">/</highlight><highlight class="stringliteral">&apos;))!=-1<sp/>||<sp/>(i=baseName.findRev(&apos;</highlight><highlight class="normal">\\</highlight><highlight class="stringliteral">&apos;))!=-1)</highlight></codeline>
<codeline lineno="1937"><highlight class="stringliteral">//<sp/><sp/>{</highlight></codeline>
<codeline lineno="1938"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>baseName=baseName.right(baseName.length()-i-1);</highlight></codeline>
<codeline lineno="1939"><highlight class="stringliteral">//<sp/><sp/>}</highlight></codeline>
<codeline lineno="1940"><highlight class="stringliteral">//<sp/><sp/>QCString<sp/>outDir<sp/>=<sp/>Config_getString(&quot;RTF_OUTPUT&quot;);</highlight></codeline>
<codeline lineno="1941"><highlight class="stringliteral">//<sp/><sp/>writeDotGraphFromFile(name,outDir,baseName,BITMAP);</highlight></codeline>
<codeline lineno="1942"><highlight class="stringliteral">//<sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="1943"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1944"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1945"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\par\\pard<sp/>\\qc<sp/>{\\field\\flddirty<sp/>{\\*\\fldinst<sp/>INCLUDEPICTURE<sp/>&quot;;</highlight></codeline>
<codeline lineno="1946"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>outDir<sp/>&lt;&lt;<sp/>&quot;\\&quot;<sp/>&lt;&lt;<sp/>baseName;</highlight></codeline>
<codeline lineno="1947"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;<sp/>\\\\d<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>IMAGE}}\\par&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1948"><highlight class="stringliteral">//<sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1949"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1950"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="1951"><highlight class="stringliteral">//void<sp/>RTFGenerator::endDotFile(bool)</highlight></codeline>
<codeline lineno="1952"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="1953"><highlight class="stringliteral">//<sp/><sp/>//<sp/>not<sp/>yet<sp/>implemented</highlight></codeline>
<codeline lineno="1954"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="1955"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="1956"><highlight class="stringliteral">void<sp/>RTFGenerator::startDescTable(const<sp/>char<sp/>*title)</highlight></codeline>
<codeline lineno="1957"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1958"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startDescTable)<sp/>}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1959"><highlight class="stringliteral"><sp/><sp/>startSimpleSect(EnumValues,0,0,title);</highlight></codeline>
<codeline lineno="1960"><highlight class="stringliteral"><sp/><sp/>startDescForItem();</highlight></codeline>
<codeline lineno="1961"><highlight class="stringliteral"><sp/><sp/>//t<sp/>&lt;&lt;<sp/>&quot;{&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1962"><highlight class="stringliteral"><sp/><sp/>//incrementIndentLevel();</highlight></codeline>
<codeline lineno="1963"><highlight class="stringliteral"><sp/><sp/>//t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_CList_DepthStyle();</highlight></codeline>
<codeline lineno="1964"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1965"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1966"><highlight class="stringliteral">void<sp/>RTFGenerator::endDescTable()</highlight></codeline>
<codeline lineno="1967"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1968"><highlight class="stringliteral"><sp/><sp/>//decrementIndentLevel();</highlight></codeline>
<codeline lineno="1969"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endDescTable)}&quot;<sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1970"><highlight class="stringliteral"><sp/><sp/>endDescForItem();</highlight></codeline>
<codeline lineno="1971"><highlight class="stringliteral"><sp/><sp/>endSimpleSect();</highlight></codeline>
<codeline lineno="1972"><highlight class="stringliteral"><sp/><sp/>//t<sp/>&lt;&lt;<sp/>&quot;}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1973"><highlight class="stringliteral"><sp/><sp/>//t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>styleStack.top();</highlight></codeline>
<codeline lineno="1974"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1975"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1976"><highlight class="stringliteral">void<sp/>RTFGenerator::startDescTableTitle()</highlight></codeline>
<codeline lineno="1977"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1978"><highlight class="stringliteral"><sp/><sp/>//t<sp/>&lt;&lt;<sp/>rtf_BList_DepthStyle()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1979"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startDescTableTitle)<sp/>}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1980"><highlight class="stringliteral"><sp/><sp/>startBold();</highlight></codeline>
<codeline lineno="1981"><highlight class="stringliteral"><sp/><sp/>startEmphasis();</highlight></codeline>
<codeline lineno="1982"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1983"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1984"><highlight class="stringliteral">void<sp/>RTFGenerator::endDescTableTitle()</highlight></codeline>
<codeline lineno="1985"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1986"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endDescTableTitle)<sp/>}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1987"><highlight class="stringliteral"><sp/><sp/>endEmphasis();</highlight></codeline>
<codeline lineno="1988"><highlight class="stringliteral"><sp/><sp/>endBold();</highlight></codeline>
<codeline lineno="1989"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>&quot;;</highlight></codeline>
<codeline lineno="1990"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1991"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1992"><highlight class="stringliteral">void<sp/>RTFGenerator::startDescTableData()</highlight></codeline>
<codeline lineno="1993"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1994"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startDescTableData)<sp/>}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="1995"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1996"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1997"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1998"><highlight class="stringliteral">void<sp/>RTFGenerator::endDescTableData()</highlight></codeline>
<codeline lineno="1999"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2000"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endDescTableData)<sp/>}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2001"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2002"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="2003"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2004"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2005"><highlight class="stringliteral">//<sp/>a<sp/>style<sp/>for<sp/>list<sp/>formatted<sp/>as<sp/>a<sp/>&quot;bulleted<sp/>list&quot;</highlight></codeline>
<codeline lineno="2006"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2007"><highlight class="stringliteral">void<sp/>RTFGenerator::incrementIndentLevel()</highlight></codeline>
<codeline lineno="2008"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2009"><highlight class="stringliteral"><sp/><sp/>m_listLevel++;</highlight></codeline>
<codeline lineno="2010"><highlight class="stringliteral"><sp/><sp/>if<sp/>(m_listLevel&gt;rtf_maxIndentLevels-1)</highlight></codeline>
<codeline lineno="2011"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2012"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>err(&quot;Maximum<sp/>indent<sp/>level<sp/>(%d)<sp/>exceeded<sp/>while<sp/>generating<sp/>RTF<sp/>output!\n&quot;,rtf_maxIndentLevels);</highlight></codeline>
<codeline lineno="2013"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>m_listLevel=rtf_maxIndentLevels-1;</highlight></codeline>
<codeline lineno="2014"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2015"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2016"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2017"><highlight class="stringliteral">void<sp/>RTFGenerator::decrementIndentLevel()</highlight></codeline>
<codeline lineno="2018"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2019"><highlight class="stringliteral"><sp/><sp/>m_listLevel--;</highlight></codeline>
<codeline lineno="2020"><highlight class="stringliteral"><sp/><sp/>if<sp/>(m_listLevel&lt;0)</highlight></codeline>
<codeline lineno="2021"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2022"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>err(&quot;Negative<sp/>indent<sp/>level<sp/>while<sp/>generating<sp/>RTF<sp/>output!\n&quot;);</highlight></codeline>
<codeline lineno="2023"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>m_listLevel=0;</highlight></codeline>
<codeline lineno="2024"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2025"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2026"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2027"><highlight class="stringliteral">//<sp/>a<sp/>style<sp/>for<sp/>list<sp/>formatted<sp/>with<sp/>&quot;list<sp/>continue&quot;<sp/>style</highlight></codeline>
<codeline lineno="2028"><highlight class="stringliteral">const<sp/>char<sp/>*<sp/>RTFGenerator::rtf_CList_DepthStyle()</highlight></codeline>
<codeline lineno="2029"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2030"><highlight class="stringliteral"><sp/><sp/>QCString<sp/>n=makeIndexName(&quot;ListContinue&quot;,m_listLevel);</highlight></codeline>
<codeline lineno="2031"><highlight class="stringliteral"><sp/><sp/>return<sp/>rtf_Style[n]-&gt;reference;</highlight></codeline>
<codeline lineno="2032"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2033"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2034"><highlight class="stringliteral">//<sp/>a<sp/>style<sp/>for<sp/>list<sp/>formatted<sp/>as<sp/>a<sp/>&quot;latext<sp/>style&quot;<sp/>table<sp/>of<sp/>contents</highlight></codeline>
<codeline lineno="2035"><highlight class="stringliteral">const<sp/>char<sp/>*<sp/>RTFGenerator::rtf_LCList_DepthStyle()</highlight></codeline>
<codeline lineno="2036"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2037"><highlight class="stringliteral"><sp/><sp/>QCString<sp/>n=makeIndexName(&quot;LatexTOC&quot;,m_listLevel);</highlight></codeline>
<codeline lineno="2038"><highlight class="stringliteral"><sp/><sp/>return<sp/>rtf_Style[n]-&gt;reference;</highlight></codeline>
<codeline lineno="2039"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2040"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2041"><highlight class="stringliteral">//<sp/>a<sp/>style<sp/>for<sp/>list<sp/>formatted<sp/>as<sp/>a<sp/>&quot;bullet&quot;<sp/>style</highlight></codeline>
<codeline lineno="2042"><highlight class="stringliteral">const<sp/>char<sp/>*<sp/>RTFGenerator::rtf_BList_DepthStyle()</highlight></codeline>
<codeline lineno="2043"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2044"><highlight class="stringliteral"><sp/><sp/>QCString<sp/>n=makeIndexName(&quot;ListBullet&quot;,m_listLevel);</highlight></codeline>
<codeline lineno="2045"><highlight class="stringliteral"><sp/><sp/>return<sp/>rtf_Style[n]-&gt;reference;</highlight></codeline>
<codeline lineno="2046"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2047"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2048"><highlight class="stringliteral">//<sp/>a<sp/>style<sp/>for<sp/>list<sp/>formatted<sp/>as<sp/>a<sp/>&quot;enumeration&quot;<sp/>style</highlight></codeline>
<codeline lineno="2049"><highlight class="stringliteral">const<sp/>char<sp/>*<sp/>RTFGenerator::rtf_EList_DepthStyle()</highlight></codeline>
<codeline lineno="2050"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2051"><highlight class="stringliteral"><sp/><sp/>QCString<sp/>n=makeIndexName(&quot;ListEnum&quot;,m_listLevel);</highlight></codeline>
<codeline lineno="2052"><highlight class="stringliteral"><sp/><sp/>return<sp/>rtf_Style[n]-&gt;reference;</highlight></codeline>
<codeline lineno="2053"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2054"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2055"><highlight class="stringliteral">const<sp/>char<sp/>*<sp/>RTFGenerator::rtf_DList_DepthStyle()</highlight></codeline>
<codeline lineno="2056"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2057"><highlight class="stringliteral"><sp/><sp/>QCString<sp/>n=makeIndexName(&quot;DescContinue&quot;,m_listLevel);</highlight></codeline>
<codeline lineno="2058"><highlight class="stringliteral"><sp/><sp/>return<sp/>rtf_Style[n]-&gt;reference;</highlight></codeline>
<codeline lineno="2059"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2060"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2061"><highlight class="stringliteral">const<sp/>char<sp/>*<sp/>RTFGenerator::rtf_Code_DepthStyle()</highlight></codeline>
<codeline lineno="2062"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2063"><highlight class="stringliteral"><sp/><sp/>QCString<sp/>n=makeIndexName(&quot;CodeExample&quot;,m_listLevel);</highlight></codeline>
<codeline lineno="2064"><highlight class="stringliteral"><sp/><sp/>return<sp/>rtf_Style[n]-&gt;reference;</highlight></codeline>
<codeline lineno="2065"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2066"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2067"><highlight class="stringliteral">void<sp/>RTFGenerator::startTextBlock(bool<sp/>dense)</highlight></codeline>
<codeline lineno="2068"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2069"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>startTextBlock}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2070"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2071"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset;</highlight></codeline>
<codeline lineno="2072"><highlight class="stringliteral"><sp/><sp/>if<sp/>(dense)<sp/>//<sp/>no<sp/>spacing<sp/>between<sp/>&quot;paragraphs&quot;</highlight></codeline>
<codeline lineno="2073"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2074"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style[&quot;DenseText&quot;]-&gt;reference;</highlight></codeline>
<codeline lineno="2075"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2076"><highlight class="stringliteral"><sp/><sp/>else<sp/>//<sp/>some<sp/>spacing</highlight></codeline>
<codeline lineno="2077"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2078"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style[&quot;BodyText&quot;]-&gt;reference;</highlight></codeline>
<codeline lineno="2079"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2080"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2081"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2082"><highlight class="stringliteral">void<sp/>RTFGenerator::endTextBlock(bool<sp/>/*paraBreak*/)</highlight></codeline>
<codeline lineno="2083"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2084"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2085"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>endTextBlock}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2086"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2087"><highlight class="stringliteral"><sp/><sp/>//m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="2088"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2089"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2090"><highlight class="stringliteral">void<sp/>RTFGenerator::newParagraph()</highlight></codeline>
<codeline lineno="2091"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2092"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!m_omitParagraph)</highlight></codeline>
<codeline lineno="2093"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2094"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(newParagraph)}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2095"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\par&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2096"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2097"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2098"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2099"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2100" refid="d0/da4/class_r_t_f_generator_1af1118332fddc139ef5a6d37cf98fc035" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::startParagraph()</highlight></codeline>
<codeline lineno="2101"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2102"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>startParagraph}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2103"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2104"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2105"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2106"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2107" refid="d0/da4/class_r_t_f_generator_1aefcb5d16655eae184dcacecfd27c0068" refkind="member"><highlight class="stringliteral">void<sp/>RTFGenerator::endParagraph()</highlight></codeline>
<codeline lineno="2108"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2109"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>endParagraph}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2110"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;}\\par&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2111"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="2112"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2113"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2114"><highlight class="stringliteral">void<sp/>RTFGenerator::startMemberSubtitle()</highlight></codeline>
<codeline lineno="2115"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2116"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>startMemberSubtitle}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2117"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2118"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_CList_DepthStyle()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2119"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2120"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2121"><highlight class="stringliteral">void<sp/>RTFGenerator::endMemberSubtitle()</highlight></codeline>
<codeline lineno="2122"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2123"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>endMemberSubtitle}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2124"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2125"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2126"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2127"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2128"><highlight class="stringliteral">//void<sp/>RTFGenerator::writeUmlaut(char<sp/>c)</highlight></codeline>
<codeline lineno="2129"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="2130"><highlight class="stringliteral">//<sp/><sp/>switch(c)</highlight></codeline>
<codeline lineno="2131"><highlight class="stringliteral">//<sp/><sp/>{</highlight></codeline>
<codeline lineno="2132"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\304</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2133"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">E</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\313</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2134"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">I</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\317</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2135"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">O</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\326</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2136"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">U</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\334</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2137"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">Y</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">Y</highlight><highlight class="stringliteral">&apos;;<sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="2138"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\344</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2139"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">e</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\353</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2140"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">i</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\357</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2141"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">o</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\366</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2142"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">u</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\374</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2143"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">y</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\377</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2144"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>default:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2145"><highlight class="stringliteral">//<sp/><sp/>}</highlight></codeline>
<codeline lineno="2146"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="2147"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="2148"><highlight class="stringliteral">//void<sp/>RTFGenerator::writeAcute(char<sp/>c)</highlight></codeline>
<codeline lineno="2149"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="2150"><highlight class="stringliteral">//<sp/><sp/>switch(c)</highlight></codeline>
<codeline lineno="2151"><highlight class="stringliteral">//<sp/><sp/>{</highlight></codeline>
<codeline lineno="2152"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\301</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2153"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">E</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\311</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2154"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">I</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\315</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2155"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">O</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\323</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2156"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">U</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\332</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2157"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">Y</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\335</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2158"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\341</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2159"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">e</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\351</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2160"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">i</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\355</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2161"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">o</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\363</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2162"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">u</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\372</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2163"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">y</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\375</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2164"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>default:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2165"><highlight class="stringliteral">//<sp/><sp/>}</highlight></codeline>
<codeline lineno="2166"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="2167"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="2168"><highlight class="stringliteral">//void<sp/>RTFGenerator::writeGrave(char<sp/>c)</highlight></codeline>
<codeline lineno="2169"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="2170"><highlight class="stringliteral">//<sp/><sp/>switch(c)</highlight></codeline>
<codeline lineno="2171"><highlight class="stringliteral">//<sp/><sp/>{</highlight></codeline>
<codeline lineno="2172"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\300</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2173"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">E</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\310</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2174"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">I</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\314</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2175"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">O</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\322</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2176"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">U</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\331</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2177"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\340</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2178"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">e</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\350</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2179"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">i</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\354</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2180"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">o</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\362</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2181"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">u</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\371</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2182"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>default:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2183"><highlight class="stringliteral">//<sp/><sp/>}</highlight></codeline>
<codeline lineno="2184"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="2185"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="2186"><highlight class="stringliteral">//void<sp/>RTFGenerator::writeCirc(char<sp/>c)</highlight></codeline>
<codeline lineno="2187"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="2188"><highlight class="stringliteral">//<sp/><sp/>switch(c)</highlight></codeline>
<codeline lineno="2189"><highlight class="stringliteral">//<sp/><sp/>{</highlight></codeline>
<codeline lineno="2190"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\302</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2191"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">E</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\312</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2192"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">I</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\316</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2193"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">O</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\324</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2194"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">U</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\333</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2195"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\342</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2196"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">e</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\352</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2197"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">i</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\356</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2198"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">o</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\364</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2199"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">u</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\373</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2200"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>default:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2201"><highlight class="stringliteral">//<sp/><sp/>}</highlight></codeline>
<codeline lineno="2202"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="2203"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="2204"><highlight class="stringliteral">//void<sp/>RTFGenerator::writeTilde(char<sp/>c)</highlight></codeline>
<codeline lineno="2205"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="2206"><highlight class="stringliteral">//<sp/><sp/>switch(c)</highlight></codeline>
<codeline lineno="2207"><highlight class="stringliteral">//<sp/><sp/>{</highlight></codeline>
<codeline lineno="2208"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\303</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2209"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">N</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\321</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2210"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">O</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\325</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2211"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\343</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2212"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">n</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\361</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2213"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">o</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\365</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2214"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>default:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2215"><highlight class="stringliteral">//<sp/><sp/>}</highlight></codeline>
<codeline lineno="2216"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="2217"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="2218"><highlight class="stringliteral">//void<sp/>RTFGenerator::writeRing(char<sp/>c)</highlight></codeline>
<codeline lineno="2219"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="2220"><highlight class="stringliteral">//<sp/><sp/>switch(c)</highlight></codeline>
<codeline lineno="2221"><highlight class="stringliteral">//<sp/><sp/>{</highlight></codeline>
<codeline lineno="2222"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">A</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\305</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2223"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">a</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\345</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2224"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>default:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2225"><highlight class="stringliteral">//<sp/><sp/>}</highlight></codeline>
<codeline lineno="2226"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="2227"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="2228"><highlight class="stringliteral">//void<sp/>RTFGenerator::writeCCedil(char<sp/>c)</highlight></codeline>
<codeline lineno="2229"><highlight class="stringliteral">//{</highlight></codeline>
<codeline lineno="2230"><highlight class="stringliteral">//<sp/><sp/>switch(c)</highlight></codeline>
<codeline lineno="2231"><highlight class="stringliteral">//<sp/><sp/>{</highlight></codeline>
<codeline lineno="2232"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">C</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\307</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2233"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>case<sp/>&apos;</highlight><highlight class="normal">c</highlight><highlight class="stringliteral">&apos;<sp/>:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">\347</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2234"><highlight class="stringliteral">//<sp/><sp/><sp/><sp/>default:<sp/>t<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">?</highlight><highlight class="stringliteral">&apos;;<sp/>break;</highlight></codeline>
<codeline lineno="2235"><highlight class="stringliteral">//<sp/><sp/>}</highlight></codeline>
<codeline lineno="2236"><highlight class="stringliteral">//}</highlight></codeline>
<codeline lineno="2237"><highlight class="stringliteral">//</highlight></codeline>
<codeline lineno="2238"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2239"><highlight class="stringliteral">bool<sp/>isLeadBytes(int<sp/>c)</highlight></codeline>
<codeline lineno="2240"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2241"><highlight class="stringliteral"><sp/><sp/>bool<sp/>result;</highlight></codeline>
<codeline lineno="2242"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2243"><highlight class="stringliteral"><sp/><sp/>QCString<sp/>codePage<sp/>=<sp/>theTranslator-&gt;trRTFansicp();</highlight></codeline>
<codeline lineno="2244"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2245"><highlight class="stringliteral"><sp/><sp/>if<sp/>(codePage<sp/>==<sp/>&quot;932&quot;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>cp932<sp/>(Japanese<sp/>Shift-JIS)</highlight></codeline>
<codeline lineno="2246"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2247"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(0x81&lt;=c<sp/>&amp;&amp;<sp/>c&lt;=0x9f)<sp/>||<sp/>(0xe0&lt;=c<sp/>&amp;&amp;<sp/>c&lt;=0xfc);</highlight></codeline>
<codeline lineno="2248"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2249"><highlight class="stringliteral"><sp/><sp/>else<sp/>if<sp/>(codePage<sp/>==<sp/>&quot;936&quot;)<sp/><sp/>//<sp/>cp936<sp/>(Simplified<sp/>Chinese<sp/>GBK)</highlight></codeline>
<codeline lineno="2250"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2251"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0x81&lt;=c<sp/>&amp;&amp;<sp/>c&lt;=0xFE;</highlight></codeline>
<codeline lineno="2252"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2253"><highlight class="stringliteral"><sp/><sp/>else<sp/>if<sp/>(codePage<sp/>==<sp/>&quot;949&quot;)<sp/><sp/>//<sp/>cp949<sp/>(Korean)</highlight></codeline>
<codeline lineno="2254"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0x81&lt;=c<sp/>&amp;&amp;<sp/>c&lt;=0xFE;</highlight></codeline>
<codeline lineno="2256"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2257"><highlight class="stringliteral"><sp/><sp/>else<sp/>if<sp/>(codePage<sp/>==<sp/>&quot;950&quot;)<sp/><sp/>//<sp/>cp950<sp/>(Traditional<sp/>Chinese<sp/>Big5)</highlight></codeline>
<codeline lineno="2258"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2259"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>0x81&lt;=c<sp/>&amp;&amp;<sp/>c&lt;=0xFE;</highlight></codeline>
<codeline lineno="2260"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2261"><highlight class="stringliteral"><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>for<sp/>SBCS<sp/>Codepages<sp/>(cp1252,1251<sp/>etc...)</highlight></codeline>
<codeline lineno="2262"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2263"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>false;</highlight></codeline>
<codeline lineno="2264"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2265"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2266"><highlight class="stringliteral"><sp/><sp/>return<sp/>result;</highlight></codeline>
<codeline lineno="2267"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2268"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2269"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2270"><highlight class="stringliteral">//<sp/>note:<sp/>function<sp/>is<sp/>not<sp/>reentrant!</highlight></codeline>
<codeline lineno="2271"><highlight class="stringliteral">static<sp/>void<sp/>encodeForOutput(FTextStream<sp/>&amp;t,const<sp/>QCString<sp/>&amp;s)</highlight></codeline>
<codeline lineno="2272"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2273"><highlight class="stringliteral"><sp/><sp/>QCString<sp/>encoding;</highlight></codeline>
<codeline lineno="2274"><highlight class="stringliteral"><sp/><sp/>bool<sp/>converted=FALSE;</highlight></codeline>
<codeline lineno="2275"><highlight class="stringliteral"><sp/><sp/>int<sp/>l<sp/>=<sp/>s.length();</highlight></codeline>
<codeline lineno="2276"><highlight class="stringliteral"><sp/><sp/>static<sp/>QByteArray<sp/>enc;</highlight></codeline>
<codeline lineno="2277"><highlight class="stringliteral"><sp/><sp/>if<sp/>(l*4&gt;(int)enc.size())<sp/>enc.resize(l*4);<sp/>//<sp/>worst<sp/>case</highlight></codeline>
<codeline lineno="2278"><highlight class="stringliteral"><sp/><sp/>encoding.sprintf(&quot;CP%s&quot;,theTranslator-&gt;trRTFansicp().data());</highlight></codeline>
<codeline lineno="2279"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!encoding.isEmpty())</highlight></codeline>
<codeline lineno="2280"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2281"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>//<sp/>convert<sp/>from<sp/>UTF-8<sp/>back<sp/>to<sp/>the<sp/>output<sp/>encoding</highlight></codeline>
<codeline lineno="2282"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>void<sp/>*cd<sp/>=<sp/>portable_iconv_open(encoding,&quot;UTF-8&quot;);</highlight></codeline>
<codeline lineno="2283"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(cd!=(void<sp/>*)(-1))</highlight></codeline>
<codeline lineno="2284"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2285"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>iLeft=l;</highlight></codeline>
<codeline lineno="2286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>oLeft=enc.size();</highlight></codeline>
<codeline lineno="2287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*inputPtr<sp/>=<sp/>s.data();</highlight></codeline>
<codeline lineno="2288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*outputPtr<sp/>=<sp/>enc.data();</highlight></codeline>
<codeline lineno="2289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!portable_iconv(cd,<sp/>&amp;inputPtr,<sp/>&amp;iLeft,<sp/>&amp;outputPtr,<sp/>&amp;oLeft))</highlight></codeline>
<codeline lineno="2290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc.resize(enc.size()-(unsigned<sp/>int)oLeft);</highlight></codeline>
<codeline lineno="2292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converted=TRUE;</highlight></codeline>
<codeline lineno="2293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>portable_iconv_close(cd);</highlight></codeline>
<codeline lineno="2295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2296"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2297"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!converted)<sp/>//<sp/>if<sp/>we<sp/>did<sp/>not<sp/>convert<sp/>anything,<sp/>copy<sp/>as<sp/>is.</highlight></codeline>
<codeline lineno="2298"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2299"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>memcpy(enc.data(),s.data(),l);</highlight></codeline>
<codeline lineno="2300"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>enc.resize(l);</highlight></codeline>
<codeline lineno="2301"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2302"><highlight class="stringliteral"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="2303"><highlight class="stringliteral"><sp/><sp/>bool<sp/>multiByte<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="2304"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2305"><highlight class="stringliteral"><sp/><sp/>for<sp/>(i=0;i&lt;enc.size();i++)</highlight></codeline>
<codeline lineno="2306"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>uchar<sp/>c<sp/>=<sp/>(uchar)enc.at(i);</highlight></codeline>
<codeline lineno="2308"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2309"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(c&gt;=0x80<sp/>||<sp/>multiByte)</highlight></codeline>
<codeline lineno="2310"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>esc[10];</highlight></codeline>
<codeline lineno="2312"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(esc,&quot;\\&apos;</highlight><highlight class="normal">%X</highlight><highlight class="stringliteral">&quot;,c);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>escape<sp/>sequence<sp/>for<sp/>SBCS<sp/>and<sp/>DBCS(1st&amp;2nd<sp/>bytes).</highlight></codeline>
<codeline lineno="2313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>esc;</highlight></codeline>
<codeline lineno="2314"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!multiByte)</highlight></codeline>
<codeline lineno="2316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiByte<sp/>=<sp/>isLeadBytes(c);<sp/><sp/>//<sp/>It<sp/>may<sp/>be<sp/>DBCS<sp/>Codepages.</highlight></codeline>
<codeline lineno="2318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="2320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiByte<sp/>=<sp/>FALSE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>end<sp/>of<sp/>Double<sp/>Bytes<sp/>Character.</highlight></codeline>
<codeline lineno="2322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="2325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>(char)c;</highlight></codeline>
<codeline lineno="2327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2328"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2329"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2330"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2335"><highlight class="stringliteral">static<sp/>bool<sp/>preProcessFile(QDir<sp/>&amp;d,QCString<sp/>&amp;infName,<sp/>FTextStream<sp/>&amp;t,<sp/>bool<sp/>bIncludeHeader=TRUE)</highlight></codeline>
<codeline lineno="2336"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2337"><highlight class="stringliteral"><sp/><sp/>QFile<sp/>f(infName);</highlight></codeline>
<codeline lineno="2338"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!f.open(IO_ReadOnly))</highlight></codeline>
<codeline lineno="2339"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2340"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>err(&quot;</highlight><highlight class="normal">problems<sp/>opening<sp/>rtf<sp/>file<sp/>%s<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>reading\n</highlight><highlight class="stringliteral">&quot;,infName.data());</highlight></codeline>
<codeline lineno="2341"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>return<sp/>FALSE;</highlight></codeline>
<codeline lineno="2342"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2343"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2344"><highlight class="stringliteral"><sp/><sp/>const<sp/>int<sp/>maxLineLength<sp/>=<sp/>10240;</highlight></codeline>
<codeline lineno="2345"><highlight class="stringliteral"><sp/><sp/>static<sp/>QCString<sp/>lineBuf(maxLineLength);</highlight></codeline>
<codeline lineno="2346"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2347"><highlight class="stringliteral"><sp/><sp/>//<sp/>scan<sp/>until<sp/>find<sp/>end<sp/>of<sp/>header</highlight></codeline>
<codeline lineno="2348"><highlight class="stringliteral"><sp/><sp/>//<sp/>this<sp/>is<sp/>EXTREEEEEEEMLY<sp/>brittle.<sp/><sp/>It<sp/>works<sp/>on<sp/>OUR<sp/>rtf</highlight></codeline>
<codeline lineno="2349"><highlight class="stringliteral"><sp/><sp/>//<sp/>files<sp/>because<sp/>the<sp/>first<sp/>line<sp/>before<sp/>the<sp/>body</highlight></codeline>
<codeline lineno="2350"><highlight class="stringliteral"><sp/><sp/>//<sp/>ALWAYS<sp/>contains<sp/>&quot;</highlight><highlight class="normal">{\comment<sp/>begin<sp/>body}</highlight><highlight class="stringliteral">&quot;</highlight></codeline>
<codeline lineno="2351"><highlight class="stringliteral"><sp/><sp/>do</highlight></codeline>
<codeline lineno="2352"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2353"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(f.readLine(lineBuf.data(),maxLineLength)==-1)</highlight></codeline>
<codeline lineno="2354"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2355"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>err(&quot;</highlight><highlight class="normal">read<sp/>error<sp/>in<sp/>%s<sp/>before<sp/>end<sp/>of<sp/>RTF<sp/>header!\n</highlight><highlight class="stringliteral">&quot;,infName.data());</highlight></codeline>
<codeline lineno="2356"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>FALSE;</highlight></codeline>
<codeline lineno="2357"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2358"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(bIncludeHeader)<sp/>encodeForOutput(t,lineBuf);</highlight></codeline>
<codeline lineno="2359"><highlight class="stringliteral"><sp/><sp/>}<sp/>while<sp/>(lineBuf.find(&quot;</highlight><highlight class="normal">\\comment<sp/>begin<sp/>body</highlight><highlight class="stringliteral">&quot;)==-1);</highlight></codeline>
<codeline lineno="2360"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2361"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2362"><highlight class="stringliteral"><sp/><sp/>while<sp/>(f.readLine(lineBuf.data(),maxLineLength)!=-1)</highlight></codeline>
<codeline lineno="2363"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2364"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>int<sp/>pos;</highlight></codeline>
<codeline lineno="2365"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>((pos=lineBuf.find(&quot;</highlight><highlight class="normal">INCLUDETEXT</highlight><highlight class="stringliteral">&quot;))!=-1)</highlight></codeline>
<codeline lineno="2366"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2367"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>startNamePos<sp/><sp/>=<sp/>lineBuf.find(&apos;&quot;</highlight><highlight class="stringliteral">&apos;,pos)+1;</highlight></codeline>
<codeline lineno="2368"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>endNamePos<sp/><sp/><sp/><sp/>=<sp/>lineBuf.find(&apos;</highlight><highlight class="stringliteral">&quot;&apos;,startNamePos);</highlight></codeline>
<codeline lineno="2369"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>fileName<sp/>=<sp/>lineBuf.mid(startNamePos,endNamePos-startNamePos);</highlight></codeline>
<codeline lineno="2370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>begin<sp/>include<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>fileName<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2371"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!preProcessFile(d,fileName,t,FALSE))<sp/>return<sp/>FALSE;</highlight></codeline>
<codeline lineno="2372"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>end<sp/>include<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>fileName<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>else<sp/>//<sp/>no<sp/>INCLUDETEXT<sp/>on<sp/>this<sp/>line</highlight></codeline>
<codeline lineno="2375"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>elaborate<sp/>hoopla<sp/>to<sp/>skip<sp/><sp/>the<sp/>final<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;<sp/>if<sp/>we<sp/>didn&apos;t<sp/>include<sp/>the</highlight></codeline>
<codeline lineno="2377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>headers</highlight></codeline>
<codeline lineno="2378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!f.atEnd()<sp/>||<sp/>bIncludeHeader)</highlight></codeline>
<codeline lineno="2379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeForOutput(t,lineBuf);</highlight></codeline>
<codeline lineno="2381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>//<sp/>last<sp/>line<sp/>of<sp/>included<sp/>file</highlight></codeline>
<codeline lineno="2383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>null<sp/>terminate<sp/>at<sp/>the<sp/>last<sp/>&apos;}&apos;</highlight></codeline>
<codeline lineno="2385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//char<sp/>*str<sp/>=<sp/>strrchr(buffer,&apos;}&apos;);</highlight></codeline>
<codeline lineno="2386"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>pos<sp/>=<sp/>lineBuf.findRev(&apos;}&apos;);</highlight></codeline>
<codeline lineno="2387"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(pos<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="2389"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineBuf.at(pos)<sp/>=<sp/>&apos;\0&apos;;</highlight></codeline>
<codeline lineno="2390"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="2391"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err(&quot;</highlight><highlight class="normal">Strange,<sp/>the<sp/>last<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>was<sp/>not<sp/>a<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">\n</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="2392"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encodeForOutput(t,lineBuf);</highlight></codeline>
<codeline lineno="2393"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2394"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2395"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2396"><highlight class="stringliteral"><sp/><sp/>f.close();</highlight></codeline>
<codeline lineno="2397"><highlight class="stringliteral"><sp/><sp/>//<sp/>remove<sp/>temporary<sp/>file</highlight></codeline>
<codeline lineno="2398"><highlight class="stringliteral"><sp/><sp/>d.remove(infName);</highlight></codeline>
<codeline lineno="2399"><highlight class="stringliteral"><sp/><sp/>return<sp/>TRUE;</highlight></codeline>
<codeline lineno="2400"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2401"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2402"><highlight class="stringliteral">void<sp/>RTFGenerator::startDotGraph()</highlight></codeline>
<codeline lineno="2403"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2404"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(startDotGraph)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2405"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2406"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2407"><highlight class="stringliteral">void<sp/>RTFGenerator::endDotGraph(const<sp/>DotClassGraph<sp/>&amp;g)</highlight></codeline>
<codeline lineno="2408"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2409"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2410"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2411"><highlight class="stringliteral"><sp/><sp/>QCString<sp/>fn<sp/>=</highlight></codeline>
<codeline lineno="2412"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>g.writeGraph(t,BITMAP,Config_getString(&quot;</highlight><highlight class="normal">RTF_OUTPUT</highlight><highlight class="stringliteral">&quot;),fileName,relPath,TRUE,FALSE);</highlight></codeline>
<codeline lineno="2413"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2414"><highlight class="stringliteral"><sp/><sp/>//<sp/>display<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="2415"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2416"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2417"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">\\par\\pard<sp/>\\qc<sp/>{\\field\\flddirty<sp/>{\\*\\fldinst<sp/>INCLUDEPICTURE<sp/>\</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>fn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Config_getEnum(</highlight><highlight class="stringliteral">&quot;DOT_IMAGE_FORMAT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>\\\\d<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>IMAGE}}\\par&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>(endDotGraph)}&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::startInclDepGraph()</highlight></codeline>
<codeline lineno="2426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>(startInclDepGraph)}&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::endInclDepGraph(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d03/class_dot_incl_dep_graph" kindref="compound" tooltip="Representation of an include dependency graph.">DotInclDepGraph</ref><sp/>&amp;g)</highlight></codeline>
<codeline lineno="2431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/>QCString<sp/>fn<sp/>=<sp/>g.writeGraph(t,BITMAP,Config_getString(</highlight><highlight class="stringliteral">&quot;RTF_OUTPUT&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileName,relPath,FALSE);</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>display<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par\\pard<sp/>\\qc<sp/>{\\field\\flddirty<sp/>{\\*\\fldinst<sp/>INCLUDEPICTURE<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>fn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Config_getEnum(</highlight><highlight class="stringliteral">&quot;DOT_IMAGE_FORMAT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>\\\\d<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>IMAGE}}\\par&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>(endInclDepGraph)}&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::startGroupCollaboration()</highlight></codeline>
<codeline lineno="2448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::endGroupCollaboration(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d5f/class_dot_group_collaboration" kindref="compound" tooltip="Representation of a group collaboration graph.">DotGroupCollaboration</ref><sp/>&amp;)</highlight></codeline>
<codeline lineno="2452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::startCallGraph()</highlight></codeline>
<codeline lineno="2456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>(startCallGraph)}&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::endCallGraph(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/dff/class_dot_call_graph" kindref="compound" tooltip="Representation of an call graph.">DotCallGraph</ref><sp/>&amp;g)</highlight></codeline>
<codeline lineno="2461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/>QCString<sp/>fn<sp/>=<sp/>g.writeGraph(t,BITMAP,Config_getString(</highlight><highlight class="stringliteral">&quot;RTF_OUTPUT&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileName,relPath,FALSE);</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>display<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par\\pard<sp/>\\qc<sp/>{\\field\\flddirty<sp/>{\\*\\fldinst<sp/>INCLUDEPICTURE<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>fn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Config_getEnum(</highlight><highlight class="stringliteral">&quot;DOT_IMAGE_FORMAT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>\\\\d<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>IMAGE}}\\par&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>(endCallGraph)}&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::startDirDepGraph()</highlight></codeline>
<codeline lineno="2478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>(startDirDepGraph)}&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::endDirDepGraph(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/dd4/class_dot_dir_deps" kindref="compound" tooltip="Representation of an directory dependency graph.">DotDirDeps</ref><sp/>&amp;g)</highlight></codeline>
<codeline lineno="2483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/>QCString<sp/>fn<sp/>=<sp/>g.writeGraph(t,BITMAP,Config_getString(</highlight><highlight class="stringliteral">&quot;RTF_OUTPUT&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileName,relPath,FALSE);</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>display<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\par\\pard<sp/>\\qc<sp/>{\\field\\flddirty<sp/>{\\*\\fldinst<sp/>INCLUDEPICTURE<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>fn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Config_getEnum(</highlight><highlight class="stringliteral">&quot;DOT_IMAGE_FORMAT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>\\\\d<sp/>\\\\*MERGEFORMAT}{\\fldrslt<sp/>IMAGE}}\\par&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>(endDirDepGraph)}&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testRTFOutput(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="2503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bcount=0;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line=1;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/>QFile<sp/>f(name);</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.open(IO_ReadOnly))</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c=f.getch())!=-1)</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c==</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>escape<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c=f.getch();</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c==-1)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c==</highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>open<sp/>bracket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcount++;</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c==</highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>close<sp/>bracket</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcount--;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bcount&lt;0)</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c==</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>newline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line++;</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bcount==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>file<sp/>is<sp/>OK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal">err:</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;RTF<sp/>integrity<sp/>test<sp/>failed<sp/>at<sp/>line<sp/>%d<sp/>of<sp/>%s<sp/>due<sp/>to<sp/>a<sp/>bracket<sp/>mismatch.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Please<sp/>try<sp/>to<sp/>create<sp/>a<sp/>small<sp/>code<sp/>example<sp/>that<sp/>produces<sp/>this<sp/>error<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>send<sp/>that<sp/>to<sp/>dimitri@stack.nl.\n&quot;</highlight><highlight class="normal">,line,name);</highlight></codeline>
<codeline lineno="2541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight></codeline>
<codeline lineno="2547" refid="d0/da4/class_r_t_f_generator_1a62498deb4b617b2cfb75381f6508a4ed" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/da4/class_r_t_f_generator_1a62498deb4b617b2cfb75381f6508a4ed" kindref="member" tooltip="This is an API to a VERY brittle RTF preprocessor that combines nested RTF files.">RTFGenerator::preProcessFileInplace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="2548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/>QDir<sp/>d(path);</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>original<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d.exists())</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;Output<sp/>dir<sp/>%s<sp/>does<sp/>not<sp/>exist!\n&quot;</highlight><highlight class="normal">,path);</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/>QCString<sp/>oldDir<sp/>=<sp/>QDir::currentDirPath().utf8();</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>to<sp/>the<sp/>html<sp/>output<sp/>directory<sp/>(i.e.<sp/>path)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/>QDir::setCurrent(d.absPath());</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/>QDir<sp/>thisDir;</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/>QCString<sp/>combinedName<sp/>=<sp/>(QCString)path+</highlight><highlight class="stringliteral">&quot;/combined.rtf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/>QCString<sp/>mainRTFName<sp/><sp/>=<sp/>(QCString)path+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+name;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/>QFile<sp/>outf(combinedName);</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outf.open(IO_WriteOnly))</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>%s<sp/>for<sp/>writing!\n&quot;</highlight><highlight class="normal">,combinedName.data());</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><ref refid="dc/d3c/class_f_text_stream" kindref="compound" tooltip="Simplified and optimized version of QTextStream.">FTextStream</ref><sp/>outt(&amp;outf);</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!preProcessFile(thisDir,mainRTFName,outt))</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>failed,<sp/>remove<sp/>the<sp/>temp<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/>outf.close();</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/>thisDir.remove(combinedName);</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/>QDir::setCurrent(oldDir);</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>everything<sp/>worked,<sp/>move<sp/>the<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/>outf.close();</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/>thisDir.remove(mainRTFName);</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/>thisDir.rename(combinedName,mainRTFName);</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/>testRTFOutput(mainRTFName);</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/>QDir::setCurrent(oldDir);</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RTFGenerator::startMemberGroupHeader(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasHeader)</highlight></codeline>
<codeline lineno="2594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{\\comment<sp/>startMemberGroupHeader}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2597"><highlight class="stringliteral"><sp/><sp/>if<sp/>(hasHeader)<sp/>incrementIndentLevel();</highlight></codeline>
<codeline lineno="2598"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_Style[&quot;</highlight><highlight class="normal">GroupHeader</highlight><highlight class="stringliteral">&quot;]-&gt;reference;</highlight></codeline>
<codeline lineno="2599"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2600"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2601"><highlight class="stringliteral">void<sp/>RTFGenerator::endMemberGroupHeader()</highlight></codeline>
<codeline lineno="2602"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2603"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>endMemberGroupHeader}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2604"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2605"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_CList_DepthStyle();</highlight></codeline>
<codeline lineno="2606"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2607"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2608"><highlight class="stringliteral">void<sp/>RTFGenerator::startMemberGroupDocs()</highlight></codeline>
<codeline lineno="2609"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2610"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>startMemberGroupDocs}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2611"><highlight class="stringliteral"><sp/><sp/>startEmphasis();</highlight></codeline>
<codeline lineno="2612"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2613"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2614"><highlight class="stringliteral">void<sp/>RTFGenerator::endMemberGroupDocs()</highlight></codeline>
<codeline lineno="2615"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2616"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>endMemberGroupDocs}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2617"><highlight class="stringliteral"><sp/><sp/>endEmphasis();</highlight></codeline>
<codeline lineno="2618"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2619"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2620"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2621"><highlight class="stringliteral">void<sp/>RTFGenerator::startMemberGroup()</highlight></codeline>
<codeline lineno="2622"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2623"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>startMemberGroup}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2624"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_BList_DepthStyle()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2625"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2626"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2627"><highlight class="stringliteral">void<sp/>RTFGenerator::endMemberGroup(bool<sp/>hasHeader)</highlight></codeline>
<codeline lineno="2628"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2629"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>endMemberGroup}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2630"><highlight class="stringliteral"><sp/><sp/>if<sp/>(hasHeader)<sp/>decrementIndentLevel();</highlight></codeline>
<codeline lineno="2631"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="2632"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2633"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2634"><highlight class="stringliteral">void<sp/>RTFGenerator::startSimpleSect(SectionTypes,const<sp/>char<sp/>*file,const<sp/>char<sp/>*anchor,const<sp/>char<sp/>*title)</highlight></codeline>
<codeline lineno="2635"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2636"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(startSimpleSect)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2637"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;;<sp/>//<sp/>ends<sp/>at<sp/>endDescList</highlight></codeline>
<codeline lineno="2638"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;;<sp/>//<sp/>ends<sp/>at<sp/>endDescTitle</highlight></codeline>
<codeline lineno="2639"><highlight class="stringliteral"><sp/><sp/>startBold();</highlight></codeline>
<codeline lineno="2640"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2641"><highlight class="stringliteral"><sp/><sp/>if<sp/>(file)</highlight></codeline>
<codeline lineno="2642"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2643"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>writeObjectLink(0,file,anchor,title);</highlight></codeline>
<codeline lineno="2644"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2645"><highlight class="stringliteral"><sp/><sp/>else</highlight></codeline>
<codeline lineno="2646"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2647"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>docify(title);</highlight></codeline>
<codeline lineno="2648"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2649"><highlight class="stringliteral"><sp/><sp/>endBold();</highlight></codeline>
<codeline lineno="2650"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="2651"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2652"><highlight class="stringliteral"><sp/><sp/>incrementIndentLevel();</highlight></codeline>
<codeline lineno="2653"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_DList_DepthStyle();</highlight></codeline>
<codeline lineno="2654"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2655"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2656"><highlight class="stringliteral">void<sp/>RTFGenerator::endSimpleSect()</highlight></codeline>
<codeline lineno="2657"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2658"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(endSimpleSect)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2659"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2660"><highlight class="stringliteral"><sp/><sp/>decrementIndentLevel();</highlight></codeline>
<codeline lineno="2661"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="2662"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="2663"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2664"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2665"><highlight class="stringliteral">void<sp/>RTFGenerator::startParamList(ParamListTypes,const<sp/>char<sp/>*title)</highlight></codeline>
<codeline lineno="2666"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2667"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(startParamList)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2668"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;;<sp/>//<sp/>ends<sp/>at<sp/>endParamList</highlight></codeline>
<codeline lineno="2669"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&quot;;<sp/>//<sp/>ends<sp/>at<sp/>endDescTitle</highlight></codeline>
<codeline lineno="2670"><highlight class="stringliteral"><sp/><sp/>startBold();</highlight></codeline>
<codeline lineno="2671"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2672"><highlight class="stringliteral"><sp/><sp/>docify(title);</highlight></codeline>
<codeline lineno="2673"><highlight class="stringliteral"><sp/><sp/>endBold();</highlight></codeline>
<codeline lineno="2674"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="2675"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2676"><highlight class="stringliteral"><sp/><sp/>incrementIndentLevel();</highlight></codeline>
<codeline lineno="2677"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_DList_DepthStyle();</highlight></codeline>
<codeline lineno="2678"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2679"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2680"><highlight class="stringliteral">void<sp/>RTFGenerator::endParamList()</highlight></codeline>
<codeline lineno="2681"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2682"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(endParamList)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2683"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2684"><highlight class="stringliteral"><sp/><sp/>decrementIndentLevel();</highlight></codeline>
<codeline lineno="2685"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="2686"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="2687"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2688"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2689"><highlight class="stringliteral">void<sp/>RTFGenerator::startParameterType(bool<sp/>first,const<sp/>char<sp/>*key)</highlight></codeline>
<codeline lineno="2690"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2691"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(startParameterType)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2692"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!first<sp/>&amp;&amp;<sp/>key)</highlight></codeline>
<codeline lineno="2693"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2694"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>key<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="2695"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2696"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2697"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2698"><highlight class="stringliteral">void<sp/>RTFGenerator::endParameterType()</highlight></codeline>
<codeline lineno="2699"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2700"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(endParameterType)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2701"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="2702"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2703"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2704"><highlight class="stringliteral">void<sp/>RTFGenerator::exceptionEntry(const<sp/>char*<sp/>prefix,bool<sp/>closeBracket)</highlight></codeline>
<codeline lineno="2705"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2706"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(exceptionEntry)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2707"><highlight class="stringliteral"><sp/><sp/>if<sp/>(prefix)</highlight></codeline>
<codeline lineno="2708"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>prefix;</highlight></codeline>
<codeline lineno="2709"><highlight class="stringliteral"><sp/><sp/>else<sp/>if<sp/>(closeBracket)</highlight></codeline>
<codeline lineno="2710"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="2711"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="2712"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2713"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2714"><highlight class="stringliteral">void<sp/>RTFGenerator::writeDoc(DocNode<sp/>*n,Definition<sp/>*ctx,MemberDef<sp/>*)</highlight></codeline>
<codeline lineno="2715"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2716"><highlight class="stringliteral"><sp/><sp/>RTFDocVisitor<sp/>*visitor<sp/>=<sp/>new<sp/>RTFDocVisitor(t,*this,ctx?ctx-&gt;getDefFileExtension():QCString(&quot;</highlight><highlight class="stringliteral">&quot;));</highlight></codeline>
<codeline lineno="2717"><highlight class="stringliteral"><sp/><sp/>n-&gt;accept(visitor);</highlight></codeline>
<codeline lineno="2718"><highlight class="stringliteral"><sp/><sp/>delete<sp/>visitor;<sp/></highlight></codeline>
<codeline lineno="2719"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="2720"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2721"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2722"><highlight class="stringliteral">void<sp/>RTFGenerator::rtfwriteRuler_doubleline()<sp/></highlight></codeline>
<codeline lineno="2723"><highlight class="stringliteral">{<sp/></highlight></codeline>
<codeline lineno="2724"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(rtfwriteRuler_doubleline)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2725"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\pard\\widctlpar\\brdrb\\brdrdb\\brdrw15\\brsp20<sp/>\\adjustright<sp/>\\par}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="2726"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2727"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2728"><highlight class="stringliteral">void<sp/>RTFGenerator::rtfwriteRuler_emboss()<sp/></highlight></codeline>
<codeline lineno="2729"><highlight class="stringliteral">{<sp/></highlight></codeline>
<codeline lineno="2730"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(rtfwriteRuler_emboss)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2731"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\pard\\widctlpar\\brdrb\\brdremboss\\brdrw15\\brsp20<sp/>\\adjustright<sp/>\\par}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="2732"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2733"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2734"><highlight class="stringliteral">void<sp/>RTFGenerator::rtfwriteRuler_thick()<sp/></highlight></codeline>
<codeline lineno="2735"><highlight class="stringliteral">{<sp/></highlight></codeline>
<codeline lineno="2736"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(rtfwriteRuler_thick)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2737"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\pard\\widctlpar\\brdrb\\brdrs\\brdrw75\\brsp20<sp/>\\adjustright<sp/>\\par}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="2738"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2739"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2740"><highlight class="stringliteral">void<sp/>RTFGenerator::rtfwriteRuler_thin()<sp/></highlight></codeline>
<codeline lineno="2741"><highlight class="stringliteral">{<sp/></highlight></codeline>
<codeline lineno="2742"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\comment<sp/>(rtfwriteRuler_thin)}</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2743"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="normal">{\\pard\\widctlpar\\brdrb\\brdrs\\brdrw5\\brsp20<sp/>\\adjustright<sp/>\\par}</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="2744"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2745"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2746"><highlight class="stringliteral">#if<sp/>0</highlight></codeline>
<codeline lineno="2747"><highlight class="stringliteral">void<sp/>RTFGenerator::postProcess(QByteArray<sp/>&amp;a)</highlight></codeline>
<codeline lineno="2748"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2749"><highlight class="stringliteral"><sp/><sp/>QByteArray<sp/>enc(a.size()*4);<sp/>//<sp/>worst<sp/>case</highlight></codeline>
<codeline lineno="2750"><highlight class="stringliteral"><sp/><sp/>int<sp/>off=0;</highlight></codeline>
<codeline lineno="2751"><highlight class="stringliteral"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="2752"><highlight class="stringliteral"><sp/><sp/>bool<sp/>mbFlag=FALSE;</highlight></codeline>
<codeline lineno="2753"><highlight class="stringliteral"><sp/><sp/>for<sp/>(i=0;i&lt;a.size();i++)</highlight></codeline>
<codeline lineno="2754"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2755"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>unsigned<sp/>char<sp/>c<sp/>=<sp/>(unsigned<sp/>char)a.at(i);</highlight></codeline>
<codeline lineno="2756"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2757"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>//<sp/>treat<sp/>characters<sp/>&gt;<sp/>0x80<sp/>as<sp/>multibyte<sp/>characters,<sp/>except<sp/>when<sp/>they</highlight></codeline>
<codeline lineno="2758"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>//<sp/>are<sp/>control<sp/>characters<sp/></highlight></codeline>
<codeline lineno="2759"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(c&gt;0x80<sp/>||<sp/>(mbFlag<sp/>&amp;&amp;<sp/>c!=&apos;\\&apos;<sp/>&amp;&amp;<sp/>c!=&apos;{&apos;<sp/>&amp;&amp;<sp/>c!=&apos;}&apos;))</highlight></codeline>
<codeline lineno="2760"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2761"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>s[10];</highlight></codeline>
<codeline lineno="2762"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(s,&quot;</highlight><highlight class="normal">\\</highlight><highlight class="stringliteral">&apos;%X&quot;,c);</highlight></codeline>
<codeline lineno="2763"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>qstrcpy(enc.data()+off,s);</highlight></codeline>
<codeline lineno="2764"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>off+=qstrlen(s);</highlight></codeline>
<codeline lineno="2765"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>mbFlag=c&gt;0x80;</highlight></codeline>
<codeline lineno="2766"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2767"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="2768"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2769"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>enc.at(off++)=c;</highlight></codeline>
<codeline lineno="2770"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2771"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2772"><highlight class="stringliteral"><sp/><sp/>enc.resize(off);</highlight></codeline>
<codeline lineno="2773"><highlight class="stringliteral"><sp/><sp/>a<sp/>=<sp/>enc;</highlight></codeline>
<codeline lineno="2774"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2775"><highlight class="stringliteral">#endif</highlight></codeline>
<codeline lineno="2776"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2777"><highlight class="stringliteral">void<sp/>RTFGenerator::startConstraintList(const<sp/>char<sp/>*header)</highlight></codeline>
<codeline lineno="2778"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2779"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startConstraintList)}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2780"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{&quot;;<sp/>//<sp/>ends<sp/>at<sp/>endConstraintList</highlight></codeline>
<codeline lineno="2781"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{&quot;;<sp/></highlight></codeline>
<codeline lineno="2782"><highlight class="stringliteral"><sp/><sp/>startBold();</highlight></codeline>
<codeline lineno="2783"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2784"><highlight class="stringliteral"><sp/><sp/>docify(header);</highlight></codeline>
<codeline lineno="2785"><highlight class="stringliteral"><sp/><sp/>endBold();</highlight></codeline>
<codeline lineno="2786"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;}&quot;;</highlight></codeline>
<codeline lineno="2787"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2788"><highlight class="stringliteral"><sp/><sp/>incrementIndentLevel();</highlight></codeline>
<codeline lineno="2789"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_DList_DepthStyle();</highlight></codeline>
<codeline lineno="2790"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2791"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2792"><highlight class="stringliteral">void<sp/>RTFGenerator::startConstraintParam()</highlight></codeline>
<codeline lineno="2793"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2794"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startConstraintParam)}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2795"><highlight class="stringliteral"><sp/><sp/>startEmphasis();</highlight></codeline>
<codeline lineno="2796"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2797"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2798"><highlight class="stringliteral">void<sp/>RTFGenerator::endConstraintParam()</highlight></codeline>
<codeline lineno="2799"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2800"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endConstraintParam)}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2801"><highlight class="stringliteral"><sp/><sp/>endEmphasis();</highlight></codeline>
<codeline lineno="2802"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;<sp/>:<sp/>&quot;;</highlight></codeline>
<codeline lineno="2803"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2804"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2805"><highlight class="stringliteral">void<sp/>RTFGenerator::startConstraintType()</highlight></codeline>
<codeline lineno="2806"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2807"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startConstraintType)}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2808"><highlight class="stringliteral"><sp/><sp/>startEmphasis();</highlight></codeline>
<codeline lineno="2809"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2810"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2811"><highlight class="stringliteral">void<sp/>RTFGenerator::endConstraintType()</highlight></codeline>
<codeline lineno="2812"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2813"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endConstraintType)}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2814"><highlight class="stringliteral"><sp/><sp/>endEmphasis();</highlight></codeline>
<codeline lineno="2815"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;;</highlight></codeline>
<codeline lineno="2816"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2817"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2818"><highlight class="stringliteral">void<sp/>RTFGenerator::startConstraintDocs()</highlight></codeline>
<codeline lineno="2819"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2820"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startConstraintDocs)}&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2821"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2822"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2823"><highlight class="stringliteral">void<sp/>RTFGenerator::endConstraintDocs()</highlight></codeline>
<codeline lineno="2824"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2825"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endConstraintDocs)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2826"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2827"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2828"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2829"><highlight class="stringliteral">void<sp/>RTFGenerator::endConstraintList()</highlight></codeline>
<codeline lineno="2830"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2831"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endConstraintList)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2832"><highlight class="stringliteral"><sp/><sp/>newParagraph();</highlight></codeline>
<codeline lineno="2833"><highlight class="stringliteral"><sp/><sp/>decrementIndentLevel();</highlight></codeline>
<codeline lineno="2834"><highlight class="stringliteral"><sp/><sp/>m_omitParagraph<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="2835"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;}&quot;;</highlight></codeline>
<codeline lineno="2836"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2837"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2838"><highlight class="stringliteral">void<sp/>RTFGenerator::startIndexListItem()</highlight></codeline>
<codeline lineno="2839"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2840"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startIndexListItem)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2841"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2842"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2843"><highlight class="stringliteral">void<sp/>RTFGenerator::endIndexListItem()</highlight></codeline>
<codeline lineno="2844"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2845"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endIndexListItem)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2846"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\par&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2847"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2848"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2849"><highlight class="stringliteral">void<sp/>RTFGenerator::startInlineHeader()<sp/></highlight></codeline>
<codeline lineno="2850"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2851"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startInlineHeader)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2852"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2853"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_Style[&quot;Heading5&quot;]-&gt;reference;</highlight></codeline>
<codeline lineno="2854"><highlight class="stringliteral"><sp/><sp/>startBold();</highlight></codeline>
<codeline lineno="2855"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2856"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2857"><highlight class="stringliteral">void<sp/>RTFGenerator::endInlineHeader()<sp/></highlight></codeline>
<codeline lineno="2858"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2859"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endInlineHeader)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2860"><highlight class="stringliteral"><sp/><sp/>endBold();</highlight></codeline>
<codeline lineno="2861"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\par&quot;;</highlight></codeline>
<codeline lineno="2862"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2863"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2864"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2865"><highlight class="stringliteral">void<sp/>RTFGenerator::startMemberDocSimple()</highlight></codeline>
<codeline lineno="2866"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2867"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startMemberDocSimple)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2868"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{\\par&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2869"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{&quot;<sp/>&lt;&lt;<sp/>rtf_Style[&quot;Heading5&quot;]-&gt;reference<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2870"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>theTranslator-&gt;trCompoundMembers()<sp/>&lt;&lt;<sp/>&quot;:\\par}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2871"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>rtf_Style_Reset<sp/>&lt;&lt;<sp/>rtf_DList_DepthStyle();</highlight></codeline>
<codeline lineno="2872"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\trowd<sp/>\\trgaph108\\trleft426\\tblind426&quot;</highlight></codeline>
<codeline lineno="2873"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\\trbrdrt\\brdrs\\brdrw10\\brdrcf15<sp/>&quot;</highlight></codeline>
<codeline lineno="2874"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\\trbrdrl\\brdrs\\brdrw10\\brdrcf15<sp/>&quot;</highlight></codeline>
<codeline lineno="2875"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\\trbrdrb\\brdrs\\brdrw10\\brdrcf15<sp/>&quot;</highlight></codeline>
<codeline lineno="2876"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\\trbrdrr\\brdrs\\brdrw10\\brdrcf15<sp/>&quot;</highlight></codeline>
<codeline lineno="2877"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\\trbrdrh\\brdrs\\brdrw10\\brdrcf15<sp/>&quot;</highlight></codeline>
<codeline lineno="2878"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\\trbrdrv\\brdrs\\brdrw10\\brdrcf15<sp/>&quot;&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2879"><highlight class="stringliteral"><sp/><sp/>int<sp/>i,columnPos[3]<sp/>=<sp/>{<sp/>25,<sp/>50,<sp/>100<sp/>};</highlight></codeline>
<codeline lineno="2880"><highlight class="stringliteral"><sp/><sp/>for<sp/>(i=0;i&lt;3;i++)</highlight></codeline>
<codeline lineno="2881"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="2882"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\clvertalt\\clbrdrt\\brdrs\\brdrw10\\brdrcf15<sp/>&quot;</highlight></codeline>
<codeline lineno="2883"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\\clbrdrl\\brdrs\\brdrw10\\brdrcf15<sp/>&quot;</highlight></codeline>
<codeline lineno="2884"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\\clbrdrb\\brdrs\\brdrw10\\brdrcf15<sp/>&quot;</highlight></codeline>
<codeline lineno="2885"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\\clbrdrr<sp/>\\brdrs\\brdrw10\\brdrcf15<sp/>&quot;</highlight></codeline>
<codeline lineno="2886"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\\cltxlrtb<sp/>&quot;</highlight></codeline>
<codeline lineno="2887"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\\cellx&quot;<sp/>&lt;&lt;<sp/>(rtf_pageWidth*columnPos[i]/100)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2888"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2889"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\pard<sp/>\\widctlpar\\intbl\\adjustright&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2890"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2891"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2892"><highlight class="stringliteral">void<sp/>RTFGenerator::endMemberDocSimple()</highlight></codeline>
<codeline lineno="2893"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2894"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endMemberDocSimple)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2895"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2896"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2897"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2898"><highlight class="stringliteral">void<sp/>RTFGenerator::startInlineMemberType()</highlight></codeline>
<codeline lineno="2899"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2900"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startInlineMemberType)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2901"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{\\qr<sp/>&quot;;</highlight></codeline>
<codeline lineno="2902"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2903"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2904"><highlight class="stringliteral">void<sp/>RTFGenerator::endInlineMemberType()</highlight></codeline>
<codeline lineno="2905"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2906"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endInlineMemberType)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2907"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\cell<sp/>}&quot;;</highlight></codeline>
<codeline lineno="2908"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2909"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2910"><highlight class="stringliteral">void<sp/>RTFGenerator::startInlineMemberName()</highlight></codeline>
<codeline lineno="2911"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2912"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startInlineMemberName)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2913"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{&quot;;</highlight></codeline>
<codeline lineno="2914"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2915"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2916"><highlight class="stringliteral">void<sp/>RTFGenerator::endInlineMemberName()</highlight></codeline>
<codeline lineno="2917"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2918"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endInlineMemberName)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2919"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\cell<sp/>}&quot;;</highlight></codeline>
<codeline lineno="2920"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2921"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2922"><highlight class="stringliteral">void<sp/>RTFGenerator::startInlineMemberDoc()</highlight></codeline>
<codeline lineno="2923"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2924"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(startInlineMemberDoc)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2925"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{&quot;;</highlight></codeline>
<codeline lineno="2926"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2927"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2928"><highlight class="stringliteral">void<sp/>RTFGenerator::endInlineMemberDoc()</highlight></codeline>
<codeline lineno="2929"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2930"><highlight class="stringliteral"><sp/><sp/>DBG_RTF(t<sp/>&lt;&lt;<sp/>&quot;{\\comment<sp/>(endInlineMemberDoc)}&quot;<sp/>&lt;&lt;<sp/>endl)</highlight></codeline>
<codeline lineno="2931"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;\\cell<sp/>}{\\row<sp/>}&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="2932"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2933"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2934"><highlight class="stringliteral">void<sp/>RTFGenerator::startLabels()</highlight></codeline>
<codeline lineno="2935"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2936"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2937"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2938"><highlight class="stringliteral">void<sp/>RTFGenerator::writeLabel(const<sp/>char<sp/>*l,bool<sp/>isLast)</highlight></codeline>
<codeline lineno="2939"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2940"><highlight class="stringliteral"><sp/><sp/>t<sp/>&lt;&lt;<sp/>&quot;{\\f2<sp/>[&quot;<sp/>&lt;&lt;<sp/>l<sp/>&lt;&lt;<sp/>&quot;]}&quot;;</highlight></codeline>
<codeline lineno="2941"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!isLast)<sp/>t<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;;</highlight></codeline>
<codeline lineno="2942"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2943"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2944"><highlight class="stringliteral">void<sp/>RTFGenerator::endLabels()</highlight></codeline>
<codeline lineno="2945"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2946"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2947"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2948"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2949"><highlight class="stringliteral"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/rtfgen.cpp"/>
  </compounddef>
</doxygen>
