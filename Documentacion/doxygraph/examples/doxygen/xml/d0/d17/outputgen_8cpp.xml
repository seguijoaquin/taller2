<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="d0/d17/outputgen_8cpp" kind="file">
    <compoundname>outputgen.cpp</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">qfile.h</includes>
    <includes refid="df/d06/outputgen_8h" local="yes">outputgen.h</includes>
    <includes refid="d2/d0d/message_8h" local="yes">message.h</includes>
    <includes refid="d2/de2/portable_8h" local="yes">portable.h</includes>
    <incdepgraph>
      <node id="3975">
        <label>qcstring.h</label>
      </node>
      <node id="3984">
        <label>qgstring.h</label>
      </node>
      <node id="3970">
        <label>qfile.h</label>
      </node>
      <node id="3971">
        <label>outputgen.h</label>
        <link refid="df/d06/outputgen_8h_source"/>
        <childnode refid="3972" relation="include">
        </childnode>
        <childnode refid="3973" relation="include">
        </childnode>
        <childnode refid="3976" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
      </node>
      <node id="3972">
        <label>qstack.h</label>
      </node>
      <node id="3988">
        <label>qglobal.h</label>
      </node>
      <node id="3983">
        <label>qstring.h</label>
      </node>
      <node id="3969">
        <label>stdlib.h</label>
      </node>
      <node id="3977">
        <label>sortdict.h</label>
        <link refid="d9/d21/sortdict_8h_source"/>
        <childnode refid="3974" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3979" relation="include">
        </childnode>
      </node>
      <node id="3985">
        <label>message.h</label>
        <link refid="d2/d0d/message_8h_source"/>
        <childnode refid="3981" relation="include">
        </childnode>
      </node>
      <node id="3979">
        <label>qintdict.h</label>
      </node>
      <node id="3968">
        <label>src/outputgen.cpp</label>
        <link refid="outputgen.cpp"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3970" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
        <childnode refid="3985" relation="include">
        </childnode>
        <childnode refid="3986" relation="include">
        </childnode>
      </node>
      <node id="3982">
        <label>qiodevice.h</label>
      </node>
      <node id="3987">
        <label>sys/types.h</label>
      </node>
      <node id="3974">
        <label>qlist.h</label>
      </node>
      <node id="3980">
        <label>ftextstream.h</label>
        <link refid="df/d83/ftextstream_8h_source"/>
        <childnode refid="3981" relation="include">
        </childnode>
        <childnode refid="3982" relation="include">
        </childnode>
        <childnode refid="3983" relation="include">
        </childnode>
        <childnode refid="3984" relation="include">
        </childnode>
      </node>
      <node id="3976">
        <label>section.h</label>
        <link refid="d1/d2a/section_8h_source"/>
        <childnode refid="3977" relation="include">
        </childnode>
      </node>
      <node id="3973">
        <label>index.h</label>
        <link refid="d1/db5/index_8h_source"/>
        <childnode refid="3974" relation="include">
        </childnode>
        <childnode refid="3975" relation="include">
        </childnode>
      </node>
      <node id="3978">
        <label>qdict.h</label>
      </node>
      <node id="3986">
        <label>portable.h</label>
        <link refid="d2/de2/portable_8h"/>
        <childnode refid="3987" relation="include">
        </childnode>
        <childnode refid="3981" relation="include">
        </childnode>
        <childnode refid="3988" relation="include">
        </childnode>
      </node>
      <node id="3981">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>outputgen.cpp,v<sp/>1.15<sp/>2001/03/19<sp/>19:27:41<sp/>root<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1997-2013<sp/>by<sp/>Dimitri<sp/>van<sp/>Heesch.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and<sp/>distribute<sp/>this<sp/>software<sp/>and<sp/>its</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>documentation<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>is<sp/>hereby<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>granted.<sp/>No<sp/>representations<sp/>are<sp/>made<sp/>about<sp/>the<sp/>suitability<sp/>of<sp/>this<sp/>software<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>for<sp/>any<sp/>purpose.<sp/>It<sp/>is<sp/>provided<sp/>&quot;as<sp/>is&quot;<sp/>without<sp/>express<sp/>or<sp/>implied<sp/>warranty.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Documents<sp/>produced<sp/>by<sp/>Doxygen<sp/>are<sp/>derivative<sp/>works<sp/>derived<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>input<sp/>used<sp/>in<sp/>their<sp/>production;<sp/>they<sp/>are<sp/>not<sp/>affected<sp/>by<sp/>this<sp/>license.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;outputgen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;message.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/de2/portable_8h" kindref="compound" tooltip="Portable versions of functions that are platform dependent.">portable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">OutputGenerator::OutputGenerator()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;OutputGenerator::OutputGenerator()\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>file=0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>active=TRUE;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>genStack<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QStack&lt;bool&gt;;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>genStack-&gt;setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">OutputGenerator::~OutputGenerator()</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;OutputGenerator::~OutputGenerator()\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>genStack;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputGenerator::startPlainFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;startPlainFile(%s)\n&quot;,name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>fileName=dir+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+name;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>file<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QFile(fileName);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>create<sp/>file<sp/>object<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,fileName.data());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file-&gt;open(IO_WriteOnly))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>file<sp/>%s<sp/>for<sp/>writing\n&quot;</highlight><highlight class="normal">,fileName.data());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>t.setDevice(file);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputGenerator::endPlainFile()</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>t.unsetDevice();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>file=0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>fileName.resize(0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputGenerator::pushGeneratorState()</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>genStack-&gt;push(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(isEnabled()));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;%p:pushGeneratorState(%d)<sp/>enabled=%d\n&quot;,this,genStack-&gt;count(),isEnabled());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutputGenerator::popGeneratorState()</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;%p:popGeneratorState(%d)<sp/>enabled=%d\n&quot;,this,genStack-&gt;count(),isEnabled());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*lb<sp/>=<sp/>genStack-&gt;pop();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>ASSERT(lb!=0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lb==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>some<sp/>robustness<sp/>against<sp/>superfluous<sp/>\endhtmlonly<sp/>commands.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*lb)<sp/>enable();<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>disable();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>lb;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/outputgen.cpp"/>
  </compounddef>
</doxygen>
