<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="d8/d6a/message_8cpp" kind="file">
    <compoundname>message.cpp</compoundname>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">qdatetime.h</includes>
    <includes refid="db/d16/config_8h" local="yes">config.h</includes>
    <includes refid="d8/d3c/util_8h" local="yes">util.h</includes>
    <includes refid="db/d16/debug_8h" local="yes">debug.h</includes>
    <includes refid="d1/da1/doxygen_8h" local="yes">doxygen.h</includes>
    <includes refid="d2/de2/portable_8h" local="yes">portable.h</includes>
    <includes refid="d4/d3a/filedef_8h" local="yes">filedef.h</includes>
    <incdepgraph>
      <node id="3764">
        <label>qcstring.h</label>
      </node>
      <node id="3760">
        <label>qgstring.h</label>
      </node>
      <node id="3750">
        <label>stdarg.h</label>
      </node>
      <node id="3752">
        <label>qdatetime.h</label>
      </node>
      <node id="3754">
        <label>qstrlist.h</label>
      </node>
      <node id="3777">
        <label>qglobal.h</label>
      </node>
      <node id="3759">
        <label>qstring.h</label>
      </node>
      <node id="3770">
        <label>membergroup.h</label>
        <link refid="d9/d11/membergroup_8h_source"/>
        <childnode refid="3756" relation="include">
        </childnode>
        <childnode refid="3769" relation="include">
        </childnode>
        <childnode refid="3763" relation="include">
        </childnode>
      </node>
      <node id="3769">
        <label>sortdict.h</label>
        <link refid="d9/d21/sortdict_8h_source"/>
        <childnode refid="3756" relation="include">
        </childnode>
        <childnode refid="3755" relation="include">
        </childnode>
        <childnode refid="3768" relation="include">
        </childnode>
      </node>
      <node id="3773">
        <label>memberlist.h</label>
        <link refid="dd/d78/memberlist_8h_source"/>
        <childnode refid="3756" relation="include">
        </childnode>
        <childnode refid="3774" relation="include">
        </childnode>
        <childnode refid="3769" relation="include">
        </childnode>
        <childnode refid="3763" relation="include">
        </childnode>
      </node>
      <node id="3749">
        <label>src/message.cpp</label>
        <link refid="message.cpp"/>
        <childnode refid="3750" relation="include">
        </childnode>
        <childnode refid="3751" relation="include">
        </childnode>
        <childnode refid="3752" relation="include">
        </childnode>
        <childnode refid="3753" relation="include">
        </childnode>
        <childnode refid="3761" relation="include">
        </childnode>
        <childnode refid="3765" relation="include">
        </childnode>
        <childnode refid="3766" relation="include">
        </childnode>
        <childnode refid="3776" relation="include">
        </childnode>
        <childnode refid="3778" relation="include">
        </childnode>
      </node>
      <node id="3767">
        <label>qcache.h</label>
      </node>
      <node id="3761">
        <label>util.h</label>
        <link refid="d8/d3c/util_8h"/>
        <childnode refid="3756" relation="include">
        </childnode>
        <childnode refid="3762" relation="include">
        </childnode>
        <childnode refid="3763" relation="include">
        </childnode>
      </node>
      <node id="3768">
        <label>qintdict.h</label>
      </node>
      <node id="3758">
        <label>qiodevice.h</label>
      </node>
      <node id="3753">
        <label>config.h</label>
        <link refid="db/d16/config_8h_source"/>
        <childnode refid="3754" relation="include">
        </childnode>
        <childnode refid="3755" relation="include">
        </childnode>
        <childnode refid="3756" relation="include">
        </childnode>
        <childnode refid="3757" relation="include">
        </childnode>
      </node>
      <node id="3775">
        <label>sys/types.h</label>
      </node>
      <node id="3763">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="3764" relation="include">
        </childnode>
      </node>
      <node id="3756">
        <label>qlist.h</label>
      </node>
      <node id="3757">
        <label>ftextstream.h</label>
        <link refid="df/d83/ftextstream_8h_source"/>
        <childnode refid="3751" relation="include">
        </childnode>
        <childnode refid="3758" relation="include">
        </childnode>
        <childnode refid="3759" relation="include">
        </childnode>
        <childnode refid="3760" relation="include">
        </childnode>
      </node>
      <node id="3766">
        <label>doxygen.h</label>
        <link refid="d1/da1/doxygen_8h_source"/>
        <childnode refid="3752" relation="include">
        </childnode>
        <childnode refid="3767" relation="include">
        </childnode>
        <childnode refid="3754" relation="include">
        </childnode>
        <childnode refid="3755" relation="include">
        </childnode>
        <childnode refid="3768" relation="include">
        </childnode>
        <childnode refid="3757" relation="include">
        </childnode>
        <childnode refid="3769" relation="include">
        </childnode>
        <childnode refid="3770" relation="include">
        </childnode>
        <childnode refid="3771" relation="include">
        </childnode>
        <childnode refid="3773" relation="include">
        </childnode>
      </node>
      <node id="3774">
        <label>memberdef.h</label>
        <link refid="d4/d46/memberdef_8h_source"/>
        <childnode refid="3756" relation="include">
        </childnode>
        <childnode refid="3775" relation="include">
        </childnode>
        <childnode refid="3763" relation="include">
        </childnode>
        <childnode refid="3772" relation="include">
        </childnode>
      </node>
      <node id="3778">
        <label>filedef.h</label>
        <link refid="d4/d3a/filedef_8h_source"/>
        <childnode refid="3779" relation="include">
        </childnode>
        <childnode refid="3756" relation="include">
        </childnode>
        <childnode refid="3768" relation="include">
        </childnode>
        <childnode refid="3755" relation="include">
        </childnode>
        <childnode refid="3772" relation="include">
        </childnode>
        <childnode refid="3769" relation="include">
        </childnode>
        <childnode refid="3773" relation="include">
        </childnode>
      </node>
      <node id="3762">
        <label>ctype.h</label>
      </node>
      <node id="3772">
        <label>definition.h</label>
        <link refid="df/da1/definition_8h_source"/>
        <childnode refid="3756" relation="include">
        </childnode>
        <childnode refid="3755" relation="include">
        </childnode>
        <childnode refid="3763" relation="include">
        </childnode>
      </node>
      <node id="3779">
        <label>index.h</label>
        <link refid="d1/db5/index_8h_source"/>
        <childnode refid="3756" relation="include">
        </childnode>
        <childnode refid="3764" relation="include">
        </childnode>
      </node>
      <node id="3771">
        <label>dirdef.h</label>
        <link refid="d6/d15/dirdef_8h_source"/>
        <childnode refid="3769" relation="include">
        </childnode>
        <childnode refid="3772" relation="include">
        </childnode>
        <childnode refid="3756" relation="include">
        </childnode>
      </node>
      <node id="3765">
        <label>debug.h</label>
        <link refid="db/d16/debug_8h_source"/>
      </node>
      <node id="3755">
        <label>qdict.h</label>
      </node>
      <node id="3776">
        <label>portable.h</label>
        <link refid="d2/de2/portable_8h"/>
        <childnode refid="3775" relation="include">
        </childnode>
        <childnode refid="3751" relation="include">
        </childnode>
        <childnode refid="3777" relation="include">
        </childnode>
      </node>
      <node id="3751">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d8/d6a/message_8cpp_1aae5dc54892d028a2e49f6948e36aac40" prot="public" static="yes" mutable="no">
        <type>QCString</type>
        <definition>QCString outputFormat</definition>
        <argsstring></argsstring>
        <name>outputFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" line="28" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d6a/message_8cpp_1a4b306c7d6514a51d731a5b581ce6c2a4" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* warning_str</definition>
        <argsstring></argsstring>
        <name>warning_str</name>
        <initializer>= &quot;Warning: &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" line="29" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d6a/message_8cpp_1adda1f8011db5f4f0ec3d8ece91cfa724" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* error_str</definition>
        <argsstring></argsstring>
        <name>error_str</name>
        <initializer>= &quot;Error: &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" line="30" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d6a/message_8cpp_1aad6aa2121493ea505c73de70d07a43e3" prot="public" static="yes" mutable="no">
        <type>FILE *</type>
        <definition>FILE* warnFile</definition>
        <argsstring></argsstring>
        <name>warnFile</name>
        <initializer>= stderr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" line="38" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d8/d6a/message_8cpp_1aa0b7262dc94aba9476d8669db4f3920e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initWarningFormat</definition>
        <argsstring>()</argsstring>
        <name>initWarningFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" line="41" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" bodystart="40" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6a/message_8cpp_1aba549a028419cd48a3f373037c2c57eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void msg</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>msg</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" line="105" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" bodystart="104" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6a/message_8cpp_1a3586e196f3443b0c7af857f7979d8e1d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void format_warn</definition>
        <argsstring>(const char *file, int line, const char *text)</argsstring>
        <name>format_warn</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" line="120" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" bodystart="119" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6a/message_8cpp_1ab1f760c295bc73906c99e31e57a0c029" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void do_warn</definition>
        <argsstring>(const char *tag, const char *file, int line, const char *prefix, const char *fmt, va_list args)</argsstring>
        <name>do_warn</name>
        <param>
          <type>const char *</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" line="155" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" bodystart="154" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6a/message_8cpp_1ac12b157a1efe7b031cb8d0de93e2f0d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void warn</definition>
        <argsstring>(const char *file, int line, const char *fmt,...)</argsstring>
        <name>warn</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" line="170" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" bodystart="169" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6a/message_8cpp_1a13fc8bbf2602cc597f2cc223cfd6be0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void warn_simple</definition>
        <argsstring>(const char *file, int line, const char *text)</argsstring>
        <name>warn_simple</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" line="178" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" bodystart="177" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6a/message_8cpp_1a71da3f2eeb14a943214bf5986124133a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void warn_undoc</definition>
        <argsstring>(const char *file, int line, const char *fmt,...)</argsstring>
        <name>warn_undoc</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" line="184" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" bodystart="183" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6a/message_8cpp_1aa53c6662002163281ef295732ea52493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void warn_doc_error</definition>
        <argsstring>(const char *file, int line, const char *fmt,...)</argsstring>
        <name>warn_doc_error</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" line="192" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" bodystart="191" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6a/message_8cpp_1a1fd98c6976d3826490804976e17eb83f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void warn_uncond</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>warn_uncond</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" line="200" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" bodystart="199" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="d8/d6a/message_8cpp_1aede5746344fdce99647541101eaa7f06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void err</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>err</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" line="208" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp" bodystart="207" bodyend="213"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>message.cpp,v<sp/>1.9<sp/>2001/03/19<sp/>19:27:41<sp/>root<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1997-2013<sp/>by<sp/>Dimitri<sp/>van<sp/>Heesch.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and<sp/>distribute<sp/>this<sp/>software<sp/>and<sp/>its</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>documentation<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>is<sp/>hereby<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>granted.<sp/>No<sp/>representations<sp/>are<sp/>made<sp/>about<sp/>the<sp/>suitability<sp/>of<sp/>this<sp/>software<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>for<sp/>any<sp/>purpose.<sp/>It<sp/>is<sp/>provided<sp/>&quot;as<sp/>is&quot;<sp/>without<sp/>express<sp/>or<sp/>implied<sp/>warranty.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Documents<sp/>produced<sp/>by<sp/>Doxygen<sp/>are<sp/>derivative<sp/>works<sp/>derived<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>input<sp/>used<sp/>in<sp/>their<sp/>production;<sp/>they<sp/>are<sp/>not<sp/>affected<sp/>by<sp/>this<sp/>license.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qdatetime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d3c/util_8h" kindref="compound" tooltip="A bunch of utility functions.">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;debug.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;doxygen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/de2/portable_8h" kindref="compound" tooltip="Portable versions of functions that are platform dependent.">portable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;filedef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QCString<sp/>outputFormat;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*warning_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Warning:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//static<sp/>int<sp/>warnFormatOrder;<sp/>//<sp/>1<sp/>=<sp/>$file,$line,$text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>2<sp/>=<sp/>$text,$line,$file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>3<sp/>=<sp/>$line,$text,$file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>4<sp/>=<sp/>$file,$text,$line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>5<sp/>=<sp/>$text,$file,$line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>6<sp/>=<sp/>$line,$file,$text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FILE<sp/>*warnFile<sp/>=<sp/>stderr;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initWarningFormat()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>int<sp/>filePos<sp/>=<sp/>Config_getString(&quot;WARN_FORMAT&quot;).find(&quot;$file&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>int<sp/>linePos<sp/>=<sp/>Config_getString(&quot;WARN_FORMAT&quot;).find(&quot;$line&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>int<sp/>textPos<sp/>=<sp/>Config_getString(&quot;WARN_FORMAT&quot;).find(&quot;$text&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>//<sp/>sort<sp/>items<sp/>on<sp/>position<sp/>(there<sp/>are<sp/>6<sp/>cases)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>warnFormatOrder<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(filePos&gt;linePos<sp/>&amp;&amp;<sp/>filePos&gt;textPos)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(linePos&gt;textPos)<sp/>//<sp/>$text,$line,$file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>warnFormatOrder<sp/>=<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>$line,$text,$file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>warnFormatOrder<sp/>=<sp/>3;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>else<sp/>if<sp/>(filePos&lt;linePos<sp/>&amp;&amp;<sp/>filePos&lt;textPos)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(linePos&gt;textPos)<sp/>//<sp/>$file,$text,$line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>warnFormatOrder<sp/>=<sp/>4;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>else<sp/>if<sp/>(filePos&lt;linePos<sp/>&amp;&amp;<sp/>filePos&gt;textPos)<sp/>//<sp/>$text,$file,$line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>warnFormatOrder<sp/>=<sp/>5;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>else<sp/>//<sp/>$line,$file,$text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>warnFormatOrder<sp/>=<sp/>6;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>outputFormat<sp/>=<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>substitute(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substitute(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substitute(<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Config_getString(&quot;WARN_FORMAT&quot;),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;$file&quot;,&quot;%s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;$text&quot;,&quot;%s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;$line&quot;,&quot;%d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>)+&apos;\n&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>replace(QRegExp(&quot;\\$file&quot;),&quot;%s&quot;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>replace(QRegExp(&quot;\\$text&quot;),&quot;%s&quot;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>replace(QRegExp(&quot;\\$line&quot;),&quot;%d&quot;)+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&apos;\n&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>outputFormat<sp/>=<sp/>Config_getString(</highlight><highlight class="stringliteral">&quot;WARN_FORMAT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Config_getString(</highlight><highlight class="stringliteral">&quot;WARN_LOGFILE&quot;</highlight><highlight class="normal">).isEmpty())</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>warnFile<sp/>=<sp/>portable_fopen(Config_getString(</highlight><highlight class="stringliteral">&quot;WARN_LOGFILE&quot;</highlight><highlight class="normal">),</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!warnFile)<sp/></highlight><highlight class="comment">//<sp/>point<sp/>it<sp/>to<sp/>something<sp/>valid,<sp/>because<sp/>warn()<sp/>relies<sp/>on<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>warnFile<sp/>=<sp/>stderr;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>msg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Config_getBool(</highlight><highlight class="stringliteral">&quot;QUIET&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Debug::isFlagSet(Debug::Time))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%.3f<sp/>sec:<sp/>&quot;</highlight><highlight class="normal">,((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)Doxygen::runningTime.elapsed())/1000.0);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>vfprintf(stdout,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>format_warn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>QCString<sp/>fileSubst<sp/>=<sp/>file==0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;&lt;unknown&gt;&quot;</highlight><highlight class="normal"><sp/>:<sp/>file;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>QCString<sp/>lineSubst;<sp/>lineSubst.setNum(line);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>QCString<sp/>textSubst<sp/>=<sp/>text;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>QCString<sp/>versionSubst;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file)<sp/></highlight><highlight class="comment">//<sp/>get<sp/>version<sp/>from<sp/>file<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ambig;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fd=findFileDef(Doxygen::inputNameDict,file,ambig);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>versionSubst<sp/>=<sp/>fd-&gt;<ref refid="de/db0/class_file_def_1ae05a431076ed53fdbe3dbac7c709c3d7" kindref="member">getVersion</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>substitute<sp/>markers<sp/>by<sp/>actual<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>QCString<sp/>msgText<sp/>=<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>substitute(</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substitute(</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substitute(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substitute(<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputFormat,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;$file&quot;</highlight><highlight class="normal">,fileSubst</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;$text&quot;</highlight><highlight class="normal">,textSubst</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;$line&quot;</highlight><highlight class="normal">,lineSubst</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;$version&quot;</highlight><highlight class="normal">,versionSubst</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)+</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>resulting<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>fwrite(msgText.data(),1,msgText.length(),warnFile);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>do_warn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>va_list<sp/>args)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Config_getBool(tag))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>warning<sp/>type<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>text[4096];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l=0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prefix)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(text,prefix);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>l=strlen(prefix);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>vsnprintf(text+l,<sp/>4096-l,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>text[4095]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>format_warn(file,line,text);</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>warn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>do_warn(</highlight><highlight class="stringliteral">&quot;WARNINGS&quot;</highlight><highlight class="normal">,<sp/>file,<sp/>line,<sp/>warning_str,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>va_end(args);<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>warn_simple(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Config_getBool(</highlight><highlight class="stringliteral">&quot;WARNINGS&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>warning<sp/>type<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>format_warn(file,line,QCString(warning_str)<sp/>+<sp/>text);</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>warn_undoc(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>do_warn(</highlight><highlight class="stringliteral">&quot;WARN_IF_UNDOCUMENTED&quot;</highlight><highlight class="normal">,<sp/>file,<sp/>line,<sp/>warning_str,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>warn_doc_error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>do_warn(</highlight><highlight class="stringliteral">&quot;WARN_IF_DOC_ERROR&quot;</highlight><highlight class="normal">,<sp/>file,<sp/>line,<sp/>warning_str,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>warn_uncond(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>vfprintf(warnFile,<sp/>(QCString(warning_str)<sp/>+<sp/>fmt).data(),<sp/>args);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>va_end(args);<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>err(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>vfprintf(warnFile,<sp/>(QCString(error_str)<sp/>+<sp/>fmt).data(),<sp/>args);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>va_end(args);<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/message.cpp"/>
  </compounddef>
</doxygen>
