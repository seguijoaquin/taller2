<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="d8/d52/dirdef_8cpp" kind="file">
    <compoundname>dirdef.cpp</compoundname>
    <includes local="yes">md5.h</includes>
    <includes refid="d6/d15/dirdef_8h" local="yes">dirdef.h</includes>
    <includes refid="dc/dd6/filename_8h" local="yes">filename.h</includes>
    <includes refid="d1/da1/doxygen_8h" local="yes">doxygen.h</includes>
    <includes refid="d8/d3c/util_8h" local="yes">util.h</includes>
    <includes refid="d2/db9/outputlist_8h" local="yes">outputlist.h</includes>
    <includes refid="d8/dce/language_8h" local="yes">language.h</includes>
    <includes refid="d2/d0d/message_8h" local="yes">message.h</includes>
    <includes refid="d6/d4a/dot_8h" local="yes">dot.h</includes>
    <includes refid="db/d51/layout_8h" local="yes">layout.h</includes>
    <includes refid="df/d83/ftextstream_8h" local="yes">ftextstream.h</includes>
    <includes refid="db/d16/config_8h" local="yes">config.h</includes>
    <includes refid="de/d9c/docparser_8h" local="yes">docparser.h</includes>
    <incdepgraph>
      <node id="1071">
        <label>qcstring.h</label>
      </node>
      <node id="1086">
        <label>qgstring.h</label>
      </node>
      <node id="1091">
        <label>outputgen.h</label>
        <link refid="df/d06/outputgen_8h_source"/>
        <childnode refid="1092" relation="include">
        </childnode>
        <childnode refid="1074" relation="include">
        </childnode>
        <childnode refid="1093" relation="include">
        </childnode>
        <childnode refid="1082" relation="include">
        </childnode>
      </node>
      <node id="1092">
        <label>qstack.h</label>
      </node>
      <node id="1106">
        <label>docparser.h</label>
        <link refid="de/d9c/docparser_8h_source"/>
        <childnode refid="1083" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1071" relation="include">
        </childnode>
        <childnode refid="1107" relation="include">
        </childnode>
        <childnode refid="1108" relation="include">
        </childnode>
      </node>
      <node id="1079">
        <label>qdatetime.h</label>
      </node>
      <node id="1081">
        <label>qstrlist.h</label>
      </node>
      <node id="1085">
        <label>qstring.h</label>
      </node>
      <node id="1090">
        <label>outputlist.h</label>
        <link refid="d2/db9/outputlist_8h_source"/>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1074" relation="include">
        </childnode>
        <childnode refid="1091" relation="include">
        </childnode>
      </node>
      <node id="1107">
        <label>docvisitor.h</label>
        <link refid="d2/d3c/docvisitor_8h_source"/>
      </node>
      <node id="1087">
        <label>membergroup.h</label>
        <link refid="d9/d11/membergroup_8h_source"/>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
      </node>
      <node id="1065">
        <label>sortdict.h</label>
        <link refid="d9/d21/sortdict_8h_source"/>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
      </node>
      <node id="1075">
        <label>memberlist.h</label>
        <link refid="dd/d78/memberlist_8h_source"/>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
      </node>
      <node id="1097">
        <label>qptrdict.h</label>
      </node>
      <node id="1094">
        <label>language.h</label>
        <link refid="d8/dce/language_8h_source"/>
        <childnode refid="1095" relation="include">
        </childnode>
      </node>
      <node id="1100">
        <label>qwaitcondition.h</label>
      </node>
      <node id="1099">
        <label>dot.h</label>
        <link refid="d6/d4a/dot_8h_source"/>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1100" relation="include">
        </childnode>
        <childnode refid="1101" relation="include">
        </childnode>
        <childnode refid="1102" relation="include">
        </childnode>
        <childnode refid="1103" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
      </node>
      <node id="1062">
        <label>src/dirdef.cpp</label>
        <link refid="dirdef.cpp"/>
        <childnode refid="1063" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1078" relation="include">
        </childnode>
        <childnode refid="1088" relation="include">
        </childnode>
        <childnode refid="1090" relation="include">
        </childnode>
        <childnode refid="1094" relation="include">
        </childnode>
        <childnode refid="1098" relation="include">
        </childnode>
        <childnode refid="1099" relation="include">
        </childnode>
        <childnode refid="1104" relation="include">
        </childnode>
        <childnode refid="1082" relation="include">
        </childnode>
        <childnode refid="1105" relation="include">
        </childnode>
        <childnode refid="1106" relation="include">
        </childnode>
      </node>
      <node id="1072">
        <label>filename.h</label>
        <link refid="dc/dd6/filename_8h_source"/>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1073" relation="include">
        </childnode>
      </node>
      <node id="1080">
        <label>qcache.h</label>
      </node>
      <node id="1096">
        <label>classdef.h</label>
        <link refid="d1/da6/classdef_8h_source"/>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1097" relation="include">
        </childnode>
        <childnode refid="1069" relation="include">
        </childnode>
      </node>
      <node id="1098">
        <label>message.h</label>
        <link refid="d2/d0d/message_8h_source"/>
        <childnode refid="1083" relation="include">
        </childnode>
      </node>
      <node id="1088">
        <label>util.h</label>
        <link refid="d8/d3c/util_8h"/>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1089" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
      </node>
      <node id="1068">
        <label>qintdict.h</label>
      </node>
      <node id="1084">
        <label>qiodevice.h</label>
      </node>
      <node id="1105">
        <label>config.h</label>
        <link refid="db/d16/config_8h_source"/>
        <childnode refid="1081" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1082" relation="include">
        </childnode>
      </node>
      <node id="1077">
        <label>sys/types.h</label>
      </node>
      <node id="1102">
        <label>qqueue.h</label>
      </node>
      <node id="1070">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="1071" relation="include">
        </childnode>
      </node>
      <node id="1066">
        <label>qlist.h</label>
      </node>
      <node id="1082">
        <label>ftextstream.h</label>
        <link refid="df/d83/ftextstream_8h_source"/>
        <childnode refid="1083" relation="include">
        </childnode>
        <childnode refid="1084" relation="include">
        </childnode>
        <childnode refid="1085" relation="include">
        </childnode>
        <childnode refid="1086" relation="include">
        </childnode>
      </node>
      <node id="1078">
        <label>doxygen.h</label>
        <link refid="d1/da1/doxygen_8h_source"/>
        <childnode refid="1079" relation="include">
        </childnode>
        <childnode refid="1080" relation="include">
        </childnode>
        <childnode refid="1081" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
        <childnode refid="1082" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1087" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
        <childnode refid="1075" relation="include">
        </childnode>
      </node>
      <node id="1076">
        <label>memberdef.h</label>
        <link refid="d4/d46/memberdef_8h_source"/>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1077" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
        <childnode refid="1069" relation="include">
        </childnode>
      </node>
      <node id="1073">
        <label>filedef.h</label>
        <link refid="d4/d3a/filedef_8h_source"/>
        <childnode refid="1074" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1069" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1075" relation="include">
        </childnode>
      </node>
      <node id="1089">
        <label>ctype.h</label>
      </node>
      <node id="1093">
        <label>section.h</label>
        <link refid="d1/d2a/section_8h_source"/>
        <childnode refid="1065" relation="include">
        </childnode>
      </node>
      <node id="1103">
        <label>qthread.h</label>
      </node>
      <node id="1069">
        <label>definition.h</label>
        <link refid="df/da1/definition_8h_source"/>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
      </node>
      <node id="1074">
        <label>index.h</label>
        <link refid="d1/db5/index_8h_source"/>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1071" relation="include">
        </childnode>
      </node>
      <node id="1064">
        <label>dirdef.h</label>
        <link refid="d6/d15/dirdef_8h_source"/>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1069" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
      </node>
      <node id="1067">
        <label>qdict.h</label>
      </node>
      <node id="1101">
        <label>qmutex.h</label>
      </node>
      <node id="1063">
        <label>md5.h</label>
      </node>
      <node id="1108">
        <label>htmlattrib.h</label>
        <link refid="d0/d73/htmlattrib_8h_source"/>
        <childnode refid="1071" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
      </node>
      <node id="1083">
        <label>stdio.h</label>
      </node>
      <node id="1104">
        <label>layout.h</label>
        <link refid="db/d51/layout_8h_source"/>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
      </node>
      <node id="1095">
        <label>translator.h</label>
        <link refid="d9/df1/translator_8h_source"/>
        <childnode refid="1096" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d8/d52/dirdef_8cpp_1af408cf706df7dfc5915068cd2eedbc76" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int g_dirCount</definition>
        <argsstring></argsstring>
        <name>g_dirCount</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" line="19" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d8/d52/dirdef_8cpp_1a8d91af0a6807cf2a6b66896bfdef6732" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>static QCString encodeDirName</definition>
        <argsstring>(const QCString &amp;anchor)</argsstring>
        <name>encodeDirName</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>anchor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" line="82" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" bodystart="81" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="d8/d52/dirdef_8cpp_1a8bb54d0765a6b45bf091337783b4680a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void writePartialDirPath</definition>
        <argsstring>(OutputList &amp;ol, const DirDef *root, const DirDef *target)</argsstring>
        <name>writePartialDirPath</name>
        <param>
          <type><ref refid="df/dc8/class_output_list" kindref="compound">OutputList</ref> &amp;</type>
          <declname>ol</declname>
        </param>
        <param>
          <type>const <ref refid="d4/dd4/class_dir_def" kindref="compound">DirDef</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const <ref refid="d4/dd4/class_dir_def" kindref="compound">DirDef</ref> *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" line="674" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" bodystart="673" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="d8/d52/dirdef_8cpp_1a50a5ca2a633e8e9e98f1fdb284b96186" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void writePartialFilePath</definition>
        <argsstring>(OutputList &amp;ol, const DirDef *root, const FileDef *fd)</argsstring>
        <name>writePartialFilePath</name>
        <param>
          <type><ref refid="df/dc8/class_output_list" kindref="compound">OutputList</ref> &amp;</type>
          <declname>ol</declname>
        </param>
        <param>
          <type>const <ref refid="d4/dd4/class_dir_def" kindref="compound">DirDef</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const <ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" line="684" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" bodystart="683" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="d8/d52/dirdef_8cpp_1ad85444ffee4818fe7415a7158385f3d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void computeCommonDirPrefix</definition>
        <argsstring>()</argsstring>
        <name>computeCommonDirPrefix</name>
        <briefdescription>
<para>In order to create stable, but unique directory names, we compute the common part of the path shared by all directories. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" line="765" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" bodystart="764" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="d8/d52/dirdef_8cpp_1a9d5caa3df18ab19e549d3b603a716780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void buildDirectories</definition>
        <argsstring>()</argsstring>
        <name>buildDirectories</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" line="842" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" bodystart="841" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="d8/d52/dirdef_8cpp_1abf61ee43dee8d980a631843cd26b71cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void computeDirDependencies</definition>
        <argsstring>()</argsstring>
        <name>computeDirDependencies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" line="894" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" bodystart="893" bodyend="909"/>
      </memberdef>
      <memberdef kind="function" id="d8/d52/dirdef_8cpp_1aeb63b0db3ac92afc6ef8fd7a34129001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generateDirDocs</definition>
        <argsstring>(OutputList &amp;ol)</argsstring>
        <name>generateDirDocs</name>
        <param>
          <type><ref refid="df/dc8/class_output_list" kindref="compound">OutputList</ref> &amp;</type>
          <declname>ol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" line="912" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp" bodystart="911" bodyend="928"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;md5.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dirdef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;filename.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;doxygen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d3c/util_8h" kindref="compound" tooltip="A bunch of utility functions.">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;outputlist.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;language.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;message.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dot.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;layout.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ftextstream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;docparser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>method<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_dirCount=0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">DirDef::DirDef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)<sp/>:<sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref>(path,1,1,path)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fullPathNames<sp/>=<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;FULL_PATH_NAMES&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>display<sp/>name<sp/>(stipping<sp/>the<sp/>paths<sp/>mentioned<sp/>in<sp/>STRIP_FROM_PATH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>short<sp/>name<sp/>(last<sp/>part<sp/>of<sp/>path)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>m_shortName<sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>m_diskName<sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_shortName.at(m_shortName.length()-1)==</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>strip<sp/>trailing<sp/>/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shortName<sp/>=<sp/>m_shortName.left(m_shortName.length()-1);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pi=m_shortName.findRev(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pi!=-1)<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>remove<sp/>everything<sp/>till<sp/>the<sp/>last<sp/>/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>m_shortName<sp/>=<sp/>m_shortName.mid(pi+1);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>setLocalName(m_shortName);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>m_dispName<sp/>=<sp/>fullPathNames<sp/>?<sp/>stripFromPath(path)<sp/>:<sp/>m_shortName;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_dispName.length()&gt;0<sp/>&amp;&amp;<sp/>m_dispName.at(m_dispName.length()-1)==</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>strip<sp/>trailing<sp/>/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>m_dispName<sp/>=<sp/>m_dispName.left(m_dispName.length()-1);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>m_fileList<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d18/class_file_list" kindref="compound" tooltip="Class representing a list of FileDef objects.">FileList</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>m_usedDirs<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QDict&lt;UsedDir&gt;(257);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>m_usedDirs-&gt;setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>m_dirCount<sp/><sp/><sp/>=<sp/>g_dirCount++;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>m_level=-1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>m_parent=0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">DirDef::~DirDef()</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_fileList;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_usedDirs;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="d4/dd4/class_dir_def_1a6f4bf73e2fd28f421f4359b0135187b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/dd4/class_dir_def_1a6f4bf73e2fd28f421f4359b0135187b6" kindref="member">DirDef::isLinkableInProject</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="d5/dcc/class_definition_1aeac1898371c546441cf689c1f66e359b" kindref="member">isReference</ref>();<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="d4/dd4/class_dir_def_1ad47c93357ab08fb4f883d29e903f1570" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/dd4/class_dir_def_1ad47c93357ab08fb4f883d29e903f1570" kindref="member">DirDef::isLinkable</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="keyword"></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/dcc/class_definition_1aeac1898371c546441cf689c1f66e359b" kindref="member">isReference</ref>()<sp/>||<sp/><ref refid="d4/dd4/class_dir_def_1a6f4bf73e2fd28f421f4359b0135187b6" kindref="member">isLinkableInProject</ref>();<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirDef::addSubDir(<ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*subdir)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>m_subdirs.inSort(subdir);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>subdir-&gt;setOuterScope(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>subdir-&gt;m_parent=</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirDef::addFile(<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fd)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>m_fileList-&gt;inSort(fd);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>fd-&gt;setDirDef(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QCString<sp/>encodeDirName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;anchor)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>QCString<sp/>result;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>to<sp/>md5<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>uchar<sp/>md5_sig[16];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>QCString<sp/>sigStr(33);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>MD5Buffer((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)anchor.data(),anchor.length(),md5_sig);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>MD5SigToString(md5_sig,sigStr.data(),33);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sigStr;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>old<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>int<sp/>l<sp/>=<sp/>anchor.length(),i;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>for<sp/>(i=0;i&lt;l;i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>char<sp/>c<sp/>=<sp/>anchor.at(i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>((c&gt;=&apos;a&apos;<sp/>&amp;&amp;<sp/>c&lt;=&apos;z&apos;)<sp/>||<sp/>(c&gt;=&apos;A&apos;<sp/>&amp;&amp;<sp/>c&lt;=&apos;Z&apos;)<sp/>||<sp/>(c&gt;=&apos;0&apos;<sp/>&amp;&amp;<sp/>c&lt;=&apos;9&apos;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>result+=c;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>char<sp/>hexStr[]=&quot;0123456789ABCDEF&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>escChar[]={<sp/>&apos;_&apos;,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>escChar[1]=hexStr[c&gt;&gt;4];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>escChar[2]=hexStr[c&amp;0xf];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>result+=escChar;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>result;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="d4/dd4/class_dir_def_1a45b42037a0ed21aaba3950e7fb53fbd9" refkind="member"><highlight class="normal">QCString<sp/><ref refid="d4/dd4/class_dir_def_1a45b42037a0ed21aaba3950e7fb53fbd9" kindref="member">DirDef::getOutputFileBase</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="115"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;DirDef::getOutputFileBase()<sp/>%s-&gt;dir_%s\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>m_diskName.data(),encodeDirName(m_diskName).data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;dir_&quot;</highlight><highlight class="normal">+encodeDirName(m_diskName);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirDef::writeDetailedDescription(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;title)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!<ref refid="d5/dcc/class_definition_1a748b55a1bf2566464f1e46daf1fd2ef0" kindref="member">briefDescription</ref>().isEmpty()<sp/>&amp;&amp;<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;REPEAT_BRIEF&quot;</highlight><highlight class="normal">))<sp/>||<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="d5/dcc/class_definition_1a9ed55eb9487bcf1fd7ebb4a967e7b3a1" kindref="member">documentation</ref>().isEmpty())</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a885957a64f7d87aefb663c4ec903188f" kindref="member">pushGeneratorState</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a22f8c17b8c14518aa55f8af3c2abab0f" kindref="member">disable</ref>(OutputGenerator::Html);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a2203589f0bc276cb3ba01f529b9536a9" kindref="member">writeRuler</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a94eb1af2ea07425ef1faa539d24adcf8" kindref="member">popGeneratorState</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a885957a64f7d87aefb663c4ec903188f" kindref="member">pushGeneratorState</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a73f9be626eea01f1ccd1b446dcf2c003" kindref="member">disableAllBut</ref>(OutputGenerator::Html);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.writeAnchor(0,</highlight><highlight class="stringliteral">&quot;details&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a94eb1af2ea07425ef1faa539d24adcf8" kindref="member">popGeneratorState</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.startGroupHeader();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.parseText(title);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.endGroupHeader();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>repeat<sp/>brief<sp/>description</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/dcc/class_definition_1a748b55a1bf2566464f1e46daf1fd2ef0" kindref="member">briefDescription</ref>().isEmpty()<sp/>&amp;&amp;<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;REPEAT_BRIEF&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.generateDoc(<ref refid="d5/dcc/class_definition_1a3c37121dca58fcb1c3d499b52e0a70fd" kindref="member">briefFile</ref>(),<ref refid="d5/dcc/class_definition_1a26799d5c03900e931fb1382a5aa56bdd" kindref="member">briefLine</ref>(),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,0,<ref refid="d5/dcc/class_definition_1a748b55a1bf2566464f1e46daf1fd2ef0" kindref="member">briefDescription</ref>(),FALSE,FALSE);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>separator<sp/>between<sp/>brief<sp/>and<sp/>details</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/dcc/class_definition_1a748b55a1bf2566464f1e46daf1fd2ef0" kindref="member">briefDescription</ref>().isEmpty()<sp/>&amp;&amp;<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;REPEAT_BRIEF&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="d5/dcc/class_definition_1a9ed55eb9487bcf1fd7ebb4a967e7b3a1" kindref="member">documentation</ref>().isEmpty())</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a885957a64f7d87aefb663c4ec903188f" kindref="member">pushGeneratorState</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a22f8c17b8c14518aa55f8af3c2abab0f" kindref="member">disable</ref>(OutputGenerator::Man);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a22f8c17b8c14518aa55f8af3c2abab0f" kindref="member">disable</ref>(OutputGenerator::RTF);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ol.newParagraph();<sp/><sp/>//<sp/>FIXME:PARA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1ad32603ff4c4ba4d39e0bad7ede5924bf" kindref="member">enableAll</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a73f9be626eea01f1ccd1b446dcf2c003" kindref="member">disableAllBut</ref>(OutputGenerator::Man);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a94eb1af2ea07425ef1faa539d24adcf8" kindref="member">popGeneratorState</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/dcc/class_definition_1a9ed55eb9487bcf1fd7ebb4a967e7b3a1" kindref="member">documentation</ref>().isEmpty())</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.generateDoc(<ref refid="d5/dcc/class_definition_1a7c5f8f793b451b8e9bbc68b40a9e8faa" kindref="member">docFile</ref>(),<ref refid="d5/dcc/class_definition_1a1eddb1e4af4660518113a159e76ca983" kindref="member">docLine</ref>(),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,0,<ref refid="d5/dcc/class_definition_1a9ed55eb9487bcf1fd7ebb4a967e7b3a1" kindref="member">documentation</ref>()+</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,TRUE,FALSE);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirDef::writeBriefDescription(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d5/dcc/class_definition_1a748b55a1bf2566464f1e46daf1fd2ef0" kindref="member">briefDescription</ref>().isEmpty()<sp/>&amp;&amp;<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;BRIEF_MEMBER_DESC&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/ddb/class_doc_root" kindref="compound" tooltip="Root node of documentation tree.">DocRoot</ref><sp/>*rootNode<sp/>=<sp/>validatingParseDoc(</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dcc/class_definition_1a3c37121dca58fcb1c3d499b52e0a70fd" kindref="member">briefFile</ref>(),<ref refid="d5/dcc/class_definition_1a26799d5c03900e931fb1382a5aa56bdd" kindref="member">briefLine</ref>(),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,0,<ref refid="d5/dcc/class_definition_1a748b55a1bf2566464f1e46daf1fd2ef0" kindref="member">briefDescription</ref>(),TRUE,FALSE);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rootNode<sp/>&amp;&amp;<sp/>!rootNode-&gt;isEmpty())</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1ad6c1fc2a1b67c59c1efb27fb59aa7e5f" kindref="member">startParagraph</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.writeDoc(rootNode,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,0);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a885957a64f7d87aefb663c4ec903188f" kindref="member">pushGeneratorState</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a22f8c17b8c14518aa55f8af3c2abab0f" kindref="member">disable</ref>(OutputGenerator::RTF);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a4006394472d6c49f7db435628832c49d" kindref="member">enable</ref>(OutputGenerator::RTF);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Config_getBool(</highlight><highlight class="stringliteral">&quot;REPEAT_BRIEF&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="d5/dcc/class_definition_1a9ed55eb9487bcf1fd7ebb4a967e7b3a1" kindref="member">documentation</ref>().isEmpty()</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a73f9be626eea01f1ccd1b446dcf2c003" kindref="member">disableAllBut</ref>(OutputGenerator::Html);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.startTextLink(0,</highlight><highlight class="stringliteral">&quot;details&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.parseText(theTranslator-&gt;trMore());</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.endTextLink();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a94eb1af2ea07425ef1faa539d24adcf8" kindref="member">popGeneratorState</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a6523eb013a6f759d505650de41855085" kindref="member">endParagraph</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rootNode;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>ol.writeSynopsis();</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirDef::writeDirectoryGraph(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>graph<sp/>dependency<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Config_getBool(</highlight><highlight class="stringliteral">&quot;DIRECTORY_GRAPH&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;HAVE_DOT&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/dd4/class_dot_dir_deps" kindref="compound" tooltip="Representation of an directory dependency graph.">DotDirDeps</ref><sp/>dirDep(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dirDep.isTrivial())</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg(</highlight><highlight class="stringliteral">&quot;Generating<sp/>dependency<sp/>graph<sp/>for<sp/>directory<sp/>%s\n&quot;</highlight><highlight class="normal">,<ref refid="d4/dd4/class_dir_def_1a360c7e6d3deaf6782329a019c80b110a" kindref="member">displayName</ref>().data());</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a22f8c17b8c14518aa55f8af3c2abab0f" kindref="member">disable</ref>(OutputGenerator::Man);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ol.startParagraph();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.startDirDepGraph();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.parseText(theTranslator-&gt;trDirDepGraph(shortName()));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.endDirDepGraph(dirDep);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ol.endParagraph();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1ad32603ff4c4ba4d39e0bad7ede5924bf" kindref="member">enableAll</ref>();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirDef::writeSubDirList(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>subdir<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_subdirs.count()&gt;0)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.startMemberHeader(</highlight><highlight class="stringliteral">&quot;subdirs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.parseText(theTranslator-&gt;trDir(TRUE,FALSE));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.endMemberHeader();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.startMemberList();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*dd=m_subdirs.first();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dd)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.startMemberDeclaration();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.startMemberItem(dd-&gt;<ref refid="d4/dd4/class_dir_def_1a45b42037a0ed21aaba3950e7fb53fbd9" kindref="member">getOutputFileBase</ref>(),0);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.parseText(theTranslator-&gt;trDir(FALSE,TRUE)+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.insertMemberAlign();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a8c499e7baca8905c8e057d23f72ff548" kindref="member">writeObjectLink</ref>(dd-&gt;<ref refid="d5/dcc/class_definition_1a266bc8f350de23e01335d4d674995dcf" kindref="member">getReference</ref>(),dd-&gt;<ref refid="d4/dd4/class_dir_def_1a45b42037a0ed21aaba3950e7fb53fbd9" kindref="member">getOutputFileBase</ref>(),0,dd-&gt;shortName());</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.endMemberItem();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Config_getString(</highlight><highlight class="stringliteral">&quot;GENERATE_TAGFILE&quot;</highlight><highlight class="normal">).isEmpty())<sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Doxygen::tagFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;dir&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>convertToXML(dd-&gt;<ref refid="d4/dd4/class_dir_def_1a360c7e6d3deaf6782329a019c80b110a" kindref="member">displayName</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/dir&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dd-&gt;<ref refid="d5/dcc/class_definition_1a748b55a1bf2566464f1e46daf1fd2ef0" kindref="member">briefDescription</ref>().isEmpty()<sp/>&amp;&amp;<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;BRIEF_MEMBER_DESC&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.startMemberDescription(dd-&gt;<ref refid="d4/dd4/class_dir_def_1a45b42037a0ed21aaba3950e7fb53fbd9" kindref="member">getOutputFileBase</ref>());</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.generateDoc(<ref refid="d5/dcc/class_definition_1a3c37121dca58fcb1c3d499b52e0a70fd" kindref="member">briefFile</ref>(),<ref refid="d5/dcc/class_definition_1a26799d5c03900e931fb1382a5aa56bdd" kindref="member">briefLine</ref>(),dd,0,dd-&gt;<ref refid="d5/dcc/class_definition_1a748b55a1bf2566464f1e46daf1fd2ef0" kindref="member">briefDescription</ref>(),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FALSE,<sp/></highlight><highlight class="comment">//<sp/>indexWords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FALSE,<sp/></highlight><highlight class="comment">//<sp/>isExample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exampleName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE,<sp/><sp/></highlight><highlight class="comment">//<sp/>single<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>link<sp/>from<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.endMemberDescription();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.endMemberDeclaration(0,0);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dd=m_subdirs.next();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.endMemberList();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirDef::writeFileList(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>file<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_fileList-&gt;count()&gt;0)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.startMemberHeader(</highlight><highlight class="stringliteral">&quot;files&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.parseText(theTranslator-&gt;trFile(TRUE,FALSE));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.endMemberHeader();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.startMemberList();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fd=m_fileList-&gt;first();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fd)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.startMemberDeclaration();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.startMemberItem(fd-&gt;<ref refid="de/db0/class_file_def_1aed87b82d9fc3ce4629034232b711f4a9" kindref="member">getOutputFileBase</ref>(),0);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a3335d926bd59e1c9e3912c4352ca5bc6" kindref="member">docify</ref>(theTranslator-&gt;trFile(FALSE,TRUE)+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.insertMemberAlign();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd-&gt;<ref refid="de/db0/class_file_def_1af677cee8c349fa10532b0aa5c09df396" kindref="member">isLinkable</ref>())</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a8c499e7baca8905c8e057d23f72ff548" kindref="member">writeObjectLink</ref>(fd-&gt;<ref refid="d5/dcc/class_definition_1a266bc8f350de23e01335d4d674995dcf" kindref="member">getReference</ref>(),fd-&gt;<ref refid="de/db0/class_file_def_1aed87b82d9fc3ce4629034232b711f4a9" kindref="member">getOutputFileBase</ref>(),0,fd-&gt;<ref refid="de/db0/class_file_def_1a80989971450b35c785a8fe0002e1c2db" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a796018ee85949771252f36fea9a288d0" kindref="member">startBold</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a3335d926bd59e1c9e3912c4352ca5bc6" kindref="member">docify</ref>(fd-&gt;<ref refid="de/db0/class_file_def_1a80989971450b35c785a8fe0002e1c2db" kindref="member">name</ref>());<sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1aa3f855a4e60d2a7c6769b66d43c69b23" kindref="member">endBold</ref>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd-&gt;generateSourceFile())</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a885957a64f7d87aefb663c4ec903188f" kindref="member">pushGeneratorState</ref>();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a73f9be626eea01f1ccd1b446dcf2c003" kindref="member">disableAllBut</ref>(OutputGenerator::Html);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a3335d926bd59e1c9e3912c4352ca5bc6" kindref="member">docify</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.startTextLink(fd-&gt;<ref refid="de/db0/class_file_def_1a7ae51c3b256e80b82f83f5b550402c97" kindref="member">includeName</ref>(),0);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a3335d926bd59e1c9e3912c4352ca5bc6" kindref="member">docify</ref>(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.parseText(theTranslator-&gt;trCode());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a3335d926bd59e1c9e3912c4352ca5bc6" kindref="member">docify</ref>(</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.endTextLink();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a94eb1af2ea07425ef1faa539d24adcf8" kindref="member">popGeneratorState</ref>();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Config_getString(</highlight><highlight class="stringliteral">&quot;GENERATE_TAGFILE&quot;</highlight><highlight class="normal">).isEmpty())<sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Doxygen::tagFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;file&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>convertToXML(fd-&gt;<ref refid="de/db0/class_file_def_1a80989971450b35c785a8fe0002e1c2db" kindref="member">name</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/file&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.endMemberItem();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fd-&gt;<ref refid="d5/dcc/class_definition_1a748b55a1bf2566464f1e46daf1fd2ef0" kindref="member">briefDescription</ref>().isEmpty()<sp/>&amp;&amp;<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;BRIEF_MEMBER_DESC&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.startMemberDescription(fd-&gt;<ref refid="de/db0/class_file_def_1aed87b82d9fc3ce4629034232b711f4a9" kindref="member">getOutputFileBase</ref>());</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.generateDoc(<ref refid="d5/dcc/class_definition_1a3c37121dca58fcb1c3d499b52e0a70fd" kindref="member">briefFile</ref>(),<ref refid="d5/dcc/class_definition_1a26799d5c03900e931fb1382a5aa56bdd" kindref="member">briefLine</ref>(),fd,0,fd-&gt;<ref refid="d5/dcc/class_definition_1a748b55a1bf2566464f1e46daf1fd2ef0" kindref="member">briefDescription</ref>(),</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FALSE,<sp/></highlight><highlight class="comment">//<sp/>indexWords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FALSE,<sp/></highlight><highlight class="comment">//<sp/>isExample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exampleName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE,<sp/><sp/></highlight><highlight class="comment">//<sp/>single<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRUE<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>link<sp/>from<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ol.endMemberDescription();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ol.endMemberDeclaration(0,0);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fd=m_fileList-&gt;next();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.endMemberList();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirDef::startMemberDeclarations(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>ol.startMemberSections();</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirDef::endMemberDeclarations(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>ol.endMemberSections();</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirDef::writeDocumentation(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>generateTreeView<sp/>=<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;GENERATE_TREEVIEW&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a885957a64f7d87aefb663c4ec903188f" kindref="member">pushGeneratorState</ref>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>QCString<sp/>shortTitle=theTranslator-&gt;trDirReference(m_shortName);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>QCString<sp/>title=theTranslator-&gt;trDirReference(m_dispName);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>startFile(ol,<ref refid="d4/dd4/class_dir_def_1a45b42037a0ed21aaba3950e7fb53fbd9" kindref="member">getOutputFileBase</ref>(),<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>(),title,HLI_None,!generateTreeView);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!generateTreeView)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>navigation<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>writeNavigationPath(ol);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.endQuickIndices();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>startTitle(ol,<ref refid="d4/dd4/class_dir_def_1a45b42037a0ed21aaba3950e7fb53fbd9" kindref="member">getOutputFileBase</ref>());</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a885957a64f7d87aefb663c4ec903188f" kindref="member">pushGeneratorState</ref>();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a73f9be626eea01f1ccd1b446dcf2c003" kindref="member">disableAllBut</ref>(OutputGenerator::Html);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.parseText(shortTitle);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1ad32603ff4c4ba4d39e0bad7ede5924bf" kindref="member">enableAll</ref>();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a22f8c17b8c14518aa55f8af3c2abab0f" kindref="member">disable</ref>(OutputGenerator::Html);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.parseText(title);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a94eb1af2ea07425ef1faa539d24adcf8" kindref="member">popGeneratorState</ref>();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>endTitle(ol,<ref refid="d4/dd4/class_dir_def_1a45b42037a0ed21aaba3950e7fb53fbd9" kindref="member">getOutputFileBase</ref>(),title);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>ol.startContents();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Config_getString(</highlight><highlight class="stringliteral">&quot;GENERATE_TAGFILE&quot;</highlight><highlight class="normal">).isEmpty())<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>Doxygen::tagFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;compound<sp/>kind=\&quot;dir\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>Doxygen::tagFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;name&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>convertToXML(<ref refid="d4/dd4/class_dir_def_1a360c7e6d3deaf6782329a019c80b110a" kindref="member">displayName</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/name&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>Doxygen::tagFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;path&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>convertToXML(<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/path&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>Doxygen::tagFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;filename&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>convertToXML(<ref refid="d4/dd4/class_dir_def_1a45b42037a0ed21aaba3950e7fb53fbd9" kindref="member">getOutputFileBase</ref>())<sp/>&lt;&lt;<sp/>Doxygen::htmlFileExtension<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/filename&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------<sp/>start<sp/>flexible<sp/>part<sp/>-------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member" tooltip="Language as given by extension.">SrcLangExt</ref><sp/>lang<sp/>=<sp/><ref refid="d5/dcc/class_definition_1a55485230d99cc877348db64f01dde092" kindref="member" tooltip="Returns the programming language this definition was written in.">getLanguage</ref>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>QListIterator&lt;LayoutDocEntry&gt;<sp/>eli(</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d1d/class_layout_doc_manager_1a87bc2288833b8769bd03e47c58fbba6a" kindref="member" tooltip="Returns a reference to this singleton.">LayoutDocManager::instance</ref>().docEntries(LayoutDocManager::Directory));</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><ref refid="d9/dba/struct_layout_doc_entry" kindref="compound" tooltip="Base class representing a piece of a documentation page.">LayoutDocEntry</ref><sp/>*lde;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(eli.toFirst();(lde=eli.current());++eli)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(lde-&gt;kind())</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::BriefDesc:<sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeBriefDescription(ol);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::DirGraph:<sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeDirectoryGraph(ol);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::MemberDeclStart:<sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startMemberDeclarations(ol);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::DirSubDirs:<sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeSubDirList(ol);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::DirFiles:<sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeFileList(ol);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::MemberDeclEnd:<sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endMemberDeclarations(ol);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::DetailedDesc:<sp/></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/da0/struct_layout_doc_entry_section" kindref="compound">LayoutDocEntrySection</ref><sp/>*ls<sp/>=<sp/>(<ref refid="dd/da0/struct_layout_doc_entry_section" kindref="compound">LayoutDocEntrySection</ref>*)lde;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeDetailedDescription(ol,ls-&gt;title(lang));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::ClassIncludes:</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::ClassInlineClasses:</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::ClassInheritanceGraph:</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::ClassNestedClasses:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::ClassCollaborationGraph:</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::ClassAllMembersLink:</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::ClassUsedFiles:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::NamespaceNestedNamespaces:</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::NamespaceNestedConstantGroups:</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::NamespaceClasses:</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::NamespaceInlineClasses:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::FileClasses:</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::FileNamespaces:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::FileConstantGroups:</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::FileIncludes:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::FileIncludeGraph:</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::FileIncludedByGraph:<sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::FileSourceLink:</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::FileInlineClasses:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::GroupClasses:<sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::GroupInlineClasses:<sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::GroupNamespaces:</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::GroupDirs:<sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::GroupNestedGroups:<sp/></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::GroupFiles:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::GroupGraph:<sp/></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::GroupPageDocs:</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::AuthorSection:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::MemberGroups:</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::MemberDecl:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::MemberDef:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::MemberDefStart:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LayoutDocEntry::MemberDefEnd:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;Internal<sp/>inconsistency:<sp/>member<sp/>%d<sp/>should<sp/>not<sp/>be<sp/>part<sp/>of<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LayoutDocManager::Directory<sp/>entry<sp/>list\n&quot;</highlight><highlight class="normal">,lde-&gt;kind());</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------<sp/>end<sp/>flexible<sp/>part<sp/>-------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Config_getString(</highlight><highlight class="stringliteral">&quot;GENERATE_TAGFILE&quot;</highlight><highlight class="normal">).isEmpty())<sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/dcc/class_definition_1a252f2febf6695acc7ac5800c683f2770" kindref="member">writeDocAnchorsToTagFile</ref>();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>Doxygen::tagFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/compound&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>ol.endContents();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>endFileWithNavPath(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,ol);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a94eb1af2ea07425ef1faa539d24adcf8" kindref="member">popGeneratorState</ref>();</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirDef::setLevel()</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_level==-1)<sp/></highlight><highlight class="comment">//<sp/>level<sp/>not<sp/>set<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*p<sp/>=<sp/>parent();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;setLevel();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_level<sp/>=<sp/>p-&gt;level()+1;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirDef::addUsesDependency(<ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*dir,<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*srcFd,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*dstFd,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inherited)</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">==dir)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>add<sp/>self-dependencies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//static<sp/>int<sp/>count=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>%d<sp/>add<sp/>dependency<sp/>%s-&gt;%s<sp/>due<sp/>to<sp/>%s-&gt;%s\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>count++,shortName().data(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>dir-&gt;shortName().data(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>srcFd-&gt;name().data(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>dstFd-&gt;name().data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>levels<sp/>match<sp/>=&gt;<sp/>add<sp/>direct<sp/>dependency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>added=FALSE;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><ref refid="df/d42/class_used_dir" kindref="compound" tooltip="Usage information of a directory.">UsedDir</ref><sp/>*usedDir<sp/>=<sp/>m_usedDirs-&gt;find(dir-&gt;<ref refid="d4/dd4/class_dir_def_1a45b42037a0ed21aaba3950e7fb53fbd9" kindref="member">getOutputFileBase</ref>());</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usedDir)<sp/></highlight><highlight class="comment">//<sp/>dir<sp/>dependency<sp/>already<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d31/class_file_pair" kindref="compound" tooltip="Class representing a pair of FileDef objects.">FilePair</ref><sp/>*usedPair<sp/>=<sp/>usedDir-&gt;findFilePair(</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcFd-&gt;<ref refid="de/db0/class_file_def_1aed87b82d9fc3ce4629034232b711f4a9" kindref="member">getOutputFileBase</ref>()+dstFd-&gt;<ref refid="de/db0/class_file_def_1aed87b82d9fc3ce4629034232b711f4a9" kindref="member">getOutputFileBase</ref>());</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usedPair==0)<sp/></highlight><highlight class="comment">//<sp/>new<sp/>file<sp/>dependency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>=&gt;<sp/>new<sp/>file\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usedDir-&gt;addFileDep(srcFd,dstFd);<sp/></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>added=TRUE;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dir<sp/>&amp;<sp/>file<sp/>dependency<sp/>already<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>new<sp/>directory<sp/>dependency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>=&gt;<sp/>new<sp/>file\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>usedDir<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="df/d42/class_used_dir" kindref="compound" tooltip="Usage information of a directory.">UsedDir</ref>(dir,inherited);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>usedDir-&gt;addFileDep(srcFd,dstFd);<sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>m_usedDirs-&gt;insert(dir-&gt;<ref refid="d4/dd4/class_dir_def_1a45b42037a0ed21aaba3950e7fb53fbd9" kindref="member">getOutputFileBase</ref>(),usedDir);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>added=TRUE;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(added)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir-&gt;parent())</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>relation<sp/>to<sp/>parent<sp/>of<sp/>used<sp/>dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addUsesDependency(dir-&gt;parent(),srcFd,dstFd,inherited);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent())</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>relation<sp/>for<sp/>the<sp/>parent<sp/>of<sp/>this<sp/>dir<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent()-&gt;addUsesDependency(dir,srcFd,dstFd,TRUE);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirDef::computeDependencies()</highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><ref refid="d0/d18/class_file_list" kindref="compound" tooltip="Class representing a list of FileDef objects.">FileList</ref><sp/>*fl<sp/>=<sp/>m_fileList;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fl)<sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>QListIterator&lt;FileDef&gt;<sp/>fli(*fl);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fd;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fli.toFirst();(fd=fli.current());++fli)<sp/></highlight><highlight class="comment">//<sp/>foreach<sp/>file<sp/>in<sp/>dir<sp/>dd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>File<sp/>%s\n&quot;,fd-&gt;name().data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;**<sp/>dir=%s<sp/>file=%s\n&quot;,shortName().data(),fd-&gt;name().data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;IncludeInfo&gt;</ref><sp/>*ifl<sp/>=<sp/>fd-&gt;includeFileList();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifl)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QListIterator&lt;IncludeInfo&gt;<sp/>ifli(*ifl);<sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dc1/struct_include_info" kindref="compound" tooltip="Class representing the data associated with a #include statement.">IncludeInfo</ref><sp/>*ii;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ifli.toFirst();(ii=ifli.current());++ifli)<sp/></highlight><highlight class="comment">//<sp/>foreach<sp/>include<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>&gt;<sp/>%s\n&quot;,ii-&gt;includeName.data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/><sp/><sp/>#include<sp/>%s\n&quot;,ii-&gt;includeName.data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ii-&gt;fileDef<sp/>&amp;&amp;<sp/>ii-&gt;fileDef-&gt;<ref refid="de/db0/class_file_def_1af677cee8c349fa10532b0aa5c09df396" kindref="member">isLinkable</ref>())<sp/></highlight><highlight class="comment">//<sp/>linkable<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*usedDir<sp/>=<sp/>ii-&gt;fileDef-&gt;getDirDef();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usedDir)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>dependency:<sp/>thisDir-&gt;usedDir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//static<sp/>int<sp/>count=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/><sp/><sp/><sp/><sp/>%d:<sp/>add<sp/>dependency<sp/>%s-&gt;%s\n&quot;,count++,name().data(),usedDir-&gt;name().data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addUsesDependency(usedDir,fd,ii-&gt;fileDef,FALSE);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DirDef::isParentOf(<ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*dir)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="567"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir-&gt;parent()==</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>parent<sp/>of<sp/>dir<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir-&gt;parent())<sp/></highlight><highlight class="comment">//<sp/>repeat<sp/>for<sp/>the<sp/>parent<sp/>of<sp/>dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isParentOf(dir-&gt;parent());<sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DirDef::depGraphIsTrivial()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="577"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="d0/d5d/class_file_pair_dict_1a4866ba995e365de64902f4d70358b322" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d5d/class_file_pair_dict_1a4866ba995e365de64902f4d70358b322" kindref="member">FilePairDict::compareItems</ref>(QCollection::Item<sp/>item1,QCollection::Item<sp/>item2)</highlight></codeline>
<codeline lineno="584"><highlight class="normal">{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><ref refid="d2/d31/class_file_pair" kindref="compound" tooltip="Class representing a pair of FileDef objects.">FilePair</ref><sp/>*left<sp/><sp/>=<sp/>(<ref refid="d2/d31/class_file_pair" kindref="compound" tooltip="Class representing a pair of FileDef objects.">FilePair</ref>*)item1;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><ref refid="d2/d31/class_file_pair" kindref="compound" tooltip="Class representing a pair of FileDef objects.">FilePair</ref><sp/>*right<sp/>=<sp/>(<ref refid="d2/d31/class_file_pair" kindref="compound" tooltip="Class representing a pair of FileDef objects.">FilePair</ref>*)item2;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orderHi<sp/>=<sp/>qstricmp(left-&gt;source()-&gt;<ref refid="de/db0/class_file_def_1a80989971450b35c785a8fe0002e1c2db" kindref="member">name</ref>(),right-&gt;source()-&gt;<ref refid="de/db0/class_file_def_1a80989971450b35c785a8fe0002e1c2db" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orderLo<sp/>=<sp/>qstricmp(left-&gt;destination()-&gt;<ref refid="de/db0/class_file_def_1a80989971450b35c785a8fe0002e1c2db" kindref="member">name</ref>(),right-&gt;destination()-&gt;<ref refid="de/db0/class_file_def_1a80989971450b35c785a8fe0002e1c2db" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>orderHi==0<sp/>?<sp/>orderLo<sp/>:<sp/>orderHi;</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal">UsedDir::UsedDir(<ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*dir,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inherited)<sp/>:</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/>m_dir(dir),<sp/>m_filePairs(7),<sp/>m_inherited(inherited)</highlight></codeline>
<codeline lineno="596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>m_filePairs.setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal">UsedDir::~UsedDir()</highlight></codeline>
<codeline lineno="601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UsedDir::addFileDep(<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*srcFd,<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*dstFd)</highlight></codeline>
<codeline lineno="606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>m_filePairs.<ref refid="d1/d50/class_s_dict_1a25a85aeba441b4c855ea7be25a4741b5" kindref="member">inSort</ref>(srcFd-&gt;<ref refid="de/db0/class_file_def_1aed87b82d9fc3ce4629034232b711f4a9" kindref="member">getOutputFileBase</ref>()+dstFd-&gt;<ref refid="de/db0/class_file_def_1aed87b82d9fc3ce4629034232b711f4a9" kindref="member">getOutputFileBase</ref>(),</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/d31/class_file_pair" kindref="compound" tooltip="Class representing a pair of FileDef objects.">FilePair</ref>(srcFd,dstFd));</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><ref refid="d2/d31/class_file_pair" kindref="compound" tooltip="Class representing a pair of FileDef objects.">FilePair</ref><sp/>*UsedDir::findFilePair(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>QCString<sp/>n=name;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n.isEmpty()<sp/>?<sp/>0<sp/>:<sp/>m_filePairs.<ref refid="d1/d50/class_s_dict_1aec67482d780157680d46f48a7ed5e7bd" kindref="member">find</ref>(n);</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*DirDef::createNewDir(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>ASSERT(path!=0);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*dir<sp/>=<sp/>Doxygen::directories-&gt;<ref refid="d1/d50/class_s_dict_1aec67482d780157680d46f48a7ed5e7bd" kindref="member">find</ref>(path);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir==0)<sp/></highlight><highlight class="comment">//<sp/>new<sp/>dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Adding<sp/>new<sp/>dir<sp/>%s\n&quot;,path);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>dir<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref>(path);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;createNewDir<sp/>%s<sp/>short=%s\n&quot;,path,dir-&gt;shortName().data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>Doxygen::directories-&gt;<ref refid="d1/d50/class_s_dict_1a25a85aeba441b4c855ea7be25a4741b5" kindref="member">inSort</ref>(path,dir);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dir;</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DirDef::matchPath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;path,QStrList<sp/>&amp;l)</highlight></codeline>
<codeline lineno="632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s=l.first();</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>prefix<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qstricmp(prefix.left(path.length()),path)==0)<sp/></highlight><highlight class="comment">//<sp/>case<sp/>insensitive<sp/>compare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TRUE;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>l.next();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FALSE;</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="649" refid="d4/dd4/class_dir_def_1ab3b1d03c75471701969e581aa4a6960f" refkind="member"><highlight class="normal"><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*<ref refid="d4/dd4/class_dir_def_1ab3b1d03c75471701969e581aa4a6960f" kindref="member">DirDef::mergeDirectoryInTree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;path)</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;DirDef::mergeDirectoryInTree(%s)\n&quot;,path.data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p=0,i=0;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*dir=0;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((i=path.find(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">,p))!=-1)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>part=path.left(i+1);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!matchPath(part,Config_getList(</highlight><highlight class="stringliteral">&quot;STRIP_FROM_PATH&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>(part!=</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>part!=</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dir=createNewDir(part);<sp/></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>p=i+1;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dir;</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirDef::writeDepGraph(<ref refid="dc/d3c/class_f_text_stream" kindref="compound" tooltip="Simplified and optimized version of QTextStream.">FTextStream</ref><sp/>&amp;t)</highlight></codeline>
<codeline lineno="667"><highlight class="normal">{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>writeDotDirDepGraph(t,</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writePartialDirPath(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*root,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*target)</highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target-&gt;parent()!=root)<sp/></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>writePartialDirPath(ol,root,target-&gt;parent());</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&amp;#160;/&amp;#160;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a8c499e7baca8905c8e057d23f72ff548" kindref="member">writeObjectLink</ref>(target-&gt;<ref refid="d5/dcc/class_definition_1a266bc8f350de23e01335d4d674995dcf" kindref="member">getReference</ref>(),target-&gt;<ref refid="d4/dd4/class_dir_def_1a45b42037a0ed21aaba3950e7fb53fbd9" kindref="member">getOutputFileBase</ref>(),0,target-&gt;shortName());</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writePartialFilePath(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*root,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fd)</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd-&gt;getDirDef()<sp/>&amp;&amp;<sp/>fd-&gt;getDirDef()!=root)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>writePartialDirPath(ol,root,fd-&gt;getDirDef());</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&amp;#160;/&amp;#160;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd-&gt;<ref refid="de/db0/class_file_def_1af677cee8c349fa10532b0aa5c09df396" kindref="member">isLinkable</ref>())</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a8c499e7baca8905c8e057d23f72ff548" kindref="member">writeObjectLink</ref>(fd-&gt;<ref refid="d5/dcc/class_definition_1a266bc8f350de23e01335d4d674995dcf" kindref="member">getReference</ref>(),fd-&gt;<ref refid="de/db0/class_file_def_1aed87b82d9fc3ce4629034232b711f4a9" kindref="member">getOutputFileBase</ref>(),0,fd-&gt;<ref refid="de/db0/class_file_def_1a80989971450b35c785a8fe0002e1c2db" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a796018ee85949771252f36fea9a288d0" kindref="member">startBold</ref>();</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a3335d926bd59e1c9e3912c4352ca5bc6" kindref="member">docify</ref>(fd-&gt;<ref refid="de/db0/class_file_def_1a80989971450b35c785a8fe0002e1c2db" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1aa3f855a4e60d2a7c6769b66d43c69b23" kindref="member">endBold</ref>();</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DirRelation::writeDocumentation(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol)</highlight></codeline>
<codeline lineno="703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>generateTreeView<sp/>=<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;GENERATE_TREEVIEW&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a885957a64f7d87aefb663c4ec903188f" kindref="member">pushGeneratorState</ref>();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a73f9be626eea01f1ccd1b446dcf2c003" kindref="member">disableAllBut</ref>(OutputGenerator::Html);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>QCString<sp/>shortTitle=theTranslator-&gt;trDirRelation(</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_src-&gt;shortName()+</highlight><highlight class="stringliteral">&quot;<sp/>&amp;rarr;<sp/>&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dst-&gt;dir()-&gt;shortName());</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>QCString<sp/>title=theTranslator-&gt;trDirRelation(</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_src-&gt;<ref refid="d4/dd4/class_dir_def_1a360c7e6d3deaf6782329a019c80b110a" kindref="member">displayName</ref>()+</highlight><highlight class="stringliteral">&quot;<sp/>-&gt;<sp/>&quot;</highlight><highlight class="normal">+</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_dst-&gt;dir()-&gt;shortName());</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>startFile(ol,getOutputFileBase(),getOutputFileBase(),</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title,HLI_None,!generateTreeView,m_src-&gt;<ref refid="d4/dd4/class_dir_def_1a45b42037a0ed21aaba3950e7fb53fbd9" kindref="member">getOutputFileBase</ref>());</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!generateTreeView)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>navigation<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>m_src-&gt;writeNavigationPath(ol);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.endQuickIndices();</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>ol.startContents();</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;h3&gt;&quot;</highlight><highlight class="normal">+shortTitle+</highlight><highlight class="stringliteral">&quot;&lt;/h3&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;table<sp/>class=\&quot;dirtab\&quot;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;tr<sp/>class=\&quot;dirtab\&quot;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;th<sp/>class=\&quot;dirtab\&quot;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>ol.parseText(theTranslator-&gt;trFileIn(m_src-&gt;pathFragment()));</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;/th&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;th<sp/>class=\&quot;dirtab\&quot;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>ol.parseText(theTranslator-&gt;trIncludesFileIn(m_dst-&gt;dir()-&gt;pathFragment()));</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;/th&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;/tr&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><ref refid="d1/d50/class_s_dict" kindref="compound" tooltip="Ordered dictionary of elements of type T.">SDict&lt;FilePair&gt;::Iterator</ref><sp/>fpi(m_dst-&gt;filePairs());</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><ref refid="d2/d31/class_file_pair" kindref="compound" tooltip="Class representing a pair of FileDef objects.">FilePair</ref><sp/>*fp;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fpi.toFirst();(fp=fpi.current());++fpi)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;tr<sp/>class=\&quot;dirtab\&quot;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;td<sp/>class=\&quot;dirtab\&quot;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>writePartialFilePath(ol,m_src,fp-&gt;source());</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;/td&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;td<sp/>class=\&quot;dirtab\&quot;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>writePartialFilePath(ol,m_dst-&gt;dir(),fp-&gt;destination());</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;/td&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;/tr&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1adeaf5f7b41eca22a3afbc415a8390767" kindref="member">writeString</ref>(</highlight><highlight class="stringliteral">&quot;&lt;/table&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>ol.endContents();</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>endFileWithNavPath(m_src,ol);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>ol.<ref refid="df/dc8/class_output_list_1a94eb1af2ea07425ef1faa539d24adcf8" kindref="member">popGeneratorState</ref>();</highlight></codeline>
<codeline lineno="756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="comment">//<sp/>external<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeCommonDirPrefix()</highlight></codeline>
<codeline lineno="765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>QCString<sp/>path;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*dir;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>DirSDict::Iterator<sp/>sdi(*Doxygen::directories);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Doxygen::directories-&gt;count()&gt;0)<sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>at<sp/>least<sp/>one<sp/>dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>will<sp/>full<sp/>path<sp/>of<sp/>first<sp/>dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>sdi.toFirst();</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>dir=sdi.current();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>path=dir-&gt;<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=path.findRev(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">,path.length()-2);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>path=path.left(i+1);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done=FALSE;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i==-1)<sp/></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>path.length();</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count=0;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sdi.toFirst();(dir=sdi.current());++sdi)</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>dirName<sp/>=<sp/>dir-&gt;<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirName.length()&gt;path.length())</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qstrncmp(dirName,path,l)!=0)<sp/></highlight><highlight class="comment">//<sp/>dirName<sp/>does<sp/>not<sp/>start<sp/>with<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=path.findRev(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">,l-2);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i==-1)<sp/></highlight><highlight class="comment">//<sp/>no<sp/>unique<sp/>prefix<sp/>-&gt;<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done=TRUE;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>restart<sp/>with<sp/>shorter<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path=path.left(i+1);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>dir<sp/>is<sp/>shorter<sp/>than<sp/>path<sp/>-&gt;<sp/>take<sp/>path<sp/>of<sp/>dir<sp/>as<sp/>new<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path=dir-&gt;<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=path.findRev(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">,l-2);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i==-1)<sp/></highlight><highlight class="comment">//<sp/>no<sp/>unique<sp/>prefix<sp/>-&gt;<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done=TRUE;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>restart<sp/>with<sp/>shorter<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path=path.left(i+1);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==Doxygen::directories-&gt;count())</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>path<sp/>matches<sp/>for<sp/>all<sp/>directories<sp/>-&gt;<sp/>found<sp/>the<sp/>common<sp/>prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done=TRUE;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sdi.toFirst();(dir=sdi.current());++sdi)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>diskName<sp/>=<sp/>dir-&gt;<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>().right(dir-&gt;<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>().length()-path.length());</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>dir-&gt;setDiskName(diskName);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;set<sp/>disk<sp/>name:<sp/>%s<sp/>-&gt;<sp/>%s\n&quot;,dir-&gt;name().data(),diskName.data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>buildDirectories()</highlight></codeline>
<codeline lineno="842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>input<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><ref refid="db/d32/class_file_name_list_iterator" kindref="compound" tooltip="Iterator for FileName objects in a FileNameList.">FileNameListIterator</ref><sp/>fnli(*Doxygen::inputNameList);<sp/></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><ref refid="dd/db9/class_file_name" kindref="compound" tooltip="Class representing all files with a certain base name.">FileName</ref><sp/>*fn;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fnli.toFirst();(fn=fnli.current());++fnli)</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d01/class_file_name_iterator" kindref="compound" tooltip="Iterator for FileDef objects in a FileName list.">FileNameIterator</ref><sp/>fni(*fn);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fd;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;(fd=fni.current());++fni)</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;buildDirectories<sp/>%s\n&quot;,fd-&gt;name().data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd-&gt;<ref refid="d5/dcc/class_definition_1a266bc8f350de23e01335d4d674995dcf" kindref="member">getReference</ref>().isEmpty()<sp/>&amp;&amp;<sp/>!fd-&gt;isDocumentationFile())</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*dir;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dir=Doxygen::directories-&gt;find(fd-&gt;<ref refid="de/db0/class_file_def_1a5d488e6a03d18ecf3e9236b9a2fd5e5e" kindref="member">getPath</ref>()))==0)<sp/></highlight><highlight class="comment">//<sp/>new<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/><ref refid="d4/dd4/class_dir_def_1ab3b1d03c75471701969e581aa4a6960f" kindref="member">DirDef::mergeDirectoryInTree</ref>(fd-&gt;<ref refid="de/db0/class_file_def_1a5d488e6a03d18ecf3e9236b9a2fd5e5e" kindref="member">getPath</ref>());</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir)<sp/>dir-&gt;addFile(fd);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>something<sp/>for<sp/>file<sp/>imported<sp/>via<sp/>tag<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//DirDef<sp/>*root<sp/>=<sp/>new<sp/>DirDef(&quot;root:&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>relations<sp/>between<sp/>directories<sp/>=&gt;<sp/>introduce<sp/>container<sp/>dirs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*dir;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>DirSDict::Iterator<sp/>sdi(*Doxygen::directories);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sdi.toFirst();(dir=sdi.current());++sdi)</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;New<sp/>dir<sp/>%s\n&quot;,dir-&gt;displayName().data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>name<sp/>=<sp/>dir-&gt;<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=name.findRev(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">,name.length()-2);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;0)</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*parent<sp/>=<sp/>Doxygen::directories-&gt;<ref refid="d1/d50/class_s_dict_1aec67482d780157680d46f48a7ed5e7bd" kindref="member">find</ref>(name.left(i+1));</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(parent==0)<sp/>parent=root;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent)<sp/></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;addSubDir(dir);<sp/></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;DirDef::addSubdir():<sp/>Adding<sp/>subdir\n%s<sp/>to\n%s\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>dir-&gt;displayName().data(),<sp/>parent-&gt;displayName().data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>computeCommonDirPrefix();</highlight></codeline>
<codeline lineno="891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeDirDependencies()</highlight></codeline>
<codeline lineno="894"><highlight class="normal">{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*dir;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>DirSDict::Iterator<sp/>sdi(*Doxygen::directories);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>nesting<sp/>level<sp/>for<sp/>each<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sdi.toFirst();(dir=sdi.current());++sdi)</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>dir-&gt;setLevel();</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>uses<sp/>dependencies<sp/>between<sp/>directories</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sdi.toFirst();(dir=sdi.current());++sdi)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;computeDependencies<sp/>for<sp/>%s:<sp/>#dirs=%d\n&quot;,dir-&gt;name().data(),Doxygen::directories.count());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>dir-&gt;computeDependencies();</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>generateDirDocs(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol)</highlight></codeline>
<codeline lineno="912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><ref refid="d4/dd4/class_dir_def" kindref="compound" tooltip="A model of a directory symbol.">DirDef</ref><sp/>*dir;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>DirSDict::Iterator<sp/>sdi(*Doxygen::directories);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sdi.toFirst();(dir=sdi.current());++sdi)</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>dir-&gt;writeDocumentation(ol);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Config_getBool(</highlight><highlight class="stringliteral">&quot;DIRECTORY_GRAPH&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d50/class_s_dict" kindref="compound" tooltip="Ordered dictionary of elements of type T.">SDict&lt;DirRelation&gt;::Iterator</ref><sp/>rdi(Doxygen::dirRelations);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/db3/class_dir_relation" kindref="compound" tooltip="A usage relation between two directories.">DirRelation</ref><sp/>*dr;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rdi.toFirst();(dr=rdi.current());++rdi)</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dr-&gt;writeDocumentation(ol);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/dirdef.cpp"/>
  </compounddef>
</doxygen>
