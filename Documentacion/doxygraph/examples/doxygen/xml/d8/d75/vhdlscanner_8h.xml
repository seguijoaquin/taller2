<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="d8/d75/vhdlscanner_8h" kind="file">
    <compoundname>vhdlscanner.h</compoundname>
    <includes refid="da/d55/parserintf_8h" local="yes">parserintf.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">qarray.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">qfile.h</includes>
    <includes local="no">qdict.h</includes>
    <includes refid="dd/dec/vhdldocgen_8h" local="yes">vhdldocgen.h</includes>
    <includes refid="d1/dc6/entry_8h" local="yes">entry.h</includes>
    <includedby refid="dc/d98/doxygen_8cpp" local="yes">src/doxygen.cpp</includedby>
    <includedby refid="d0/d72/memberdef_8cpp" local="yes">src/memberdef.cpp</includedby>
    <includedby refid="de/dea/vhdldocgen_8cpp" local="yes">src/vhdldocgen.cpp</includedby>
    <incdepgraph>
      <node id="5437">
        <label>qcstring.h</label>
      </node>
      <node id="5443">
        <label>qgstring.h</label>
      </node>
      <node id="5435">
        <label>qfile.h</label>
      </node>
      <node id="5431">
        <label>assert.h</label>
      </node>
      <node id="5428">
        <label>qstrlist.h</label>
      </node>
      <node id="5430">
        <label>stdlib.h</label>
      </node>
      <node id="5425">
        <label>src/vhdlscanner.h</label>
        <link refid="vhdlscanner.h"/>
        <childnode refid="5426" relation="include">
        </childnode>
        <childnode refid="5429" relation="include">
        </childnode>
        <childnode refid="5430" relation="include">
        </childnode>
        <childnode refid="5431" relation="include">
        </childnode>
        <childnode refid="5432" relation="include">
        </childnode>
        <childnode refid="5433" relation="include">
        </childnode>
        <childnode refid="5434" relation="include">
        </childnode>
        <childnode refid="5435" relation="include">
        </childnode>
        <childnode refid="5427" relation="include">
        </childnode>
        <childnode refid="5436" relation="include">
        </childnode>
        <childnode refid="5442" relation="include">
        </childnode>
      </node>
      <node id="5442">
        <label>entry.h</label>
        <link refid="d1/dc6/entry_8h_source"/>
        <childnode refid="5440" relation="include">
        </childnode>
        <childnode refid="5439" relation="include">
        </childnode>
        <childnode refid="5443" relation="include">
        </childnode>
      </node>
      <node id="5426">
        <label>parserintf.h</label>
        <link refid="da/d55/parserintf_8h_source"/>
        <childnode refid="5427" relation="include">
        </childnode>
        <childnode refid="5428" relation="include">
        </childnode>
      </node>
      <node id="5440">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="5437" relation="include">
        </childnode>
      </node>
      <node id="5434">
        <label>unistd.h</label>
      </node>
      <node id="5439">
        <label>qlist.h</label>
      </node>
      <node id="5432">
        <label>ctype.h</label>
      </node>
      <node id="5427">
        <label>qdict.h</label>
      </node>
      <node id="5429">
        <label>stdio.h</label>
      </node>
      <node id="5436">
        <label>vhdldocgen.h</label>
        <link refid="dd/dec/vhdldocgen_8h_source"/>
        <childnode refid="5427" relation="include">
        </childnode>
        <childnode refid="5437" relation="include">
        </childnode>
        <childnode refid="5438" relation="include">
        </childnode>
        <childnode refid="5441" relation="include">
        </childnode>
        <childnode refid="5442" relation="include">
        </childnode>
      </node>
      <node id="5438">
        <label>layout.h</label>
        <link refid="db/d51/layout_8h_source"/>
        <childnode refid="5439" relation="include">
        </childnode>
        <childnode refid="5440" relation="include">
        </childnode>
      </node>
      <node id="5433">
        <label>qarray.h</label>
      </node>
      <node id="5441">
        <label>arguments.h</label>
        <link refid="df/d9b/arguments_8h_source"/>
        <childnode refid="5439" relation="include">
        </childnode>
        <childnode refid="5437" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5446">
        <label>src/memberdef.cpp</label>
        <link refid="d0/d72/memberdef_8cpp_source"/>
      </node>
      <node id="5445">
        <label>src/doxygen.cpp</label>
        <link refid="dc/d98/doxygen_8cpp_source"/>
      </node>
      <node id="5447">
        <label>src/vhdldocgen.cpp</label>
        <link refid="de/dea/vhdldocgen_8cpp_source"/>
      </node>
      <node id="5444">
        <label>src/vhdlscanner.h</label>
        <link refid="vhdlscanner.h"/>
        <childnode refid="5445" relation="include">
        </childnode>
        <childnode refid="5446" relation="include">
        </childnode>
        <childnode refid="5447" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="df/def/class_v_h_d_l_language_scanner" prot="public">VHDLLanguageScanner</innerclass>
    <innerclass refid="d3/d2f/struct_vhdl_container" prot="public">VhdlContainer</innerclass>
    <innerclass refid="de/d3c/struct_vhdl_conf_node" prot="public">VhdlConfNode</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="d8/d75/vhdlscanner_8h_1a65fa8a56ea8d5aa598a4eb1d7384042e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/dd7/class_entry" kindref="compound">Entry</ref> *</type>
        <definition>Entry* getVhdlCompound</definition>
        <argsstring>()</argsstring>
        <name>getVhdlCompound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/vhdlscanner.h" line="114"/>
      </memberdef>
      <memberdef kind="function" id="d8/d75/vhdlscanner_8h_1a24f32cc2c831b30b9956ac0ad33e5a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/dd7/class_entry" kindref="compound">Entry</ref> *</type>
        <definition>Entry* getCurrentVhdlEntry</definition>
        <argsstring>()</argsstring>
        <name>getCurrentVhdlEntry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/vhdlscanner.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="d8/d75/vhdlscanner_8h_1ae26bba3ffc7905e46f43de3c78882ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void newVhdlEntry</definition>
        <argsstring>()</argsstring>
        <name>newVhdlEntry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/vhdlscanner.h" line="119"/>
      </memberdef>
      <memberdef kind="function" id="d8/d75/vhdlscanner_8h_1a7cc5bbdcfab4a532b14ed98d2ec1abfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initVhdlParser</definition>
        <argsstring>()</argsstring>
        <name>initVhdlParser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/vhdlscanner.h" line="121"/>
      </memberdef>
      <memberdef kind="function" id="d8/d75/vhdlscanner_8h_1acbbbab510f6a482763c60b1fde932efa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="d3/d2f/struct_vhdl_container" kindref="compound">VhdlContainer</ref> *</type>
        <definition>struct VhdlContainer* getVhdlCont</definition>
        <argsstring>()</argsstring>
        <name>getVhdlCont</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/vhdlscanner.h" line="123"/>
      </memberdef>
      <memberdef kind="function" id="d8/d75/vhdlscanner_8h_1a04d5db320e6e4da201da3f73ff3be77c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getParsedLine</definition>
        <argsstring>(int object)</argsstring>
        <name>getParsedLine</name>
        <param>
          <type>int</type>
          <declname>object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/vhdlscanner.h" line="127"/>
      </memberdef>
      <memberdef kind="function" id="d8/d75/vhdlscanner_8h_1abb4387a41f8bb939973c2b392f0793c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vhdlscanFreeScanner</definition>
        <argsstring>()</argsstring>
        <name>vhdlscanFreeScanner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/vhdlscanner.h" line="129"/>
      </memberdef>
      <memberdef kind="function" id="d8/d75/vhdlscanner_8h_1af365d6944e40b736ca1ac4684fc02049" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vhdlParse</definition>
        <argsstring>()</argsstring>
        <name>vhdlParse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/vhdlscanner.h" line="131"/>
      </memberdef>
      <memberdef kind="function" id="d8/d75/vhdlscanner_8h_1a3ae4601d4c5d37ca67a882be32425b54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d4/dd7/class_entry" kindref="compound">Entry</ref> &gt; &amp;</type>
        <definition>QList&lt;Entry&gt;&amp; getVhdlInstList</definition>
        <argsstring>()</argsstring>
        <name>getVhdlInstList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/vhdlscanner.h" line="134"/>
      </memberdef>
      <memberdef kind="function" id="d8/d75/vhdlscanner_8h_1a5efc2ed713b6083cc1a1484e8f603a4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="de/d3c/struct_vhdl_conf_node" kindref="compound">VhdlConfNode</ref> &gt; &amp;</type>
        <definition>QList&lt;VhdlConfNode&gt;&amp; getVhdlConfiguration</definition>
        <argsstring>()</argsstring>
        <name>getVhdlConfiguration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/vhdlscanner.h" line="137"/>
      </memberdef>
      <memberdef kind="function" id="d8/d75/vhdlscanner_8h_1a13bdc490b0921ceef8d959dbefda55f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d4/dd7/class_entry" kindref="compound">Entry</ref> &gt; &amp;</type>
        <definition>QList&lt;Entry&gt;&amp; getLibUse</definition>
        <argsstring>()</argsstring>
        <name>getLibUse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/vhdlscanner.h" line="140"/>
      </memberdef>
      <memberdef kind="function" id="d8/d75/vhdlscanner_8h_1adeecb14cdc59d07cc5488e6789ffabdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void isVhdlDocPending</definition>
        <argsstring>()</argsstring>
        <name>isVhdlDocPending</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/vhdlscanner.h" line="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>vhdlscanner.h,v<sp/>1.9<sp/>2001/03/19<sp/>19:27:39<sp/>root<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1997-2013<sp/>by<sp/>Dimitri<sp/>van<sp/>Heesch.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and<sp/>distribute<sp/>this<sp/>software<sp/>and<sp/>its</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>documentation<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>is<sp/>hereby<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>granted.<sp/>No<sp/>representations<sp/>are<sp/>made<sp/>about<sp/>the<sp/>suitability<sp/>of<sp/>this<sp/>software<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>for<sp/>any<sp/>purpose.<sp/>It<sp/>is<sp/>provided<sp/>&quot;as<sp/>is&quot;<sp/>without<sp/>express<sp/>or<sp/>implied<sp/>warranty.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Documents<sp/>produced<sp/>by<sp/>Doxygen<sp/>are<sp/>derivative<sp/>works<sp/>derived<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>input<sp/>used<sp/>in<sp/>their<sp/>production;<sp/>they<sp/>are<sp/>not<sp/>affected<sp/>by<sp/>this<sp/>license.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VHDLSCANNER_H</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VHDLSCANNER_H</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;parserintf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qarray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qdict.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vhdldocgen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/dd7/class_entry" kindref="compound" tooltip="Represents an unstructured piece of information, about an entity found in the sources.">Entry</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d3d/class_class_s_dict" kindref="compound" tooltip="A sorted dictionary of ClassDef objects.">ClassSDict</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/d94/class_file_storage" kindref="compound" tooltip="Store implementation based on a file.">FileStorage</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QStringList;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/d13/class_member_list" kindref="compound" tooltip="A list of MemberDef objects.">MemberList</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="df/def/class_v_h_d_l_language_scanner" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/def/class_v_h_d_l_language_scanner" kindref="compound" tooltip="VHDL parser using state-based lexical scanning.">VHDLLanguageScanner</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d5/d84/class_parser_interface" kindref="compound" tooltip="Abstract interface for programming language parsers.">ParserInterface</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="df/def/class_v_h_d_l_language_scanner" kindref="compound" tooltip="VHDL parser using state-based lexical scanning.">VHDLLanguageScanner</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="51" refid="df/def/class_v_h_d_l_language_scanner_1a57e38f82bcb0ab8af7d6dabe131ad394" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/def/class_v_h_d_l_language_scanner_1a57e38f82bcb0ab8af7d6dabe131ad394" kindref="member" tooltip="Starts processing a translation unit (source files + headers).">startTranslationUnit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>{}</highlight></codeline>
<codeline lineno="52" refid="df/def/class_v_h_d_l_language_scanner_1a1c08cc94a1cd79fdaf8a102935089445" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/def/class_v_h_d_l_language_scanner_1a1c08cc94a1cd79fdaf8a102935089445" kindref="member" tooltip="Called after all files in a translation unit have been processed.">finishTranslationUnit</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/def/class_v_h_d_l_language_scanner_1a604cae09257525fbca32c10ffeb6e961" kindref="member" tooltip="Parses a single input file with the goal to build an Entry tree.">parseInput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>fileName,<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileBuf,<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dd7/class_entry" kindref="compound" tooltip="Represents an unstructured piece of information, about an entity found in the sources.">Entry</ref><sp/>*root,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sameTranslationUnit,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QStrList<sp/>&amp;filesInSameTranslationUnit);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/def/class_v_h_d_l_language_scanner_1ab343e9269e4e5b274a87b270452595e0" kindref="member" tooltip="Returns TRUE if the language identified by extension needs the C preprocessor to be run before feed t...">needsPreprocessing</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;extension);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/def/class_v_h_d_l_language_scanner_1a511a33d6c500c6e687c02d616275cd8f" kindref="member" tooltip="Parses a source file or fragment with the goal to produce highlighted and cross-referenced output...">parseCode</ref>(<ref refid="d5/d9c/class_code_output_interface" kindref="compound" tooltip="Output interface for code parser.">CodeOutputInterface</ref><sp/>&amp;codeOutIntf,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scopeName,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;input,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isExampleBlock,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*exampleName=0,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fileDef=0,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startLine=-1,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endLine=-1,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inlineFragment=FALSE,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*memberDef=0,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>showLineNumbers=TRUE,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*searchCtx=0</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/def/class_v_h_d_l_language_scanner_1a67461c7de314e7f414fb70d5735727c3" kindref="member" tooltip="Resets the state of the code parser.">resetCodeParserState</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/def/class_v_h_d_l_language_scanner_1a10bbe28441f011a5de49705e1a64db00" kindref="member" tooltip="Callback function called by the comment block scanner.">parsePrototype</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="d3/d2f/struct_vhdl_container" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d3/d2f/struct_vhdl_container" kindref="compound" tooltip="Container for vhdlscanner.">VhdlContainer</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yyLineNr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>line<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iLine;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>line<sp/>no<sp/>of<sp/>last<sp/>t_identifier<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>QCString<sp/>qstr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>t_identifier<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>QCString<sp/>fileName;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="d4/dd7/class_entry" kindref="compound" tooltip="Represents an unstructured piece of information, about an entity found in the sources.">Entry</ref>*<sp/><sp/>root;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">};<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="de/d3c/struct_vhdl_conf_node" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="de/d3c/struct_vhdl_conf_node" kindref="compound" tooltip="Configuration node for VHDL.">VhdlConfNode</ref></highlight></codeline>
<codeline lineno="88"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="de/d3c/struct_vhdl_conf_node" kindref="compound" tooltip="Configuration node for VHDL.">VhdlConfNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/>a,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/>b,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>config,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>cs,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>leaf)<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>arch=a;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>architecture<sp/><sp/>e.g.<sp/>for<sp/>iobuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>arch=arch.lower();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>binding=b;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>binding<sp/>e.g.<sp/><sp/>use<sp/>entiy<sp/>work.xxx(bev)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>binding=binding.lower();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>confVhdl=config;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configuration<sp/>foo<sp/>is<sp/>bar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>compSpec=cs;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>isInlineConf=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>primary<sp/>configuration?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>isLeaf=leaf;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>QCString<sp/>confVhdl;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>QCString<sp/>arch;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>QCString<sp/>binding;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>QCString<sp/>compSpec;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLeaf;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInlineConf;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>current<sp/>conpound<sp/>entity,architecture,<sp/>package,package<sp/>body<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="d4/dd7/class_entry" kindref="compound" tooltip="Represents an unstructured piece of information, about an entity found in the sources.">Entry</ref>*<sp/>getVhdlCompound();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>current<sp/>parsed<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="d4/dd7/class_entry" kindref="compound" tooltip="Represents an unstructured piece of information, about an entity found in the sources.">Entry</ref>*<sp/>getCurrentVhdlEntry();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>newVhdlEntry();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initVhdlParser();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d3/d2f/struct_vhdl_container" kindref="compound" tooltip="Container for vhdlscanner.">VhdlContainer</ref>*<sp/>getVhdlCont();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/><sp/>parsed<sp/>line<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@<sp/>param<sp/>object<sp/>index<sp/>of<sp/>vhdl<sp/>keyword<sp/>like<sp/>t_Identifier<sp/>t_Entity<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getParsedLine(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vhdlscanFreeScanner();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vhdlParse();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>list<sp/>of<sp/>component<sp/>instantiations<sp/>e.g.<sp/>foo:<sp/>component<sp/>bar<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;Entry&gt;</ref><sp/>&amp;<sp/><sp/>getVhdlInstList();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/><sp/><sp/>configuration<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;VhdlConfNode&gt;</ref>&amp;<sp/>getVhdlConfiguration();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>library/used<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;Entry&gt;</ref><sp/>&amp;<sp/><sp/>getLibUse();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>isVhdlDocPending();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/vhdlscanner.h"/>
  </compounddef>
</doxygen>
