<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="d8/d3c/util_8h" kind="file">
    <compoundname>util.h</compoundname>
    <includes local="no">qlist.h</includes>
    <includes local="no">ctype.h</includes>
    <includes refid="d9/d49/types_8h" local="yes">types.h</includes>
    <includedby refid="d5/d0b/cite_8cpp" local="yes">src/cite.cpp</includedby>
    <includedby refid="de/d89/classdef_8cpp" local="yes">src/classdef.cpp</includedby>
    <includedby refid="d6/d10/classlist_8cpp" local="yes">src/classlist.cpp</includedby>
    <includedby refid="d1/d70/dbusxmlscanner_8cpp" local="yes">src/dbusxmlscanner.cpp</includedby>
    <includedby refid="d3/d17/defgen_8cpp" local="yes">src/defgen.cpp</includedby>
    <includedby refid="d3/dea/definition_8cpp" local="yes">src/definition.cpp</includedby>
    <includedby refid="da/d0d/diagram_8cpp" local="yes">src/diagram.cpp</includedby>
    <includedby refid="d8/d52/dirdef_8cpp" local="yes">src/dirdef.cpp</includedby>
    <includedby refid="d8/d29/docbookgen_8cpp" local="yes">src/docbookgen.cpp</includedby>
    <includedby refid="dc/d05/docbookvisitor_8cpp" local="yes">src/docbookvisitor.cpp</includedby>
    <includedby refid="da/d17/docparser_8cpp" local="yes">src/docparser.cpp</includedby>
    <includedby refid="d7/d8f/docsets_8cpp" local="yes">src/docsets.cpp</includedby>
    <includedby refid="de/daa/dot_8cpp" local="yes">src/dot.cpp</includedby>
    <includedby refid="dc/d98/doxygen_8cpp" local="yes">src/doxygen.cpp</includedby>
    <includedby refid="d8/d56/eclipsehelp_8cpp" local="yes">src/eclipsehelp.cpp</includedby>
    <includedby refid="d2/dd2/entry_8cpp" local="yes">src/entry.cpp</includedby>
    <includedby refid="d6/ddc/filedef_8cpp" local="yes">src/filedef.cpp</includedby>
    <includedby refid="de/d36/filename_8cpp" local="yes">src/filename.cpp</includedby>
    <includedby refid="d7/d5b/formula_8cpp" local="yes">src/formula.cpp</includedby>
    <includedby refid="db/d41/ftvhelp_8cpp" local="yes">src/ftvhelp.cpp</includedby>
    <includedby refid="d6/d42/groupdef_8cpp" local="yes">src/groupdef.cpp</includedby>
    <includedby refid="d9/db7/htags_8cpp" local="yes">src/htags.cpp</includedby>
    <includedby refid="da/db0/htmldocvisitor_8cpp" local="yes">src/htmldocvisitor.cpp</includedby>
    <includedby refid="d8/d6e/htmlgen_8cpp" local="yes">src/htmlgen.cpp</includedby>
    <includedby refid="db/d14/index_8cpp" local="yes">src/index.cpp</includedby>
    <includedby refid="d2/d48/language_8cpp" local="yes">src/language.cpp</includedby>
    <includedby refid="d1/d4e/latexdocvisitor_8cpp" local="yes">src/latexdocvisitor.cpp</includedby>
    <includedby refid="d4/d42/latexgen_8cpp" local="yes">src/latexgen.cpp</includedby>
    <includedby refid="db/d16/layout_8cpp" local="yes">src/layout.cpp</includedby>
    <includedby refid="d8/dde/mandocvisitor_8cpp" local="yes">src/mandocvisitor.cpp</includedby>
    <includedby refid="d7/de7/mangen_8cpp" local="yes">src/mangen.cpp</includedby>
    <includedby refid="de/d04/markdown_8cpp" local="yes">src/markdown.cpp</includedby>
    <includedby refid="d0/d72/memberdef_8cpp" local="yes">src/memberdef.cpp</includedby>
    <includedby refid="d6/d18/membergroup_8cpp" local="yes">src/membergroup.cpp</includedby>
    <includedby refid="d0/d14/memberlist_8cpp" local="yes">src/memberlist.cpp</includedby>
    <includedby refid="de/d1d/membername_8cpp" local="yes">src/membername.cpp</includedby>
    <includedby refid="d8/d6a/message_8cpp" local="yes">src/message.cpp</includedby>
    <includedby refid="db/d33/msc_8cpp" local="yes">src/msc.cpp</includedby>
    <includedby refid="d7/d1c/namespacedef_8cpp" local="yes">src/namespacedef.cpp</includedby>
    <includedby refid="d9/db4/pagedef_8cpp" local="yes">src/pagedef.cpp</includedby>
    <includedby refid="dd/d53/qhpxmlwriter_8cpp" local="yes">src/qhpxmlwriter.cpp</includedby>
    <includedby refid="d4/d09/reflist_8cpp" local="yes">src/reflist.cpp</includedby>
    <includedby refid="de/d9a/rtfdocvisitor_8cpp" local="yes">src/rtfdocvisitor.cpp</includedby>
    <includedby refid="d0/d9c/rtfgen_8cpp" local="yes">src/rtfgen.cpp</includedby>
    <includedby refid="d7/d79/searchindex_8cpp" local="yes">src/searchindex.cpp</includedby>
    <includedby refid="d4/d7b/tagreader_8cpp" local="yes">src/tagreader.cpp</includedby>
    <includedby refid="df/d2d/util_8cpp" local="yes">src/util.cpp</includedby>
    <includedby refid="de/dea/vhdldocgen_8cpp" local="yes">src/vhdldocgen.cpp</includedby>
    <includedby refid="dd/db6/xmldocvisitor_8cpp" local="yes">src/xmldocvisitor.cpp</includedby>
    <includedby refid="d0/dc3/xmlgen_8cpp" local="yes">src/xmlgen.cpp</includedby>
    <incdepgraph>
      <node id="5265">
        <label>qcstring.h</label>
      </node>
      <node id="5261">
        <label>src/util.h</label>
        <link refid="util.h"/>
        <childnode refid="5262" relation="include">
        </childnode>
        <childnode refid="5263" relation="include">
        </childnode>
        <childnode refid="5264" relation="include">
        </childnode>
      </node>
      <node id="5264">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="5265" relation="include">
        </childnode>
      </node>
      <node id="5262">
        <label>qlist.h</label>
      </node>
      <node id="5263">
        <label>ctype.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5312">
        <label>src/tagreader.cpp</label>
        <link refid="d4/d7b/tagreader_8cpp_source"/>
      </node>
      <node id="5289">
        <label>src/htmldocvisitor.cpp</label>
        <link refid="da/db0/htmldocvisitor_8cpp_source"/>
      </node>
      <node id="5309">
        <label>src/rtfdocvisitor.cpp</label>
        <link refid="de/d9a/rtfdocvisitor_8cpp_source"/>
      </node>
      <node id="5277">
        <label>src/docparser.cpp</label>
        <link refid="da/d17/docparser_8cpp_source"/>
      </node>
      <node id="5300">
        <label>src/membergroup.cpp</label>
        <link refid="d6/d18/membergroup_8cpp_source"/>
      </node>
      <node id="5299">
        <label>src/memberdef.cpp</label>
        <link refid="d0/d72/memberdef_8cpp_source"/>
      </node>
      <node id="5280">
        <label>src/doxygen.cpp</label>
        <link refid="dc/d98/doxygen_8cpp_source"/>
      </node>
      <node id="5279">
        <label>src/dot.cpp</label>
        <link refid="de/daa/dot_8cpp_source"/>
      </node>
      <node id="5314">
        <label>src/vhdldocgen.cpp</label>
        <link refid="de/dea/vhdldocgen_8cpp_source"/>
      </node>
      <node id="5310">
        <label>src/rtfgen.cpp</label>
        <link refid="d0/d9c/rtfgen_8cpp_source"/>
      </node>
      <node id="5296">
        <label>src/mandocvisitor.cpp</label>
        <link refid="d8/dde/mandocvisitor_8cpp_source"/>
      </node>
      <node id="5269">
        <label>src/classlist.cpp</label>
        <link refid="d6/d10/classlist_8cpp_source"/>
      </node>
      <node id="5306">
        <label>src/pagedef.cpp</label>
        <link refid="d9/db4/pagedef_8cpp_source"/>
      </node>
      <node id="5271">
        <label>src/defgen.cpp</label>
        <link refid="d3/d17/defgen_8cpp_source"/>
      </node>
      <node id="5282">
        <label>src/entry.cpp</label>
        <link refid="d2/dd2/entry_8cpp_source"/>
      </node>
      <node id="5313">
        <label>src/util.cpp</label>
        <link refid="df/d2d/util_8cpp_source"/>
      </node>
      <node id="5304">
        <label>src/msc.cpp</label>
        <link refid="db/d33/msc_8cpp_source"/>
      </node>
      <node id="5293">
        <label>src/latexdocvisitor.cpp</label>
        <link refid="d1/d4e/latexdocvisitor_8cpp_source"/>
      </node>
      <node id="5303">
        <label>src/message.cpp</label>
        <link refid="d8/d6a/message_8cpp_source"/>
      </node>
      <node id="5311">
        <label>src/searchindex.cpp</label>
        <link refid="d7/d79/searchindex_8cpp_source"/>
      </node>
      <node id="5283">
        <label>src/filedef.cpp</label>
        <link refid="d6/ddc/filedef_8cpp_source"/>
      </node>
      <node id="5287">
        <label>src/groupdef.cpp</label>
        <link refid="d6/d42/groupdef_8cpp_source"/>
      </node>
      <node id="5275">
        <label>src/docbookgen.cpp</label>
        <link refid="d8/d29/docbookgen_8cpp_source"/>
      </node>
      <node id="5284">
        <label>src/filename.cpp</label>
        <link refid="de/d36/filename_8cpp_source"/>
      </node>
      <node id="5274">
        <label>src/dirdef.cpp</label>
        <link refid="d8/d52/dirdef_8cpp_source"/>
      </node>
      <node id="5272">
        <label>src/definition.cpp</label>
        <link refid="d3/dea/definition_8cpp_source"/>
      </node>
      <node id="5305">
        <label>src/namespacedef.cpp</label>
        <link refid="d7/d1c/namespacedef_8cpp_source"/>
      </node>
      <node id="5266">
        <label>src/util.h</label>
        <link refid="util.h"/>
        <childnode refid="5267" relation="include">
        </childnode>
        <childnode refid="5268" relation="include">
        </childnode>
        <childnode refid="5269" relation="include">
        </childnode>
        <childnode refid="5270" relation="include">
        </childnode>
        <childnode refid="5271" relation="include">
        </childnode>
        <childnode refid="5272" relation="include">
        </childnode>
        <childnode refid="5273" relation="include">
        </childnode>
        <childnode refid="5274" relation="include">
        </childnode>
        <childnode refid="5275" relation="include">
        </childnode>
        <childnode refid="5276" relation="include">
        </childnode>
        <childnode refid="5277" relation="include">
        </childnode>
        <childnode refid="5278" relation="include">
        </childnode>
        <childnode refid="5279" relation="include">
        </childnode>
        <childnode refid="5280" relation="include">
        </childnode>
        <childnode refid="5281" relation="include">
        </childnode>
        <childnode refid="5282" relation="include">
        </childnode>
        <childnode refid="5283" relation="include">
        </childnode>
        <childnode refid="5284" relation="include">
        </childnode>
        <childnode refid="5285" relation="include">
        </childnode>
        <childnode refid="5286" relation="include">
        </childnode>
        <childnode refid="5287" relation="include">
        </childnode>
        <childnode refid="5288" relation="include">
        </childnode>
        <childnode refid="5289" relation="include">
        </childnode>
        <childnode refid="5290" relation="include">
        </childnode>
        <childnode refid="5291" relation="include">
        </childnode>
        <childnode refid="5292" relation="include">
        </childnode>
        <childnode refid="5293" relation="include">
        </childnode>
        <childnode refid="5294" relation="include">
        </childnode>
        <childnode refid="5295" relation="include">
        </childnode>
        <childnode refid="5296" relation="include">
        </childnode>
        <childnode refid="5297" relation="include">
        </childnode>
        <childnode refid="5298" relation="include">
        </childnode>
        <childnode refid="5299" relation="include">
        </childnode>
        <childnode refid="5300" relation="include">
        </childnode>
        <childnode refid="5301" relation="include">
        </childnode>
        <childnode refid="5302" relation="include">
        </childnode>
        <childnode refid="5303" relation="include">
        </childnode>
        <childnode refid="5304" relation="include">
        </childnode>
        <childnode refid="5305" relation="include">
        </childnode>
        <childnode refid="5306" relation="include">
        </childnode>
        <childnode refid="5307" relation="include">
        </childnode>
        <childnode refid="5308" relation="include">
        </childnode>
        <childnode refid="5309" relation="include">
        </childnode>
        <childnode refid="5310" relation="include">
        </childnode>
        <childnode refid="5311" relation="include">
        </childnode>
        <childnode refid="5312" relation="include">
        </childnode>
        <childnode refid="5313" relation="include">
        </childnode>
        <childnode refid="5314" relation="include">
        </childnode>
        <childnode refid="5315" relation="include">
        </childnode>
        <childnode refid="5316" relation="include">
        </childnode>
      </node>
      <node id="5270">
        <label>src/dbusxmlscanner.cpp</label>
        <link refid="d1/d70/dbusxmlscanner_8cpp_source"/>
      </node>
      <node id="5307">
        <label>src/qhpxmlwriter.cpp</label>
        <link refid="dd/d53/qhpxmlwriter_8cpp_source"/>
      </node>
      <node id="5285">
        <label>src/formula.cpp</label>
        <link refid="d7/d5b/formula_8cpp_source"/>
      </node>
      <node id="5315">
        <label>src/xmldocvisitor.cpp</label>
        <link refid="dd/db6/xmldocvisitor_8cpp_source"/>
      </node>
      <node id="5276">
        <label>src/docbookvisitor.cpp</label>
        <link refid="dc/d05/docbookvisitor_8cpp_source"/>
      </node>
      <node id="5297">
        <label>src/mangen.cpp</label>
        <link refid="d7/de7/mangen_8cpp_source"/>
      </node>
      <node id="5286">
        <label>src/ftvhelp.cpp</label>
        <link refid="db/d41/ftvhelp_8cpp_source"/>
      </node>
      <node id="5288">
        <label>src/htags.cpp</label>
        <link refid="d9/db7/htags_8cpp_source"/>
      </node>
      <node id="5316">
        <label>src/xmlgen.cpp</label>
        <link refid="d0/dc3/xmlgen_8cpp_source"/>
      </node>
      <node id="5290">
        <label>src/htmlgen.cpp</label>
        <link refid="d8/d6e/htmlgen_8cpp_source"/>
      </node>
      <node id="5291">
        <label>src/index.cpp</label>
        <link refid="db/d14/index_8cpp"/>
      </node>
      <node id="5295">
        <label>src/layout.cpp</label>
        <link refid="db/d16/layout_8cpp_source"/>
      </node>
      <node id="5301">
        <label>src/memberlist.cpp</label>
        <link refid="d0/d14/memberlist_8cpp_source"/>
      </node>
      <node id="5278">
        <label>src/docsets.cpp</label>
        <link refid="d7/d8f/docsets_8cpp_source"/>
      </node>
      <node id="5281">
        <label>src/eclipsehelp.cpp</label>
        <link refid="d8/d56/eclipsehelp_8cpp_source"/>
      </node>
      <node id="5308">
        <label>src/reflist.cpp</label>
        <link refid="d4/d09/reflist_8cpp_source"/>
      </node>
      <node id="5302">
        <label>src/membername.cpp</label>
        <link refid="de/d1d/membername_8cpp_source"/>
      </node>
      <node id="5267">
        <label>src/cite.cpp</label>
        <link refid="d5/d0b/cite_8cpp_source"/>
      </node>
      <node id="5298">
        <label>src/markdown.cpp</label>
        <link refid="de/d04/markdown_8cpp_source"/>
      </node>
      <node id="5273">
        <label>src/diagram.cpp</label>
        <link refid="da/d0d/diagram_8cpp_source"/>
      </node>
      <node id="5292">
        <label>src/language.cpp</label>
        <link refid="d2/d48/language_8cpp_source"/>
      </node>
      <node id="5268">
        <label>src/classdef.cpp</label>
        <link refid="de/d89/classdef_8cpp_source"/>
      </node>
      <node id="5294">
        <label>src/latexgen.cpp</label>
        <link refid="d4/d42/latexgen_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d0/dcf/class_text_generator_intf" prot="public">TextGeneratorIntf</innerclass>
    <innerclass refid="db/d2b/class_text_generator_o_l_impl" prot="public">TextGeneratorOLImpl</innerclass>
    <innerclass refid="da/d06/struct_colored_img_data_item" prot="public">ColoredImgDataItem</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="d8/d3c/util_8h_1a969690ca9b1155540d43631f499b3880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString langToString</definition>
        <argsstring>(SrcLangExt lang)</argsstring>
        <name>langToString</name>
        <param>
          <type><ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member">SrcLangExt</ref></type>
          <declname>lang</declname>
        </param>
        <briefdescription>
<para>Returns a string representation of <emphasis>lang</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="90" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7592" bodyend="7613"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ac4c34c02b8869dca71de6f4037736dc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString getLanguageSpecificSeparator</definition>
        <argsstring>(SrcLangExt lang, bool classScope=FALSE)</argsstring>
        <name>getLanguageSpecificSeparator</name>
        <param>
          <type><ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member">SrcLangExt</ref></type>
          <declname>lang</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>classScope</declname>
          <defval>FALSE</defval>
        </param>
        <briefdescription>
<para>Returns the scope separator to use given the programming language <emphasis>lang</emphasis>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="91" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7616" bodyend="7630"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1aaa41bd0427c9ef7d1aa4fa3a7014f0e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void linkifyText</definition>
        <argsstring>(const TextGeneratorIntf &amp;ol, Definition *scope, FileDef *fileScope, Definition *self, const char *text, bool autoBreak=FALSE, bool external=TRUE, bool keepSpaces=FALSE, int indentLevel=0)</argsstring>
        <name>linkifyText</name>
        <param>
          <type>const <ref refid="d0/dcf/class_text_generator_intf" kindref="compound">TextGeneratorIntf</ref> &amp;</type>
          <declname>ol</declname>
        </param>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>fileScope</declname>
        </param>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>autoBreak</declname>
          <defval>FALSE</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>external</declname>
          <defval>TRUE</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>keepSpaces</declname>
          <defval>FALSE</defval>
        </param>
        <param>
          <type>int</type>
          <declname>indentLevel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="104" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="1889" bodyend="2076"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1adac72b4ea3bea5b95361196b902c93cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setAnchors</definition>
        <argsstring>(MemberList *ml)</argsstring>
        <name>setAnchors</name>
        <param>
          <type><ref refid="dd/d13/class_member_list" kindref="compound">MemberList</ref> *</type>
          <declname>ml</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="106" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="2210" bodyend="2231"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a320768069dfe8bb92a0ad137769a3275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString fileToString</definition>
        <argsstring>(const char *name, bool filter=FALSE, bool isSourceCode=FALSE)</argsstring>
        <name>fileToString</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>filter</declname>
          <defval>FALSE</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>isSourceCode</declname>
          <defval>FALSE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reads a file with name <emphasis>name</emphasis> and returns it as a string. If <emphasis>filter</emphasis> is TRUE the file will be filtered by any user specified input filter. If <emphasis>name</emphasis> is &quot;-&quot; the string will be read from standard input. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="108" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="2374" bodyend="2467"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ad100564131ab122948dd034424322cda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString dateToString</definition>
        <argsstring>(bool)</argsstring>
        <name>dateToString</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="110" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="2469" bodyend="2480"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a299731fdff2d25b4c64d046d24a0ac1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool getDefs</definition>
        <argsstring>(const QCString &amp;scopeName, const QCString &amp;memberName, const char *, MemberDef *&amp;md, ClassDef *&amp;cd, FileDef *&amp;fd, NamespaceDef *&amp;nd, GroupDef *&amp;gd, bool forceEmptyScope=FALSE, FileDef *currentFile=0, bool checkCV=FALSE, const char *forceTagFile=0)</argsstring>
        <name>getDefs</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>scopeName</declname>
          <defname>scName</defname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>memberName</declname>
        </param>
        <param>
          <type>const char *</type>
          <defname>args</defname>
        </param>
        <param>
          <type><ref refid="da/d09/class_member_def" kindref="compound">MemberDef</ref> *&amp;</type>
          <declname>md</declname>
        </param>
        <param>
          <type><ref refid="d1/dcf/class_class_def" kindref="compound">ClassDef</ref> *&amp;</type>
          <declname>cd</declname>
        </param>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *&amp;</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="d0/d07/class_namespace_def" kindref="compound">NamespaceDef</ref> *&amp;</type>
          <declname>nd</declname>
        </param>
        <param>
          <type><ref refid="d8/d09/class_group_def" kindref="compound">GroupDef</ref> *&amp;</type>
          <declname>gd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceEmptyScope</declname>
          <defval>FALSE</defval>
        </param>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>currentFile</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>checkCV</declname>
          <defval>FALSE</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>forceTagFile</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Searches for a member definition given its name `memberName&apos; as a string. memberName may also include a (partial) scope to indicate the scope in which the member is located.</para><para>The parameter `scName&apos; is a string representing the name of the scope in which the link was found.</para><para>In case of a function args contains a string representation of the argument list. Passing 0 means the member has no arguments. Passing &quot;()&quot; means any argument list will do, but &quot;()&quot; is preferred.</para><para>The function returns TRUE if the member is known and documented or FALSE if it is not. If TRUE is returned parameter `md&apos; contains a pointer to the member definition. Furthermore exactly one of the parameter `cd&apos;, `nd&apos;, or `fd&apos; will be non-zero:<itemizedlist>
<listitem><para>if `cd&apos; is non zero, the member was found in a class pointed to by cd.</para></listitem><listitem><para>if `nd&apos; is non zero, the member was found in a namespace pointed to by nd.</para></listitem><listitem><para>if `fd&apos; is non zero, the member was found in the global namespace of file fd. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="124" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="3899" bodyend="4264"/>
        <references refid="d1/d50/class_s_dict_1aec67482d780157680d46f48a7ed5e7bd" compoundref="d9/d21/sortdict_8h" startline="232" endline="235">SDict&lt; T &gt;::find</references>
        <references refid="d1/dcf/class_class_def_1ac30c86b68f74495d90bc44bb5b432529" compoundref="de/d89/classdef_8cpp" startline="4337" endline="4340">ClassDef::getFileDef</references>
        <references refid="d8/d09/class_group_def_1a9338f966e744542f22c5bbc630b80f95" compoundref="d6/d42/groupdef_8cpp" startline="1501" endline="1504">GroupDef::isLinkable</references>
        <references refid="d0/d07/class_namespace_def_1a5bbc047ff9799f2f74668168afacc0b2" compoundref="d7/d1c/namespacedef_8cpp" startline="1083" endline="1086">NamespaceDef::isLinkable</references>
        <references refid="de/db0/class_file_def_1af677cee8c349fa10532b0aa5c09df396" compoundref="d4/d3a/filedef_8h" startline="116" endline="116">FileDef::isLinkable</references>
        <references refid="d1/dcf/class_class_def_1a1ea1c676588739bbabf189cf2b343c56" compoundref="de/d89/classdef_8cpp" startline="2579" endline="2589">ClassDef::isLinkable</references>
        <references refid="da/d09/class_member_def_1ac1e70d83e731e91e68871d8b7908351a" compoundref="d0/d72/memberdef_8cpp" startline="1171" endline="1181">MemberDef::isLinkable</references>
        <references refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" compoundref="df/da1/definition_8h" startline="109" endline="109">Definition::name</references>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a188c1467dbdf01fbdb87e08ce49fb759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString getFileFilter</definition>
        <argsstring>(const char *name, bool isSourceCode)</argsstring>
        <name>getFileFilter</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isSourceCode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>looks for a filter for the file <emphasis>name</emphasis>. Returns the name of the filter if there is a match for the file name, otherwise an empty string. In case <emphasis>inSourceCode</emphasis> is TRUE then first the source filter list is considered. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="126" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="2301" bodyend="2327"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a4cc99128827cc7c407e276d3f65bb7b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool resolveRef</definition>
        <argsstring>(const char *scName, const char *name, bool inSeeBlock, Definition **resContext, MemberDef **resMember, bool lookForSpecializations=TRUE, FileDef *currentFile=0, bool checkScope=FALSE)</argsstring>
        <name>resolveRef</name>
        <param>
          <type>const char *</type>
          <declname>scName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSeeBlock</declname>
        </param>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> **</type>
          <declname>resContext</declname>
        </param>
        <param>
          <type><ref refid="da/d09/class_member_def" kindref="compound">MemberDef</ref> **</type>
          <declname>resMember</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>lookForSpecializations</declname>
          <defname>lookForSpecialization</defname>
          <defval>TRUE</defval>
        </param>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>currentFile</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>checkScope</declname>
          <defval>FALSE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an object to reference to given its name and context <simplesect kind="post"><para>return value TRUE implies *resContext!=0 or *resMember!=0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="136" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="4340" bodyend="4509"/>
        <references refid="d1/d50/class_s_dict_1aec67482d780157680d46f48a7ed5e7bd" compoundref="d9/d21/sortdict_8h" startline="232" endline="235">SDict&lt; T &gt;::find</references>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a925e11e8dc39782b799195b95fe47a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool resolveLink</definition>
        <argsstring>(const char *scName, const char *lr, bool inSeeBlock, Definition **resContext, QCString &amp;resAnchor)</argsstring>
        <name>resolveLink</name>
        <param>
          <type>const char *</type>
          <declname>scName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>lr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSeeBlock</declname>
        </param>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> **</type>
          <declname>resContext</declname>
        </param>
        <param>
          <type>QCString &amp;</type>
          <declname>resAnchor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="143" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="4605" bodyend="4701"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a7ec124b6c5496a1f90ec013dd13a06cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool generateLink</definition>
        <argsstring>(OutputDocInterface &amp;od, const char *, const char *, bool inSeeBlock, const char *)</argsstring>
        <name>generateLink</name>
        <param>
          <type><ref refid="d2/d1a/class_output_doc_interface" kindref="compound">OutputDocInterface</ref> &amp;</type>
          <declname>od</declname>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>bool</type>
          <declname>inSeeBlock</declname>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="149" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="4711" bodyend="4751"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a41ed50d02f23b6b7f9ed9fde7103bb02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generateFileRef</definition>
        <argsstring>(OutputDocInterface &amp;od, const char *, const char *linkTxt=0)</argsstring>
        <name>generateFileRef</name>
        <param>
          <type><ref refid="d2/d1a/class_output_doc_interface" kindref="compound">OutputDocInterface</ref> &amp;</type>
          <declname>od</declname>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const char *</type>
          <declname>linkTxt</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="152" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="4753" bodyend="4766"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a1cf0aaa212c55e4d7e2fd3356da26647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void writePageRef</definition>
        <argsstring>(OutputDocInterface &amp;od, const char *cn, const char *mn)</argsstring>
        <name>writePageRef</name>
        <param>
          <type><ref refid="d2/d1a/class_output_doc_interface" kindref="compound">OutputDocInterface</ref> &amp;</type>
          <declname>od</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="154" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="245" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1aa73eddf8538614ab7f28f4213082f62f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString getCanonicalTemplateSpec</definition>
        <argsstring>(Definition *d, FileDef *fs, const QCString &amp;spec)</argsstring>
        <name>getCanonicalTemplateSpec</name>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="156" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="3302" bodyend="3319"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a9895714a00c6f6def7009f5eed2b41d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matchArguments2</definition>
        <argsstring>(Definition *srcScope, FileDef *srcFileScope, ArgumentList *srcAl, Definition *dstScope, FileDef *dstFileScope, ArgumentList *dstAl, bool checkCV)</argsstring>
        <name>matchArguments2</name>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>srcScope</declname>
        </param>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>srcFileScope</declname>
        </param>
        <param>
          <type><ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> *</type>
          <declname>srcAl</declname>
        </param>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>dstScope</declname>
        </param>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>dstFileScope</declname>
        </param>
        <param>
          <type><ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> *</type>
          <declname>dstAl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checkCV</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="161" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="3614" bodyend="3693"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a8457e37bcb5e489eb0df4043dd355508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mergeArguments</definition>
        <argsstring>(ArgumentList *, ArgumentList *, bool forceNameOverwrite=FALSE)</argsstring>
        <name>mergeArguments</name>
        <param>
          <type><ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> *</type>
        </param>
        <param>
          <type><ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> *</type>
        </param>
        <param>
          <type>bool</type>
          <declname>forceNameOverwrite</declname>
          <defval>FALSE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="163" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="3699" bodyend="3828"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a1528138e65b90b6587cf91bab2e485e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString substituteClassNames</definition>
        <argsstring>(const QCString &amp;s)</argsstring>
        <name>substituteClassNames</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="165"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1aeabaedb8576cf90168747836f5f3f15b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString substitute</definition>
        <argsstring>(const char *s, const char *src, const char *dst)</argsstring>
        <name>substitute</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>substitute all occurrences of <emphasis>src</emphasis> in <emphasis>s</emphasis> by <emphasis>dst</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="167" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/htmlgen.cpp" bodystart="912" bodyend="942"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ae86942fc4f611369b1b9ac609984af46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString clearBlock</definition>
        <argsstring>(const char *s, const char *begin, const char *end)</argsstring>
        <name>clearBlock</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Clear a text block <emphasis>s</emphasis> from <emphasis>begin</emphasis> to <emphasis>end</emphasis> markers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="169" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/htmlgen.cpp" bodystart="946" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1aacd947d7524f43275f1b598a5f789131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString selectBlock</definition>
        <argsstring>(const QCString &amp;s, const QCString &amp;name, bool which)</argsstring>
        <name>selectBlock</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="171" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/htmlgen.cpp" bodystart="986" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1af98582eb1994259a8d863aedd6daf852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString resolveDefines</definition>
        <argsstring>(const char *n)</argsstring>
        <name>resolveDefines</name>
        <param>
          <type>const char *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="173"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1af038b3c55db4fa840af0ee26464bb72a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d1/dcf/class_class_def" kindref="compound">ClassDef</ref> *</type>
        <definition>ClassDef* getClass</definition>
        <argsstring>(const char *key)</argsstring>
        <name>getClass</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a class definition given its name. Returns 0 if the class is not found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="175" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="469" bodyend="484"/>
        <references refid="d1/d50/class_s_dict_1aec67482d780157680d46f48a7ed5e7bd" compoundref="d9/d21/sortdict_8h" startline="232" endline="235">SDict&lt; T &gt;::find</references>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a519a0b5ebad8c18e8cb270374eaa2874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d1/dcf/class_class_def" kindref="compound">ClassDef</ref> *</type>
        <definition>ClassDef* getResolvedClass</definition>
        <argsstring>(Definition *scope, FileDef *fileScope, const char *key, MemberDef **pTypeDef=0, QCString *pTemplSpec=0, bool mayBeUnlinkable=FALSE, bool mayBeHidden=FALSE, QCString *pResolvedType=0)</argsstring>
        <name>getResolvedClass</name>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>fileScope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="da/d09/class_member_def" kindref="compound">MemberDef</ref> **</type>
          <declname>pTypeDef</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>QCString *</type>
          <declname>pTemplSpec</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>mayBeUnlinkable</declname>
          <defval>FALSE</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>mayBeHidden</declname>
          <defval>FALSE</defval>
        </param>
        <param>
          <type>QCString *</type>
          <declname>pResolvedType</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="184" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="1560" bodyend="1607"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1af16ae563cd6c3263fd7ea32399f097ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d0/d07/class_namespace_def" kindref="compound">NamespaceDef</ref> *</type>
        <definition>NamespaceDef* getResolvedNamespace</definition>
        <argsstring>(const char *key)</argsstring>
        <name>getResolvedNamespace</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="186" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="486" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a0cf19d261e77047fb63376980cbf866a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
        <definition>FileDef* findFileDef</definition>
        <argsstring>(const FileNameDict *fnDict, const char *n, bool &amp;ambig)</argsstring>
        <name>findFileDef</name>
        <param>
          <type>const <ref refid="dd/d0f/class_file_name_dict" kindref="compound">FileNameDict</ref> *</type>
          <declname>fnDict</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>ambig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="189" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="4808" bodyend="4897"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a1641b930420737442bb27e082999da69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString showFileDefMatches</definition>
        <argsstring>(const FileNameDict *fnDict, const char *n)</argsstring>
        <name>showFileDefMatches</name>
        <param>
          <type>const <ref refid="dd/d0f/class_file_name_dict" kindref="compound">FileNameDict</ref> *</type>
          <declname>fnDict</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="191" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="4901" bodyend="4926"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a826cc396ba482fb9ef1990104f9c1026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int guessSection</definition>
        <argsstring>(const char *name)</argsstring>
        <name>guessSection</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>try to determine if <emphasis>name</emphasis> is a source or a header file name by looking at the extension. A number of variations is allowed in both upper and lower case) If anyone knows or uses another extension please let me know :-) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="193" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="312" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ae320c88a8522836f00095d566529046f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isId</definition>
        <argsstring>(int c)</argsstring>
        <name>isId</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="196" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a0940360aa6d41fd2496603fc565e3996" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString removeRedundantWhiteSpace</definition>
        <argsstring>(const QCString &amp;s)</argsstring>
        <name>removeRedundantWhiteSpace</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="200" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="1646" bodyend="1825"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a89d636f3583f0ad3d67976b7f7d534c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString argListToString</definition>
        <argsstring>(ArgumentList *al, bool useCanonicalType=FALSE, bool showDefVals=TRUE)</argsstring>
        <name>argListToString</name>
        <param>
          <type><ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> *</type>
          <declname>al</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useCanonicalType</declname>
          <defval>FALSE</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>showDefVals</declname>
          <defval>TRUE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="202" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="2124" bodyend="2166"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a1f0fa95139f78a31647fa8cec8848bb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString tempArgListToString</definition>
        <argsstring>(ArgumentList *al)</argsstring>
        <name>tempArgListToString</name>
        <param>
          <type><ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> *</type>
          <declname>al</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="204" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="2168" bodyend="2206"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a5530a73bd518581ac62e4eee5bc2f6db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString generateMarker</definition>
        <argsstring>(int id)</argsstring>
        <name>generateMarker</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a place holder for a position in a list. Used for translators to be able to specify different elements orders depending on whether text flows from left to right or visa versa. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="206" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="264" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ae16e3cac41493f42d1cd283904b7062b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void writeExample</definition>
        <argsstring>(OutputList &amp;ol, ExampleSDict *el)</argsstring>
        <name>writeExample</name>
        <param>
          <type><ref refid="df/dc8/class_output_list" kindref="compound">OutputList</ref> &amp;</type>
          <declname>ol</declname>
        </param>
        <param>
          <type><ref refid="d0/d31/class_example_s_dict" kindref="compound">ExampleSDict</ref> *</type>
          <declname>el</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="208" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="2079" bodyend="2121"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a3b3bee35d0b539f857173e0a14ecbf63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString stripAnonymousNamespaceScope</definition>
        <argsstring>(const QCString &amp;s)</argsstring>
        <name>stripAnonymousNamespaceScope</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="210" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="217" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ac7a97256c349c1f4f1d18d7a7098c081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString stripFromPath</definition>
        <argsstring>(const QCString &amp;path)</argsstring>
        <name>stripFromPath</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>strip part of <emphasis>path</emphasis> if it matches one of the paths in the Config_getList(&quot;STRIP_FROM_PATH&quot;) list </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="212" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a3d790f4b8fa74cbafd6c4b34d4573093" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString stripFromIncludePath</definition>
        <argsstring>(const QCString &amp;path)</argsstring>
        <name>stripFromIncludePath</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>strip part of <emphasis>path</emphasis> if it matches one of the paths in the Config_getList(&quot;INCLUDE_PATH&quot;) list </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="214" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="303" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ae0c5a702c29f403e331441abfe289d5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rightScopeMatch</definition>
        <argsstring>(const QCString &amp;scope, const QCString &amp;name)</argsstring>
        <name>rightScopeMatch</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="216" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="1870" bodyend="1877"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a373928f3b61089f84cb4ee946474792f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool leftScopeMatch</definition>
        <argsstring>(const QCString &amp;scope, const QCString &amp;name)</argsstring>
        <name>leftScopeMatch</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="218" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="1879" bodyend="1886"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a967d9e508c8a67d803c071d6c4795f2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString substituteKeywords</definition>
        <argsstring>(const QCString &amp;s, const char *title, const char *projName, const char *projNum, const char *projBrief)</argsstring>
        <name>substituteKeywords</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>projName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>projNum</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>projBrief</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="221" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="4930" bodyend="4944"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ae052d7dcea3289dd204d8d425cf9d4c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getPrefixIndex</definition>
        <argsstring>(const QCString &amp;name)</argsstring>
        <name>getPrefixIndex</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the character index within <emphasis>name</emphasis> of the first prefix in Config_getList(&quot;IGNORE_PREFIX&quot;) that matches <emphasis>name</emphasis> at the left hand side, or zero if no match was found </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="223" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="4952" bodyend="4970"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1aa16e34240606f622b272b2b3e26d33e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString removeAnonymousScopes</definition>
        <argsstring>(const QCString &amp;s)</argsstring>
        <name>removeAnonymousScopes</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all anonymous scopes from string s Possible examples: <verbatim>   &quot;bla::@10::blep&quot;      =&gt; &quot;bla::blep&quot;
   &quot;bla::@10::@11::blep&quot; =&gt; &quot;bla::blep&quot;
   &quot;@10::blep&quot;           =&gt; &quot;blep&quot;
   &quot; @10::blep&quot;          =&gt; &quot;blep&quot;
   &quot;@9::@10::blep&quot;       =&gt; &quot;blep&quot;
   &quot;bla::@1&quot;             =&gt; &quot;bla&quot;
   &quot;bla::@1::@2&quot;         =&gt; &quot;bla&quot;
   &quot;bla @1&quot;              =&gt; &quot;bla&quot;
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="225" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="163" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ac42e0825ac5ca90c522d5f94eab62d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString replaceAnonymousScopes</definition>
        <argsstring>(const QCString &amp;s, const char *replacement=0)</argsstring>
        <name>replaceAnonymousScopes</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>replacement</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="227" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="190" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a85a1facc6e1b98c37768fb0f60f0c25e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initClassHierarchy</definition>
        <argsstring>(ClassSDict *cl)</argsstring>
        <name>initClassHierarchy</name>
        <param>
          <type><ref refid="d9/d3d/class_class_s_dict" kindref="compound">ClassSDict</ref> *</type>
          <declname>cl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="229" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="4991" bodyend="5000"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a20b745f614829c8c25c02d39a80d8f24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hasVisibleRoot</definition>
        <argsstring>(BaseClassList *bcl)</argsstring>
        <name>hasVisibleRoot</name>
        <param>
          <type><ref refid="d7/d46/class_base_class_list" kindref="compound">BaseClassList</ref> *</type>
          <declname>bcl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="231" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5004" bodyend="5017"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a19ebee64db945b01ff5b36cd2b7ed0ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int minClassDistance</definition>
        <argsstring>(const ClassDef *cd, const ClassDef *bcd, int level=0)</argsstring>
        <name>minClassDistance</name>
        <param>
          <type>const <ref refid="d1/dcf/class_class_def" kindref="compound">ClassDef</ref> *</type>
          <declname>cd</declname>
        </param>
        <param>
          <type>const <ref refid="d1/dcf/class_class_def" kindref="compound">ClassDef</ref> *</type>
          <declname>bcd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="233" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="2494" bodyend="2521"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a8417869fbab7dfb6f46870acb58867a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d49/types_8h_1a90e352184df58cd09455fe9996cd4ded" kindref="member">Protection</ref></type>
        <definition>Protection classInheritedProtectionLevel</definition>
        <argsstring>(ClassDef *cd, ClassDef *bcd, Protection prot=Public, int level=0)</argsstring>
        <name>classInheritedProtectionLevel</name>
        <param>
          <type><ref refid="d1/dcf/class_class_def" kindref="compound">ClassDef</ref> *</type>
          <declname>cd</declname>
        </param>
        <param>
          <type><ref refid="d1/dcf/class_class_def" kindref="compound">ClassDef</ref> *</type>
          <declname>bcd</declname>
        </param>
        <param>
          <type><ref refid="d9/d49/types_8h_1a90e352184df58cd09455fe9996cd4ded" kindref="member">Protection</ref></type>
          <declname>prot</declname>
          <defval>Public</defval>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="234" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="2523" bodyend="2553"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ae29291c2d23e9f2144d5eb28b582af02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString convertNameToFile</definition>
        <argsstring>(const char *name, bool allowDots=FALSE, bool allowUnderscore=FALSE)</argsstring>
        <name>convertNameToFile</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allowDots</declname>
          <defval>FALSE</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>allowUnderscore</declname>
          <defval>FALSE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function determines the file name on disk of an item given its name, which could be a class name with template arguments, so special characters need to be escaped. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="236" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5090" bodyend="5170"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a183a6b55ac831219c83e2a175d7a2e7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void extractNamespaceName</definition>
        <argsstring>(const QCString &amp;scopeName, QCString &amp;className, QCString &amp;namespaceName, bool allowEmptyClass=FALSE)</argsstring>
        <name>extractNamespaceName</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>scopeName</declname>
        </param>
        <param>
          <type>QCString &amp;</type>
          <declname>className</declname>
        </param>
        <param>
          <type>QCString &amp;</type>
          <declname>namespaceName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allowEmptyClass</declname>
          <defval>FALSE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Input is a scopeName, output is the scopename split into a namespace part (as large as possible) and a classname part. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="240" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5214" bodyend="5261"/>
        <references refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" compoundref="df/da1/definition_8h" startline="109" endline="109">Definition::name</references>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a1dc6b9f0a9cc58498da6f8d4ffe120c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString insertTemplateSpecifierInScope</definition>
        <argsstring>(const QCString &amp;scope, const QCString &amp;templ)</argsstring>
        <name>insertTemplateSpecifierInScope</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>templ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="242" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5263" bodyend="5290"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a34ffc62b74a8539f1e95cfd4719dbfdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString stripScope</definition>
        <argsstring>(const char *name)</argsstring>
        <name>stripScope</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="244" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5341" bodyend="5418"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ad55197b4dc49df25c446975478ec6b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString convertToHtml</definition>
        <argsstring>(const char *s, bool keepEntities=TRUE)</argsstring>
        <name>convertToHtml</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepEntities</declname>
          <defval>TRUE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts a string to a HTML-encoded string </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="246" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5446" bodyend="5490"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1acee8d851ab3a9590ac348bdb857aba26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString convertToXML</definition>
        <argsstring>(const char *s)</argsstring>
        <name>convertToXML</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts a string to an XML-encoded string </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="248" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5422" bodyend="5443"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a1d3351bfe41b27098aaba31876a54d00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString convertToJSString</definition>
        <argsstring>(const char *s)</argsstring>
        <name>convertToJSString</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="250" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5492" bodyend="5510"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ad8c71fbab856bc37ae54d2d369535b3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString getOverloadDocs</definition>
        <argsstring>()</argsstring>
        <name>getOverloadDocs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the standard string that is generated when the \overload command is used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="252" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5687" bodyend="5693"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ab9fb5edf9486a3ae8501418f2549a02a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addMembersToMemberGroup</definition>
        <argsstring>(MemberList *ml, MemberGroupSDict **ppMemberGroupSDict, Definition *context)</argsstring>
        <name>addMembersToMemberGroup</name>
        <param>
          <type><ref refid="dd/d13/class_member_list" kindref="compound">MemberList</ref> *</type>
          <declname>ml</declname>
        </param>
        <param>
          <type><ref refid="dc/d1e/class_member_group_s_dict" kindref="compound">MemberGroupSDict</ref> **</type>
          <declname>ppMemberGroupSDict</declname>
        </param>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="256" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5695" bodyend="5782"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a53d4b12851bc6508815f5770d89c3792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int extractClassNameFromType</definition>
        <argsstring>(const QCString &amp;type, int &amp;pos, QCString &amp;name, QCString &amp;templSpec, SrcLangExt=SrcLangExt_Unknown)</argsstring>
        <name>extractClassNameFromType</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>QCString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>QCString &amp;</type>
          <declname>templSpec</declname>
        </param>
        <param>
          <type><ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member">SrcLangExt</ref></type>
          <defname>lang</defname>
          <defval>SrcLangExt_Unknown</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extracts a (sub-)string from <emphasis>type</emphasis> starting at <emphasis>pos</emphasis> that could form a class. The index of the match is returned and the found class <emphasis>name</emphasis> and a template argument list <emphasis>templSpec</emphasis>. If -1 is returned there are no more matches. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="259" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5789" bodyend="5861"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1af51d62b1c1dd99d83c3acae8ef302f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString normalizeNonTemplateArgumentsInString</definition>
        <argsstring>(const QCString &amp;name, Definition *context, const ArgumentList *formalArgs)</argsstring>
        <name>normalizeNonTemplateArgumentsInString</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> *</type>
          <declname>formalArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="264" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5863" bodyend="5916"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a928208745b8d52e1ef9599e3bc5007cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString substituteTemplateArgumentsInString</definition>
        <argsstring>(const QCString &amp;name, ArgumentList *formalArgs, ArgumentList *actualArgs)</argsstring>
        <name>substituteTemplateArgumentsInString</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> *</type>
          <declname>formalArgs</declname>
        </param>
        <param>
          <type><ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> *</type>
          <declname>actualArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Substitutes any occurrence of a formal argument from argument list <emphasis>formalArgs</emphasis> in <emphasis>name</emphasis> by the corresponding actual argument in argument list <emphasis>actualArgs</emphasis>. The result after substitution is returned as a string. The argument <emphasis>name</emphasis> is used to prevent recursive substitution. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="269" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5925" bodyend="6024"/>
        <references refid="d1/dee/struct_argument_1a4fe1d9319dede52f7551f59297772efa" compoundref="df/d9b/arguments_8h" startline="69">Argument::defval</references>
        <references refid="d1/dee/struct_argument_1a334668ce5d1f650c804e69f1bc941a3b" compoundref="df/d9b/arguments_8h" startline="67">Argument::name</references>
        <references refid="d1/dee/struct_argument_1a1ad588d2b3cc71fe3f74c8272b4ec32e" compoundref="df/d9b/arguments_8h" startline="65">Argument::type</references>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a76a3a3e6464790c52fbdab33a7ee675f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> &gt; *</type>
        <definition>QList&lt;ArgumentList&gt;* copyArgumentLists</definition>
        <argsstring>(const QList&lt; ArgumentList &gt; *srcLists)</argsstring>
        <name>copyArgumentLists</name>
        <param>
          <type>const <ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> &gt; *</type>
          <declname>srcLists</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Makes a deep copy of the list of argument lists <emphasis>srcLists</emphasis>. Will allocate memory, that is owned by the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="271" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6029" bodyend="6041"/>
        <references refid="d7/df8/class_argument_list_1a57a064d6f3ba77dbc19ce8b768eb3909" compoundref="d4/dd4/arguments_8cpp" startline="20" endline="37">ArgumentList::deepCopy</references>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1aa78497e488f5e271031b67fbe5452221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString stripTemplateSpecifiersFromScope</definition>
        <argsstring>(const QCString &amp;fullName, bool parentOnly=TRUE, QCString *lastScopeStripped=0)</argsstring>
        <name>stripTemplateSpecifiersFromScope</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>fullName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>parentOnly</declname>
          <defval>TRUE</defval>
        </param>
        <param>
          <type>QCString *</type>
          <declname>lastScopeStripped</declname>
          <defname>pLastScopeStripped</defname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Strips template specifiers from scope <emphasis>fullName</emphasis>, except those that make up specialized classes. The switch <emphasis>parentOnly</emphasis> determines whether or not a template &quot;at the end&quot; of a scope should be considered, e.g. with <emphasis>parentOnly</emphasis> is <computeroutput>TRUE</computeroutput>, A&lt;T&gt;::B&lt;S&gt; will try to strip &lt;T&gt; and not &lt;S&gt;, while <emphasis>parentOnly</emphasis> is <computeroutput>FALSE</computeroutput> will strip both unless A&lt;T&gt; or B&lt;S&gt; are specialized template classes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="275" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6050" bodyend="6100"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1af87aff656b2b744623b7e34e3a5b8e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString resolveTypeDef</definition>
        <argsstring>(Definition *d, const QCString &amp;name, Definition **typedefContext=0)</argsstring>
        <name>resolveTypeDef</name>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> **</type>
          <declname>typedefContext</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="278" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="343" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a0baa021dae80e22593292b12ef2f721f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString mergeScopes</definition>
        <argsstring>(const QCString &amp;leftScope, const QCString &amp;rightScope)</argsstring>
        <name>mergeScopes</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>leftScope</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>rightScope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Merges two scope parts together. The parts may (partially) overlap. Example1: <computeroutput>A::B</computeroutput> and <computeroutput>B::C</computeroutput> will result in <computeroutput>A::B::C</computeroutput> <linebreak/>
 Example2: <computeroutput>A</computeroutput> and <computeroutput>B</computeroutput> will be <computeroutput>A::B</computeroutput> <linebreak/>
 Example3: <computeroutput>A::B</computeroutput> and B will be <computeroutput>A::B</computeroutput> </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>leftScope</parametername>
</parameternamelist>
<parameterdescription>
<para>the left hand part of the scope. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rightScope</parametername>
</parameternamelist>
<parameterdescription>
<para>the right hand part of the scope. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the merged scope. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="280" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6111" bodyend="6137"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1afd249e264b966d05a54b740e3d43ad6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getScopeFragment</definition>
        <argsstring>(const QCString &amp;s, int p, int *l)</argsstring>
        <name>getScopeFragment</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a fragment from scope <emphasis>s</emphasis>, starting at position <emphasis>p</emphasis>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>the scope name as a string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the start position (0 is the first). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>the resulting length of the fragment. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the location of the fragment, or -1 if non is found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="282" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6146" bodyend="6189"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ae019f2737460a8c3eaad5264f8fe57a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int filterCRLF</definition>
        <argsstring>(char *buf, int len)</argsstring>
        <name>filterCRLF</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>takes the <emphasis>buf</emphasis> of the given length <emphasis>len</emphasis> and converts CR LF (DOS) or CR (MAC) line ending to LF (Unix). Returns the length of the converted content (i.e. the same as <emphasis>len</emphasis> (Unix, MAC) or smaller (DOS). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="284" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="2240" bodyend="2262"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a7b5bb8645c09199a038c5f09a361ed75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addRefItem</definition>
        <argsstring>(const QList&lt; ListItemInfo &gt; *sli, const char *prefix, const char *key, const char *name, const char *title, const char *args)</argsstring>
        <name>addRefItem</name>
        <param>
          <type>const <ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d8/dd5/struct_list_item_info" kindref="compound">ListItemInfo</ref> &gt; *</type>
          <declname>sli</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="288" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6269" bodyend="6305"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a5c04f4a7e89b042e2d7bace7c0e6a2bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/d41/class_page_def" kindref="compound">PageDef</ref> *</type>
        <definition>PageDef* addRelatedPage</definition>
        <argsstring>(const char *name, const QCString &amp;ptitle, const QCString &amp;doc, QList&lt; SectionInfo &gt; *anchors, const char *fileName, int startLine, const QList&lt; ListItemInfo &gt; *sli, GroupDef *gd=0, TagInfo *tagInfo=0, SrcLangExt lang=SrcLangExt_Unknown)</argsstring>
        <name>addRelatedPage</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>ptitle</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d5/d5b/struct_section_info" kindref="compound">SectionInfo</ref> &gt; *</type>
          <declname>anchors</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startLine</declname>
        </param>
        <param>
          <type>const <ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d8/dd5/struct_list_item_info" kindref="compound">ListItemInfo</ref> &gt; *</type>
          <declname>sli</declname>
        </param>
        <param>
          <type><ref refid="d8/d09/class_group_def" kindref="compound">GroupDef</ref> *</type>
          <declname>gd</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="d3/dc3/struct_tag_info" kindref="compound">TagInfo</ref> *</type>
          <declname>tagInfo</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member">SrcLangExt</ref></type>
          <declname>lang</declname>
          <defval>SrcLangExt_Unknown</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="297" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6193" bodyend="6265"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1aea60db255909cc6f9b12bc8a58134c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString escapeCharsInString</definition>
        <argsstring>(const char *name, bool allowDots, bool allowUnderscore=FALSE)</argsstring>
        <name>escapeCharsInString</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allowDots</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allowUnderscore</declname>
          <defval>FALSE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="299" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5022" bodyend="5084"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ac348157ae6cff94177fad19f74285a0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addGroupListToTitle</definition>
        <argsstring>(OutputList &amp;ol, Definition *d)</argsstring>
        <name>addGroupListToTitle</name>
        <param>
          <type><ref refid="df/dc8/class_output_list" kindref="compound">OutputList</ref> &amp;</type>
          <declname>ol</declname>
        </param>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="301" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6307" bodyend="6327"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a25349d89b32eeceaa8d25d825597bc0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void filterLatexString</definition>
        <argsstring>(FTextStream &amp;t, const char *str, bool insideTabbing=FALSE, bool insidePre=FALSE, bool insideItem=FALSE)</argsstring>
        <name>filterLatexString</name>
        <param>
          <type><ref refid="dc/d3c/class_f_text_stream" kindref="compound">FTextStream</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>insideTabbing</declname>
          <defval>FALSE</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>insidePre</declname>
          <defval>FALSE</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>insideItem</declname>
          <defval>FALSE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="306" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6329" bodyend="6410"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a60c8b32cb8bd7c872962695ec685188b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString rtfFormatBmkStr</definition>
        <argsstring>(const char *name)</argsstring>
        <name>rtfFormatBmkStr</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="308" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6413" bodyend="6451"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1af20aa0206cec2bb8a7aa60f239f1874c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString linkToText</definition>
        <argsstring>(SrcLangExt lang, const char *link, bool isFileName)</argsstring>
        <name>linkToText</name>
        <param>
          <type><ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member">SrcLangExt</ref></type>
          <declname>lang</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>link</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="310" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="4511" bodyend="4533"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a6caaf6973fe475a05ad718e56f5ac571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString stripExtension</definition>
        <argsstring>(const char *fName)</argsstring>
        <name>stripExtension</name>
        <param>
          <type>const char *</type>
          <declname>fName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="312" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6453" bodyend="6461"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ada009b0ab6b42ff39d4fd82e36702281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void replaceNamespaceAliases</definition>
        <argsstring>(QCString &amp;scope, int i)</argsstring>
        <name>replaceNamespaceAliases</name>
        <param>
          <type>QCString &amp;</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="314" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6464" bodyend="6477"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a2a7c36bd6228f82d0c3869e12df93e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int isAccessibleFrom</definition>
        <argsstring>(Definition *scope, FileDef *fileScope, Definition *item)</argsstring>
        <name>isAccessibleFrom</name>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>fileScope</declname>
        </param>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="316" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="945" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a683de911662abcb10445d328c9ff6602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int isAccessibleFromWithExpScope</definition>
        <argsstring>(Definition *scope, FileDef *fileScope, Definition *item, const QCString &amp;explicitScopePart)</argsstring>
        <name>isAccessibleFromWithExpScope</name>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>fileScope</declname>
        </param>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>explicitScopePart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="319" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="1048" bodyend="1198"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a84e80a5dfaa2db05ad8b5d2e8d0f58f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int computeQualifiedIndex</definition>
        <argsstring>(const QCString &amp;name)</argsstring>
        <name>computeQualifiedIndex</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="321" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="1200" bodyend="1204"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a83849c25ca67f4a8fd4f2870736a9550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addDirPrefix</definition>
        <argsstring>(QCString &amp;fileName)</argsstring>
        <name>addDirPrefix</name>
        <param>
          <type>QCString &amp;</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="323"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a7f9d59487b4095a00a753a99657df2b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString relativePathToRoot</definition>
        <argsstring>(const char *name)</argsstring>
        <name>relativePathToRoot</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="325" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5172" bodyend="5192"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a6740f34b1a63d71b615ed15f3ccec73f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void createSubDirs</definition>
        <argsstring>(QDir &amp;d)</argsstring>
        <name>createSubDirs</name>
        <param>
          <type>QDir &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="327" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5194" bodyend="5209"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a6a5c62a160a8872a9a241fde1e002ea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString stripPath</definition>
        <argsstring>(const char *s)</argsstring>
        <name>stripPath</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="329" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6479" bodyend="6493"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1aea05ebaaec2477660122c5f1faeeb11e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool containsWord</definition>
        <argsstring>(const QCString &amp;s, const QCString &amp;word)</argsstring>
        <name>containsWord</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>TRUE</computeroutput> iff string <emphasis>s</emphasis> contains word <emphasis>w</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="331" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6496" bodyend="6506"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ae3f2bfd6dffce3eafb116177f8373323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool findAndRemoveWord</definition>
        <argsstring>(QCString &amp;s, const QCString &amp;word)</argsstring>
        <name>findAndRemoveWord</name>
        <param>
          <type>QCString &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="333" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6508" bodyend="6526"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ad0b372f3669056d6a88f41daeb3a3865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString stripLeadingAndTrailingEmptyLines</definition>
        <argsstring>(const QCString &amp;s, int &amp;docLine)</argsstring>
        <name>stripLeadingAndTrailingEmptyLines</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>docLine</declname>
        </param>
        <briefdescription>
<para>Special version of QCString::stripWhiteSpace() that only strips completely blank lines. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to be stripped </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>docLine</parametername>
</parameternamelist>
<parameterdescription>
<para>the line number corresponding to the start of the string. This will be adjusted based on the number of lines stripped from the start. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The stripped string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="335" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6536" bodyend="6570"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a80cfa2bf1a3df1528abab04a52b53c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool updateLanguageMapping</definition>
        <argsstring>(const QCString &amp;extension, const QCString &amp;parser)</argsstring>
        <name>updateLanguageMapping</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>extension</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>parser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="341" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6622" bodyend="6655"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a8f34b8445ef5e51a5517bdac43e109fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member">SrcLangExt</ref></type>
        <definition>SrcLangExt getLanguageFromFileName</definition>
        <argsstring>(const QCString fileName)</argsstring>
        <name>getLanguageFromFileName</name>
        <param>
          <type>const QCString</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="342" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6692" bodyend="6710"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a87fb21e07b359f00a4e3774a6eb736e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initDefaultExtensionMapping</definition>
        <argsstring>()</argsstring>
        <name>initDefaultExtensionMapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="343" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6657" bodyend="6690"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a9e614b356c99f09fedff100978b0d250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d09/class_member_def" kindref="compound">MemberDef</ref> *</type>
        <definition>MemberDef* getMemberFromSymbol</definition>
        <argsstring>(Definition *scope, FileDef *fileScope, const char *n)</argsstring>
        <name>getMemberFromSymbol</name>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>fileScope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="346" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6714" bodyend="6783"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a070878d94aead2c1ac26282044d96002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool checkIfTypedef</definition>
        <argsstring>(Definition *scope, FileDef *fileScope, const char *n)</argsstring>
        <name>checkIfTypedef</name>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>fileScope</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true iff the given name string appears to be a typedef in scope. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="347" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6786" bodyend="6794"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a68f1506abbd9c7495e2bf9dce51c6b20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d1/dcf/class_class_def" kindref="compound">ClassDef</ref> *</type>
        <definition>ClassDef* newResolveTypedef</definition>
        <argsstring>(FileDef *fileScope, MemberDef *md, MemberDef **pMemType=0, QCString *pTemplSpec=0, QCString *pResolvedType=0, ArgumentList *actTemplParams=0)</argsstring>
        <name>newResolveTypedef</name>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>fileScope</declname>
        </param>
        <param>
          <type><ref refid="da/d09/class_member_def" kindref="compound">MemberDef</ref> *</type>
          <declname>md</declname>
        </param>
        <param>
          <type><ref refid="da/d09/class_member_def" kindref="compound">MemberDef</ref> **</type>
          <declname>pMemType</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>QCString *</type>
          <declname>pTemplSpec</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>QCString *</type>
          <declname>pResolvedType</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> *</type>
          <declname>actTemplParams</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the class representing the value of the typedef represented by <emphasis>md</emphasis> within file <emphasis>fileScope</emphasis>.</para><para><ref refid="df/de9/struct_example" kindref="compound">Example</ref>: typedef A T; will return the class representing A if it is a class.</para><para><ref refid="df/de9/struct_example" kindref="compound">Example</ref>: typedef int T; will return 0, since &quot;int&quot; is not a class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="352" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="532" bodyend="658"/>
        <references refid="d5/dcc/class_definition_1ad399d0ee903e4102c479c2b099b0a051" compoundref="d3/dea/definition_8cpp" startline="1731" endline="1734">Definition::getDefFileName</references>
        <references refid="d1/dcf/class_class_def_1a1cf3d48d5fdfce179f11d463d379d5f9" compoundref="de/d89/classdef_8cpp" startline="4352" endline="4355">ClassDef::isTemplate</references>
        <references refid="da/d09/class_member_def_1a51e9fb5513286c69c8e3f95e968f7ba1" compoundref="d0/d72/memberdef_8cpp" startline="3786" endline="3802">MemberDef::qualifiedName</references>
        <references refid="d5/dcc/class_definition_1aacd9b72da80deb37974a18d2001ed715" compoundref="d3/dea/definition_8cpp" startline="1284" endline="1322">Definition::qualifiedName</references>
        <references refid="d1/dcf/class_class_def_1a3ba3cce6c993005b394e616267f31b3c" compoundref="de/d89/classdef_8cpp" startline="4327" endline="4330">ClassDef::templateArguments</references>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a89d1fb33b634f5c6dd86bbe5adba342d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString parseCommentAsText</definition>
        <argsstring>(const Definition *scope, const MemberDef *member, const QCString &amp;doc, const QCString &amp;fileName, int lineNr)</argsstring>
        <name>parseCommentAsText</name>
        <param>
          <type>const <ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>const <ref refid="da/d09/class_member_def" kindref="compound">MemberDef</ref> *</type>
          <declname>member</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lineNr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="354" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6851" bodyend="6892"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a45ec91133f956ee7c2212c8842965995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString transcodeCharacterStringToUTF8</definition>
        <argsstring>(const QCString &amp;input)</argsstring>
        <name>transcodeCharacterStringToUTF8</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="356" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="2330" bodyend="2368"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a11f1e398e07986ff1b2977f361e9eea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString recodeString</definition>
        <argsstring>(const QCString &amp;str, const char *fromEncoding, const char *toEncoding)</argsstring>
        <name>recodeString</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fromEncoding</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>toEncoding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="358"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ae73894d660bec634889b6b384ea0d103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString extractAliasArgs</definition>
        <argsstring>(const QCString &amp;args, int pos)</argsstring>
        <name>extractAliasArgs</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="360" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7099" bodyend="7127"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a5a09b86816d14f2eba51c1881515c1b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int countAliasArguments</definition>
        <argsstring>(const QCString argList)</argsstring>
        <name>countAliasArguments</name>
        <param>
          <type>const QCString</type>
          <declname>argList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="362" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7087" bodyend="7097"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1adfe765ed96224eb7635f41015d904a65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString resolveAliasCmd</definition>
        <argsstring>(const QCString aliasCmd)</argsstring>
        <name>resolveAliasCmd</name>
        <param>
          <type>const QCString</type>
          <declname>aliasCmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="366" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7129" bodyend="7137"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a71979ea7f1ea055bcf2c250946fb448b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString expandAlias</definition>
        <argsstring>(const QCString &amp;aliasName, const QCString &amp;aliasValue)</argsstring>
        <name>expandAlias</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>aliasName</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>aliasValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="367" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7139" bodyend="7150"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ab039c4fe39394abf6f1816972aef7805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void writeTypeConstraints</definition>
        <argsstring>(OutputList &amp;ol, Definition *d, ArgumentList *al)</argsstring>
        <name>writeTypeConstraints</name>
        <param>
          <type><ref refid="df/dc8/class_output_list" kindref="compound">OutputList</ref> &amp;</type>
          <declname>ol</declname>
        </param>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> *</type>
          <declname>al</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="369" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7152" bodyend="7171"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a1f47842c9ec880090ee422c4e4684126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString convertCharEntitiesToUTF8</definition>
        <argsstring>(const QCString &amp;s)</argsstring>
        <name>convertCharEntitiesToUTF8</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="371" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="5513" bodyend="5682"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1aac9ad7a212ab079ff3ac8860577a3132" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stackTrace</definition>
        <argsstring>()</argsstring>
        <name>stackTrace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="373" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7175" bodyend="7200"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a8431777070a52ef9bfe41e6607f86e5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool readInputFile</definition>
        <argsstring>(const char *fileName, BufStr &amp;inBuf)</argsstring>
        <name>readInputFile</name>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type><ref refid="d5/d64/class_buf_str" kindref="compound">BufStr</ref> &amp;</type>
          <declname>inBuf</declname>
        </param>
        <briefdescription>
<para>read a file name <emphasis>fileName</emphasis> and optionally filter and transcode it </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="375" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7240" bodyend="7329"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a747a6ad366ae4d5d42f0c551079d0bf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString filterTitle</definition>
        <argsstring>(const QCString &amp;title)</argsstring>
        <name>filterTitle</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="376" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7332" bodyend="7345"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ab0a2456090eff61e17727c1f4d4aee2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool patternMatch</definition>
        <argsstring>(const QFileInfo &amp;fi, const QStrList *patList)</argsstring>
        <name>patternMatch</name>
        <param>
          <type>const QFileInfo &amp;</type>
          <declname>fi</declname>
        </param>
        <param>
          <type>const QStrList *</type>
          <declname>patList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="378" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7351" bodyend="7379"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a6a89c2d2257aa4b8cbc36b855ea29fc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString externalLinkTarget</definition>
        <argsstring>()</argsstring>
        <name>externalLinkTarget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="380" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7411" bodyend="7415"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a06ba0c2593b3fd5f103151bd342e206f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString externalRef</definition>
        <argsstring>(const QCString &amp;relPath, const QCString &amp;ref, bool href)</argsstring>
        <name>externalRef</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>relPath</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>href</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="381" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7417" bodyend="7441"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a4de2a8efcd2cc728b57016fd0d9bde01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nextUtf8CharPosition</definition>
        <argsstring>(const QCString &amp;utf8Str, int len, int startPos)</argsstring>
        <name>nextUtf8CharPosition</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>utf8Str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>startPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="382" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6815" bodyend="6849"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ad7c938544f5ad1c9714118c9f54d130a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* writeUtf8Char</definition>
        <argsstring>(FTextStream &amp;t, const char *s)</argsstring>
        <name>writeUtf8Char</name>
        <param>
          <type><ref refid="dc/d3c/class_f_text_stream" kindref="compound">FTextStream</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="383" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="6796" bodyend="6813"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ab85eeb013280173f4ec086e10dd164ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void writeColoredImgData</definition>
        <argsstring>(const char *dir, ColoredImgDataItem data[])</argsstring>
        <name>writeColoredImgData</name>
        <param>
          <type>const char *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="da/d06/struct_colored_img_data_item" kindref="compound">ColoredImgDataItem</ref></type>
          <declname>data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Writes the intensity only bitmap representated by <emphasis>data</emphasis> as an image to directory <emphasis>dir</emphasis> using the colors defined by HTML_COLORSTYLE_*. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="395" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7446" bodyend="7469"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a6b67fcaeae3bead793c4c1ea68149424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString replaceColorMarkers</definition>
        <argsstring>(const char *str)</argsstring>
        <name>replaceColorMarkers</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Replaces any markers of the form ##AA in input string <emphasis>str</emphasis> by new markers of the form #AABBCC, where #AABBCC represents a valid color, based on the intensity represented by hex number AA and the current HTML_COLORSTYLE_* settings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="396" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7476" bodyend="7518"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ad35d4038b3882fdd09976d28f4a043bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool copyFile</definition>
        <argsstring>(const QCString &amp;src, const QCString &amp;dest)</argsstring>
        <name>copyFile</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Copies the contents of file with name <emphasis>src</emphasis> to the newly created file with name <emphasis>dest</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns TRUE if successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="398" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7523" bodyend="7550"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1ae46139270fc05ae4a1e0ff2c5bc69e3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString extractBlock</definition>
        <argsstring>(const QCString text, const QCString marker)</argsstring>
        <name>extractBlock</name>
        <param>
          <type>const QCString</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const QCString</type>
          <declname>marker</declname>
        </param>
        <briefdescription>
<para>Returns the section of text, in between a pair of markers. </para>        </briefdescription>
        <detaileddescription>
<para>Full lines are returned, excluding the lines on which the markers appear. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="399" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7555" bodyend="7589"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a3a775021310e25718452bfe250b2f999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString correctURL</definition>
        <argsstring>(const QCString &amp;url, const QCString &amp;relPath)</argsstring>
        <name>correctURL</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>url</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>relPath</declname>
        </param>
        <briefdescription>
<para>Corrects <ref refid="dd/d89/struct_u_r_l" kindref="compound">URL</ref> <emphasis>url</emphasis> according to the relative path <emphasis>relPath</emphasis>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the corrected <ref refid="dd/d89/struct_u_r_l" kindref="compound">URL</ref>. For absolute URLs no correction will be done. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="401" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7635" bodyend="7645"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1af5f3edcf561b2d3066e46238e4f9e72b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString processMarkup</definition>
        <argsstring>(const QCString &amp;s)</argsstring>
        <name>processMarkup</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="403"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a1e07db76938eb8a2bb8c79b2d0ec4980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool protectionLevelVisible</definition>
        <argsstring>(Protection prot)</argsstring>
        <name>protectionLevelVisible</name>
        <param>
          <type><ref refid="d9/d49/types_8h_1a90e352184df58cd09455fe9996cd4ded" kindref="member">Protection</ref></type>
          <declname>prot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="405" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7649" bodyend="7657"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1adac892ac420e7c1aab28a1d50d7b05fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString stripIndentation</definition>
        <argsstring>(const QCString &amp;s)</argsstring>
        <name>stripIndentation</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="407" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7661" bodyend="7725"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1a1ddb475583a333a435d7198cddc76935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fileVisibleInIndex</definition>
        <argsstring>(FileDef *fd, bool &amp;genSourceFile)</argsstring>
        <name>fileVisibleInIndex</name>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>genSourceFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="409" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7728" bodyend="7738"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3c/util_8h_1afcbcbddb21f68c44fa7e6a9c5b54795d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addDocCrossReference</definition>
        <argsstring>(MemberDef *src, MemberDef *dst)</argsstring>
        <name>addDocCrossReference</name>
        <param>
          <type><ref refid="da/d09/class_member_def" kindref="compound">MemberDef</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="da/d09/class_member_def" kindref="compound">MemberDef</ref> *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h" line="411" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.cpp" bodystart="7740" bodyend="7781"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A bunch of utility functions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>util.h,v<sp/>1.49<sp/>2001/03/19<sp/>19:27:42<sp/>root<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1997-2013<sp/>by<sp/>Dimitri<sp/>van<sp/>Heesch.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and<sp/>distribute<sp/>this<sp/>software<sp/>and<sp/>its</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>documentation<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>is<sp/>hereby<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>granted.<sp/>No<sp/>representations<sp/>are<sp/>made<sp/>about<sp/>the<sp/>suitability<sp/>of<sp/>this<sp/>software<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>for<sp/>any<sp/>purpose.<sp/>It<sp/>is<sp/>provided<sp/>&quot;as<sp/>is&quot;<sp/>without<sp/>express<sp/>or<sp/>implied<sp/>warranty.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Documents<sp/>produced<sp/>by<sp/>Doxygen<sp/>are<sp/>derivative<sp/>works<sp/>derived<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>input<sp/>used<sp/>in<sp/>their<sp/>production;<sp/>they<sp/>are<sp/>not<sp/>affected<sp/>by<sp/>this<sp/>license.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UTIL_H</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>UTIL_H</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor">#include<sp/>&lt;qlist.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/d49/types_8h" kindref="compound" tooltip="This file contains a number of basic enums and types.">types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/d13/class_member_list" kindref="compound" tooltip="A list of MemberDef objects.">MemberList</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d07/class_namespace_def" kindref="compound" tooltip="A model of a namespace symbol.">NamespaceDef</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/d0f/class_file_name_dict" kindref="compound" tooltip="Unsorted dictionary of FileName objects.">FileNameDict</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d2/d1a/class_output_doc_interface" kindref="compound" tooltip="Interface used for generating documentation.">OutputDocInterface</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d31/class_example_s_dict" kindref="compound" tooltip="A sorted dictionary of Example objects.">ExampleSDict</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d3d/class_class_s_dict" kindref="compound" tooltip="A sorted dictionary of ClassDef objects.">ClassSDict</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/d46/class_base_class_list" kindref="compound" tooltip="List of base classes.">BaseClassList</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d8/d09/class_group_def" kindref="compound" tooltip="A model of a group of symbols.">GroupDef</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/d8d/class_namespace_s_dict" kindref="compound" tooltip="A sorted dictionary of NamespaceDef objects.">NamespaceSDict</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/da3/class_class_list" kindref="compound" tooltip="A list of ClassDef objects.">ClassList</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dc/d1e/class_member_group_s_dict" kindref="compound" tooltip="A sorted dictionary of MemberGroup objects.">MemberGroupSDict</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d3/dc3/struct_tag_info" kindref="compound" tooltip="This struct is used to capture the tag file information for an Entry.">TagInfo</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d6/d70/class_member_name_info_s_dict" kindref="compound" tooltip="Sorted dictionary of MemberNameInfo objects.">MemberNameInfoSDict</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d8/dd5/struct_list_item_info" kindref="compound">ListItemInfo</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/d41/class_page_def" kindref="compound" tooltip="A model of a page symbol.">PageDef</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d5/d5b/struct_section_info" kindref="compound" tooltip="Class representing a section in a page.">SectionInfo</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QDir;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/d64/class_buf_str" kindref="compound" tooltip="Buffer used to store strings.">BufStr</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QFileInfo;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QStrList;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dc/d3c/class_f_text_stream" kindref="compound" tooltip="Simplified and optimized version of QTextStream.">FTextStream</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="d0/dcf/class_text_generator_intf" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/dcf/class_text_generator_intf" kindref="compound" tooltip="Abstract interface for a hyperlinked text fragment.">TextGeneratorIntf</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="d0/dcf/class_text_generator_intf" kindref="compound" tooltip="Abstract interface for a hyperlinked text fragment.">TextGeneratorIntf</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeBreak(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeLink(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*extRef,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*anchor,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="db/d2b/class_text_generator_o_l_impl" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="db/d2b/class_text_generator_o_l_impl" kindref="compound" tooltip="Implements TextGeneratorIntf for an OutputDocInterface stream.">TextGeneratorOLImpl</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d0/dcf/class_text_generator_intf" kindref="compound" tooltip="Abstract interface for a hyperlinked text fragment.">TextGeneratorIntf</ref></highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="db/d2b/class_text_generator_o_l_impl" kindref="compound" tooltip="Implements TextGeneratorIntf for an OutputDocInterface stream.">TextGeneratorOLImpl</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d2b/class_text_generator_o_l_impl" kindref="compound" tooltip="Implements TextGeneratorIntf for an OutputDocInterface stream.">TextGeneratorOLImpl</ref>(<ref refid="d2/d1a/class_output_doc_interface" kindref="compound" tooltip="Interface used for generating documentation.">OutputDocInterface</ref><sp/>&amp;od);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepSpaces)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeBreak(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeLink(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*extRef,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*anchor,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d1a/class_output_doc_interface" kindref="compound" tooltip="Interface used for generating documentation.">OutputDocInterface</ref><sp/>&amp;m_od;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">QCString<sp/>langToString(<ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member" tooltip="Language as given by extension.">SrcLangExt</ref><sp/>lang);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">QCString<sp/>getLanguageSpecificSeparator(<ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member" tooltip="Language as given by extension.">SrcLangExt</ref><sp/>lang,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>classScope=FALSE);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>linkifyText(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/dcf/class_text_generator_intf" kindref="compound" tooltip="Abstract interface for a hyperlinked text fragment.">TextGeneratorIntf</ref><sp/>&amp;ol,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*scope,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fileScope,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autoBreak=FALSE,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>external=TRUE,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepSpaces=FALSE,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indentLevel=0</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAnchors(<ref refid="dd/d13/class_member_list" kindref="compound" tooltip="A list of MemberDef objects.">MemberList</ref><sp/>*ml);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">QCString<sp/>fileToString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>filter=FALSE,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSourceCode=FALSE);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">QCString<sp/>dateToString(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>getDefs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;scopeName,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;memberName,<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*&amp;md,<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref><sp/>*&amp;cd,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*&amp;fd,<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d07/class_namespace_def" kindref="compound" tooltip="A model of a namespace symbol.">NamespaceDef</ref><sp/>*&amp;nd,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d09/class_group_def" kindref="compound" tooltip="A model of a group of symbols.">GroupDef</ref><sp/>*&amp;gd,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceEmptyScope=FALSE,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*currentFile=0,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkCV=FALSE,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*forceTagFile=0</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">QCString<sp/>getFileFilter(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSourceCode);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resolveRef(</highlight><highlight class="comment">/*<sp/>in<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scName,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inSeeBlock,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>out<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>**resContext,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>out<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/><sp/>**resMember,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lookForSpecializations<sp/>=<sp/>TRUE,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>*/</highlight><highlight class="normal"><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*currentFile<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkScope<sp/>=<sp/>FALSE</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resolveLink(</highlight><highlight class="comment">/*<sp/>in<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scName,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lr,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inSeeBlock,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>out<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>**resContext,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>out<sp/>*/</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;resAnchor</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//bool<sp/>generateRef(OutputDocInterface<sp/>&amp;od,const<sp/>char<sp/>*,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>char<sp/>*,bool<sp/>inSeeBlock,const<sp/>char<sp/>*<sp/>=0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>generateLink(<ref refid="d2/d1a/class_output_doc_interface" kindref="compound" tooltip="Interface used for generating documentation.">OutputDocInterface</ref><sp/>&amp;od,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inSeeBlock,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>generateFileRef(<ref refid="d2/d1a/class_output_doc_interface" kindref="compound" tooltip="Interface used for generating documentation.">OutputDocInterface</ref><sp/>&amp;od,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*linkTxt=0);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writePageRef(<ref refid="d2/d1a/class_output_doc_interface" kindref="compound" tooltip="Interface used for generating documentation.">OutputDocInterface</ref><sp/>&amp;od,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cn,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mn);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">QCString<sp/>getCanonicalTemplateSpec(<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*d,<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fs,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString&amp;<sp/>spec);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matchArguments2(<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*srcScope,<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*srcFileScope,<ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref><sp/>*srcAl,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*dstScope,<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*dstFileScope,<ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref><sp/>*dstAl,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkCV</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mergeArguments(<ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref><sp/>*,<ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref><sp/>*,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceNameOverwrite=FALSE);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">QCString<sp/>substituteClassNames(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;s);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">QCString<sp/>substitute(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">QCString<sp/>clearBlock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*begin,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">QCString<sp/>selectBlock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString&amp;<sp/>s,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;name,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>which);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">QCString<sp/>resolveDefines(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*n);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref><sp/>*getClass(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref><sp/>*getResolvedClass(<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*scope,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fileScope,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>**pTypeDef=0,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>*pTemplSpec=0,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mayBeUnlinkable=FALSE,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mayBeHidden=FALSE,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>*pResolvedType=0);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><ref refid="d0/d07/class_namespace_def" kindref="compound" tooltip="A model of a namespace symbol.">NamespaceDef</ref><sp/>*getResolvedNamespace(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*findFileDef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d0f/class_file_name_dict" kindref="compound" tooltip="Unsorted dictionary of FileName objects.">FileNameDict</ref><sp/>*fnDict,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*n,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;ambig);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">QCString<sp/>showFileDefMatches(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dd/d0f/class_file_name_dict" kindref="compound" tooltip="Unsorted dictionary of FileName objects.">FileNameDict</ref><sp/>*fnDict,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*n);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>guessSection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isId(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c==</highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal"><sp/>||<sp/>c&gt;=128<sp/>||<sp/>c&lt;0<sp/>||<sp/>isalnum(c);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">QCString<sp/>removeRedundantWhiteSpace(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;s);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">QCString<sp/>argListToString(<ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref><sp/>*al,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useCanonicalType=FALSE,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>showDefVals=TRUE);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">QCString<sp/>tempArgListToString(<ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref><sp/>*al);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">QCString<sp/>generateMarker(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeExample(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol,<ref refid="d0/d31/class_example_s_dict" kindref="compound" tooltip="A sorted dictionary of Example objects.">ExampleSDict</ref><sp/>*el);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">QCString<sp/>stripAnonymousNamespaceScope(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;s);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">QCString<sp/>stripFromPath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;path);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">QCString<sp/>stripFromIncludePath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;path);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rightScopeMatch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;scope,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;name);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>leftScopeMatch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;scope,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;name);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">QCString<sp/>substituteKeywords(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;s,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*projName,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*projNum,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*projBrief);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getPrefixIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;name);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">QCString<sp/>removeAnonymousScopes(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;s);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">QCString<sp/>replaceAnonymousScopes(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;s,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*replacement=0);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initClassHierarchy(<ref refid="d9/d3d/class_class_s_dict" kindref="compound" tooltip="A sorted dictionary of ClassDef objects.">ClassSDict</ref><sp/>*cl);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasVisibleRoot(<ref refid="d7/d46/class_base_class_list" kindref="compound" tooltip="List of base classes.">BaseClassList</ref><sp/>*bcl);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minClassDistance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref><sp/>*cd,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref><sp/>*bcd,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level=0);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><ref refid="d9/d49/types_8h_1a90e352184df58cd09455fe9996cd4ded" kindref="member" tooltip="Protection level of members.">Protection</ref><sp/>classInheritedProtectionLevel(<ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref><sp/>*cd,<ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref><sp/>*bcd,<ref refid="d9/d49/types_8h_1a90e352184df58cd09455fe9996cd4ded" kindref="member" tooltip="Protection level of members.">Protection</ref><sp/>prot=Public,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level=0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">QCString<sp/>convertNameToFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowDots=FALSE,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowUnderscore=FALSE);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>extractNamespaceName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;scopeName,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>&amp;className,QCString<sp/>&amp;namespaceName,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowEmptyClass=FALSE);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">QCString<sp/>insertTemplateSpecifierInScope(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;scope,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;templ);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">QCString<sp/>stripScope(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">QCString<sp/>convertToHtml(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepEntities=TRUE);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">QCString<sp/>convertToXML(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">QCString<sp/>convertToJSString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">QCString<sp/>getOverloadDocs();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addMembersToMemberGroup(</highlight><highlight class="comment">/*<sp/>in<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d13/class_member_list" kindref="compound" tooltip="A list of MemberDef objects.">MemberList</ref><sp/>*ml,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in,out<sp/>*/</highlight><highlight class="normal"><sp/><ref refid="dc/d1e/class_member_group_s_dict" kindref="compound" tooltip="A sorted dictionary of MemberGroup objects.">MemberGroupSDict</ref><sp/>**ppMemberGroupSDict,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*context);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extractClassNameFromType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;type,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;pos,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>&amp;name,QCString<sp/>&amp;templSpec,<ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member" tooltip="Language as given by extension.">SrcLangExt</ref>=SrcLangExt_Unknown);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">QCString<sp/>normalizeNonTemplateArgumentsInString(</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;name,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*context,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref><sp/>*formalArgs);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">QCString<sp/>substituteTemplateArgumentsInString(</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;name,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref><sp/>*formalArgs,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref><sp/>*actualArgs);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;ArgumentList&gt;</ref><sp/>*copyArgumentLists(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;ArgumentList&gt;</ref><sp/>*srcLists);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">QCString<sp/>stripTemplateSpecifiersFromScope(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;fullName,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parentOnly=TRUE,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>*lastScopeStripped=0);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">QCString<sp/>resolveTypeDef(<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*d,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;name,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>**typedefContext=0);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">QCString<sp/>mergeScopes(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;leftScope,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;rightScope);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getScopeFragment(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;s,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*l);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filterCRLF(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addRefItem(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;ListItemInfo&gt;</ref><sp/>*sli,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prefix,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*args);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><ref refid="dd/d41/class_page_def" kindref="compound" tooltip="A model of a page symbol.">PageDef</ref><sp/>*addRelatedPage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;ptitle,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;doc,<ref refid="db/daa/class_q_list" kindref="compound">QList&lt;SectionInfo&gt;</ref><sp/>*anchors,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startLine,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;ListItemInfo&gt;</ref><sp/>*sli,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d09/class_group_def" kindref="compound" tooltip="A model of a group of symbols.">GroupDef</ref><sp/>*gd=0,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/dc3/struct_tag_info" kindref="compound" tooltip="This struct is used to capture the tag file information for an Entry.">TagInfo</ref><sp/>*tagInfo=0,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member" tooltip="Language as given by extension.">SrcLangExt</ref><sp/>lang=SrcLangExt_Unknown</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">QCString<sp/>escapeCharsInString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowDots,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowUnderscore=FALSE);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addGroupListToTitle(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol,<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*d);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>filterLatexString(<ref refid="dc/d3c/class_f_text_stream" kindref="compound" tooltip="Simplified and optimized version of QTextStream.">FTextStream</ref><sp/>&amp;t,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>insideTabbing=FALSE,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>insidePre=FALSE,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>insideItem=FALSE);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">QCString<sp/>rtfFormatBmkStr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">QCString<sp/>linkToText(<ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member" tooltip="Language as given by extension.">SrcLangExt</ref><sp/>lang,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*link,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFileName);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">QCString<sp/>stripExtension(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fName);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>replaceNamespaceAliases(QCString<sp/>&amp;scope,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isAccessibleFrom(<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*scope,<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fileScope,<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*item);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isAccessibleFromWithExpScope(<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*scope,<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fileScope,<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*item,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;explicitScopePart);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>computeQualifiedIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;name);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addDirPrefix(QCString<sp/>&amp;fileName);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">QCString<sp/>relativePathToRoot(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>createSubDirs(QDir<sp/>&amp;d);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">QCString<sp/>stripPath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>containsWord(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;s,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;word);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>findAndRemoveWord(QCString<sp/>&amp;s,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;word);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">QCString<sp/>stripLeadingAndTrailingEmptyLines(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;s,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;docLine);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>stringToSearchIndex(const<sp/>QCString<sp/>&amp;docUrlBase,const<sp/>QCString<sp/>&amp;title,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>QCString<sp/>&amp;str,<sp/>bool<sp/>priority=FALSE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>QCString<sp/>&amp;anchor=&quot;&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>updateLanguageMapping(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;extension,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;parser);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member" tooltip="Language as given by extension.">SrcLangExt</ref><sp/>getLanguageFromFileName(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>fileName);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initDefaultExtensionMapping();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*getMemberFromSymbol(<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*scope,<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fileScope,<sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*n);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkIfTypedef(<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*scope,<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fileScope,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*n);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref><sp/>*newResolveTypedef(<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fileScope,<ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*md,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>**pMemType=0,QCString<sp/>*pTemplSpec=0,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>*pResolvedType=0,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref><sp/>*actTemplParams=0);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal">QCString<sp/>parseCommentAsText(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*scope,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*member,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;doc,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;fileName,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineNr);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">QCString<sp/>transcodeCharacterStringToUTF8(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;input);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal">QCString<sp/>recodeString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;str,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fromEncoding,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*toEncoding);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal">QCString<sp/>extractAliasArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;args,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>countAliasArguments(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>argList);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//QCString<sp/>replaceAliasArguments(const<sp/>QCString<sp/>&amp;aliasValue,const<sp/>QCString<sp/>&amp;argList);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal">QCString<sp/>resolveAliasCmd(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>aliasCmd);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">QCString<sp/>expandAlias(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;aliasName,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;aliasValue);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeTypeConstraints(<ref refid="df/dc8/class_output_list" kindref="compound" tooltip="Class representing a list of output generators that are written to in parallel.">OutputList</ref><sp/>&amp;ol,<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*d,<ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref><sp/>*al);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">QCString<sp/>convertCharEntitiesToUTF8(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;s);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stackTrace();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>readInputFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName,<ref refid="d5/d64/class_buf_str" kindref="compound" tooltip="Buffer used to store strings.">BufStr</ref><sp/>&amp;inBuf);</highlight></codeline>
<codeline lineno="376"><highlight class="normal">QCString<sp/>filterTitle(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;title);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>patternMatch(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFileInfo<sp/>&amp;fi,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStrList<sp/>*patList);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">QCString<sp/>externalLinkTarget();</highlight></codeline>
<codeline lineno="381"><highlight class="normal">QCString<sp/>externalRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;relPath,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;ref,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>href);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nextUtf8CharPosition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;utf8Str,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startPos);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*writeUtf8Char(<ref refid="dc/d3c/class_f_text_stream" kindref="compound" tooltip="Simplified and optimized version of QTextStream.">FTextStream</ref><sp/>&amp;t,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="da/d06/struct_colored_img_data_item" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="da/d06/struct_colored_img_data_item" kindref="compound" tooltip="Data associated with a HSV colored image.">ColoredImgDataItem</ref></highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>height;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*content;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*alpha;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeColoredImgData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dir,<ref refid="da/d06/struct_colored_img_data_item" kindref="compound" tooltip="Data associated with a HSV colored image.">ColoredImgDataItem</ref><sp/>data[]);</highlight></codeline>
<codeline lineno="396"><highlight class="normal">QCString<sp/>replaceColorMarkers(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copyFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;src,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;dest);</highlight></codeline>
<codeline lineno="399"><highlight class="normal">QCString<sp/>extractBlock(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>text,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>marker);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal">QCString<sp/>correctURL(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;url,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;relPath);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal">QCString<sp/>processMarkup(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;s);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>protectionLevelVisible(<ref refid="d9/d49/types_8h_1a90e352184df58cd09455fe9996cd4ded" kindref="member" tooltip="Protection level of members.">Protection</ref><sp/>prot);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal">QCString<sp/>stripIndentation(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;s);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fileVisibleInIndex(<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fd,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;genSourceFile);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addDocCrossReference(<ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*src,<ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*dst);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/util.h"/>
  </compounddef>
</doxygen>
