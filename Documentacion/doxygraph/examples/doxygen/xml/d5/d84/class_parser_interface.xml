<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="d5/d84/class_parser_interface" kind="class" prot="public" abstract="yes">
    <compoundname>ParserInterface</compoundname>
    <derivedcompoundref refid="d0/d32/class_c_language_scanner" prot="public" virt="non-virtual">CLanguageScanner</derivedcompoundref>
    <derivedcompoundref refid="d7/d18/class_d_bus_x_m_l_scanner" prot="public" virt="non-virtual">DBusXMLScanner</derivedcompoundref>
    <derivedcompoundref refid="df/de4/class_fortran_language_scanner" prot="public" virt="non-virtual">FortranLanguageScanner</derivedcompoundref>
    <derivedcompoundref refid="d9/d8f/class_markdown_file_parser" prot="public" virt="non-virtual">MarkdownFileParser</derivedcompoundref>
    <derivedcompoundref refid="de/d7e/class_python_language_scanner" prot="public" virt="non-virtual">PythonLanguageScanner</derivedcompoundref>
    <derivedcompoundref refid="da/de4/class_tcl_language_scanner" prot="public" virt="non-virtual">TclLanguageScanner</derivedcompoundref>
    <derivedcompoundref refid="df/def/class_v_h_d_l_language_scanner" prot="public" virt="non-virtual">VHDLLanguageScanner</derivedcompoundref>
    <includes refid="da/d55/parserintf_8h" local="no">parserintf.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d5/d84/class_parser_interface_1ac468c7abd84cd5ab1263555d3f95f1ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ParserInterface::~ParserInterface</definition>
        <argsstring>()</argsstring>
        <name>~ParserInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/parserintf.h" line="39" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/parserintf.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="d5/d84/class_parser_interface_1a72478f87ead5fde10d7d6bbe32a73024" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ParserInterface::startTranslationUnit</definition>
        <argsstring>(const char *fileName)=0</argsstring>
        <name>startTranslationUnit</name>
        <reimplementedby refid="d9/d8f/class_markdown_file_parser_1a82d0d8fad0f6772a9862eb3d9190127d">startTranslationUnit</reimplementedby>
        <reimplementedby refid="df/de4/class_fortran_language_scanner_1a571f9440b581ce6fdc1b15c08427932d">startTranslationUnit</reimplementedby>
        <reimplementedby refid="da/de4/class_tcl_language_scanner_1a60ddc698e1b483f71f4ce4ca4bffb512">startTranslationUnit</reimplementedby>
        <reimplementedby refid="d7/d18/class_d_bus_x_m_l_scanner_1ad608a88d9ebad32ec67f101063545e0a">startTranslationUnit</reimplementedby>
        <reimplementedby refid="d0/d32/class_c_language_scanner_1a8b667ac29ed52d3374f0df39a63d4c73">startTranslationUnit</reimplementedby>
        <reimplementedby refid="de/d7e/class_python_language_scanner_1ae67929ac5a3d38fc925157f7a5f43497">startTranslationUnit</reimplementedby>
        <reimplementedby refid="df/def/class_v_h_d_l_language_scanner_1a57e38f82bcb0ab8af7d6dabe131ad394">startTranslationUnit</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
<para>Starts processing a translation unit (source files + headers). </para>        </briefdescription>
        <detaileddescription>
<para>After this call <ref refid="d5/d84/class_parser_interface_1a09ced377e619d40b7339187bad88341e" kindref="member">parseInput()</ref> is called with sameTranslationUnit set to FALSE. If <ref refid="d5/d84/class_parser_interface_1a09ced377e619d40b7339187bad88341e" kindref="member">parseInput()</ref> returns additional include files, these are also processed using <ref refid="d5/d84/class_parser_interface_1a09ced377e619d40b7339187bad88341e" kindref="member">parseInput()</ref> with sameTranslationUnit set to TRUE. After that <ref refid="d5/d84/class_parser_interface_1af3acd64c6a33852e2e46e7288eb9c9cf" kindref="member">finishTranslationUnit()</ref> is called. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/parserintf.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="d5/d84/class_parser_interface_1af3acd64c6a33852e2e46e7288eb9c9cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ParserInterface::finishTranslationUnit</definition>
        <argsstring>()=0</argsstring>
        <name>finishTranslationUnit</name>
        <reimplementedby refid="d9/d8f/class_markdown_file_parser_1adaf4aeedc27abe4dd8cc4a58d59b298f">finishTranslationUnit</reimplementedby>
        <reimplementedby refid="df/de4/class_fortran_language_scanner_1abf5a872f1e3bd81f5a285e9586869def">finishTranslationUnit</reimplementedby>
        <reimplementedby refid="da/de4/class_tcl_language_scanner_1a187804b0bf0a0043bad0f1a752224909">finishTranslationUnit</reimplementedby>
        <reimplementedby refid="d7/d18/class_d_bus_x_m_l_scanner_1a6d62975c5d14533bfa5b6853f707d9d2">finishTranslationUnit</reimplementedby>
        <reimplementedby refid="d0/d32/class_c_language_scanner_1a03f5004bda27f5c73f3b9d74d9064b99">finishTranslationUnit</reimplementedby>
        <reimplementedby refid="de/d7e/class_python_language_scanner_1a97ca623055615c143e63ea98be819f86">finishTranslationUnit</reimplementedby>
        <reimplementedby refid="df/def/class_v_h_d_l_language_scanner_1a1c08cc94a1cd79fdaf8a102935089445">finishTranslationUnit</reimplementedby>
        <briefdescription>
<para>Called after all files in a translation unit have been processed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/parserintf.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="d5/d84/class_parser_interface_1a09ced377e619d40b7339187bad88341e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ParserInterface::parseInput</definition>
        <argsstring>(const char *fileName, const char *fileBuf, Entry *root, bool sameTranslationUnit, QStrList &amp;filesInSameTranslationUnit)=0</argsstring>
        <name>parseInput</name>
        <reimplementedby refid="d9/d8f/class_markdown_file_parser_1a56e4994924ce8ac7710e2a1da0f98807">parseInput</reimplementedby>
        <reimplementedby refid="df/de4/class_fortran_language_scanner_1a6f2e7fa4a4d46ae48289cd135f9f495d">parseInput</reimplementedby>
        <reimplementedby refid="da/de4/class_tcl_language_scanner_1a0c1673d0753d4fa415de90aa7d875e0e">parseInput</reimplementedby>
        <reimplementedby refid="d7/d18/class_d_bus_x_m_l_scanner_1ac4f9d494c86e06b45b08326d008755a8">parseInput</reimplementedby>
        <reimplementedby refid="d0/d32/class_c_language_scanner_1a0a92c2f77d7b78987e8dad149a2f4171">parseInput</reimplementedby>
        <reimplementedby refid="de/d7e/class_python_language_scanner_1a6848c585fe2a19cd36ed34540dc3fdce">parseInput</reimplementedby>
        <reimplementedby refid="df/def/class_v_h_d_l_language_scanner_1a604cae09257525fbca32c10ffeb6e961">parseInput</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fileBuf</declname>
        </param>
        <param>
          <type><ref refid="d4/dd7/class_entry" kindref="compound">Entry</ref> *</type>
          <declname>root</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sameTranslationUnit</declname>
        </param>
        <param>
          <type>QStrList &amp;</type>
          <declname>filesInSameTranslationUnit</declname>
        </param>
        <briefdescription>
<para>Parses a single input file with the goal to build an <ref refid="d4/dd7/class_entry" kindref="compound">Entry</ref> tree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>The full name of the file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fileBuf</parametername>
</parameternamelist>
<parameterdescription>
<para>The contents of the file (zero terminated). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">root</parametername>
</parameternamelist>
<parameterdescription>
<para>The root of the tree of <ref refid="d4/dd7/class_entry" kindref="compound">Entry</ref> *nodes representing the information extracted from the file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sameTranslationUnit</parametername>
</parameternamelist>
<parameterdescription>
<para>TRUE if this file was found in the same translation unit (in the filesInSameTranslationUnit list returned for another file). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">filesInSameTranslationUnit</parametername>
</parameternamelist>
<parameterdescription>
<para>other files expected to be found in the same translation unit (used for libclang) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/parserintf.h" line="70"/>
      </memberdef>
      <memberdef kind="function" id="d5/d84/class_parser_interface_1a36c669b17b64a6e3847f27d70a5398d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool ParserInterface::needsPreprocessing</definition>
        <argsstring>(const QCString &amp;extension)=0</argsstring>
        <name>needsPreprocessing</name>
        <reimplementedby refid="d9/d8f/class_markdown_file_parser_1ae53b811156b426b03f4ea8f634141133">needsPreprocessing</reimplementedby>
        <reimplementedby refid="df/de4/class_fortran_language_scanner_1a94620ec6b6cf583dccd2544671e9e578">needsPreprocessing</reimplementedby>
        <reimplementedby refid="da/de4/class_tcl_language_scanner_1ab3a4ec9c04dbcf8bb75cd1552c774f5e">needsPreprocessing</reimplementedby>
        <reimplementedby refid="d0/d32/class_c_language_scanner_1a88315d1d6591098e284bd2b91d4ba233">needsPreprocessing</reimplementedby>
        <reimplementedby refid="d7/d18/class_d_bus_x_m_l_scanner_1a3487fd72a9048ff238daf3a0d0ccd87b">needsPreprocessing</reimplementedby>
        <reimplementedby refid="de/d7e/class_python_language_scanner_1a7c6ce0a95e477374182374a9f5bb2e2f">needsPreprocessing</reimplementedby>
        <reimplementedby refid="df/def/class_v_h_d_l_language_scanner_1ab343e9269e4e5b274a87b270452595e0">needsPreprocessing</reimplementedby>
        <param>
          <type>const QCString &amp;</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
<para>Returns TRUE if the language identified by <emphasis>extension</emphasis> needs the C preprocessor to be run before feed the result to the input parser. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d5/d84/class_parser_interface_1a09ced377e619d40b7339187bad88341e" kindref="member">parseInput()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/parserintf.h" line="77"/>
      </memberdef>
      <memberdef kind="function" id="d5/d84/class_parser_interface_1a4ab2f3a321c3a1d90a2f1245d204dada" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ParserInterface::parseCode</definition>
        <argsstring>(CodeOutputInterface &amp;codeOutIntf, const char *scopeName, const QCString &amp;input, bool isExampleBlock, const char *exampleName=0, FileDef *fileDef=0, int startLine=-1, int endLine=-1, bool inlineFragment=FALSE, MemberDef *memberDef=0, bool showLineNumbers=TRUE, Definition *searchCtx=0)=0</argsstring>
        <name>parseCode</name>
        <reimplementedby refid="d9/d8f/class_markdown_file_parser_1a1a4b6de88fb9230bfa7800d146c9d280">parseCode</reimplementedby>
        <reimplementedby refid="df/de4/class_fortran_language_scanner_1a402b519f5e345956ecd058c964bcabc9">parseCode</reimplementedby>
        <reimplementedby refid="da/de4/class_tcl_language_scanner_1a80fd5dee6f57d8f5a38cb28cbdeb1de7">parseCode</reimplementedby>
        <reimplementedby refid="d0/d32/class_c_language_scanner_1adc960e36d4fc1e37b58f87261a41c605">parseCode</reimplementedby>
        <reimplementedby refid="d7/d18/class_d_bus_x_m_l_scanner_1ad47d57025bbb357e2d4e4a651c89ad7e">parseCode</reimplementedby>
        <reimplementedby refid="de/d7e/class_python_language_scanner_1ac4240203d40515f9706b4dc15883db82">parseCode</reimplementedby>
        <reimplementedby refid="df/def/class_v_h_d_l_language_scanner_1a511a33d6c500c6e687c02d616275cd8f">parseCode</reimplementedby>
        <param>
          <type><ref refid="d5/d9c/class_code_output_interface" kindref="compound">CodeOutputInterface</ref> &amp;</type>
          <declname>codeOutIntf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scopeName</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isExampleBlock</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>exampleName</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="de/db0/class_file_def" kindref="compound">FileDef</ref> *</type>
          <declname>fileDef</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>startLine</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>endLine</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>inlineFragment</declname>
          <defval>FALSE</defval>
        </param>
        <param>
          <type><ref refid="da/d09/class_member_def" kindref="compound">MemberDef</ref> *</type>
          <declname>memberDef</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>showLineNumbers</declname>
          <defval>TRUE</defval>
        </param>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>searchCtx</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Parses a source file or fragment with the goal to produce highlighted and cross-referenced output. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">codeOutIntf</parametername>
</parameternamelist>
<parameterdescription>
<para>Abstract interface for writing the result. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scopeName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of scope to which the code belongs. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input</parametername>
</parameternamelist>
<parameterdescription>
<para>Actual code in the form of a string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">isExampleBlock</parametername>
</parameternamelist>
<parameterdescription>
<para>TRUE iff the code is part of an example. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">exampleName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the example. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fileDef</parametername>
</parameternamelist>
<parameterdescription>
<para>File definition to which the code is associated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">startLine</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting line in case of a code fragment. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">endLine</parametername>
</parameternamelist>
<parameterdescription>
<para>Ending line of the code fragment. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inlineFragment</parametername>
</parameternamelist>
<parameterdescription>
<para>Code fragment that is to be shown inline as part of the documentation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">memberDef</parametername>
</parameternamelist>
<parameterdescription>
<para>Member definition to which the code is associated (non null in case of an inline fragment for a member). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">showLineNumbers</parametername>
</parameternamelist>
<parameterdescription>
<para>if set to TRUE and also fileDef is not 0, line numbers will be added to the source fragement </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">searchCtx</parametername>
</parameternamelist>
<parameterdescription>
<para>context under which search data has to be stored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/parserintf.h" line="111"/>
        <referencedby refid="d9/d8f/class_markdown_file_parser_1a1a4b6de88fb9230bfa7800d146c9d280" compoundref="de/d04/markdown_8cpp" startline="2341" endline="2362">MarkdownFileParser::parseCode</referencedby>
        <referencedby refid="da/d09/class_member_def_1a480c55edf3118c9e657d3aa4eecf841b" compoundref="d0/d72/memberdef_8cpp" startline="2362" endline="2844">MemberDef::writeDocumentation</referencedby>
        <referencedby refid="d5/dcc/class_definition_1ad5ad17068a22165040e5b256c564c603" compoundref="d3/dea/definition_8cpp" startline="1019" endline="1060">Definition::writeInlineCode</referencedby>
        <referencedby refid="de/db0/class_file_def_1a5ed9987b075539aa61654cc55d3bac28" compoundref="d6/ddc/filedef_8cpp" startline="804" endline="889">FileDef::writeSource</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d84/class_parser_interface_1aee4fccd1865a4e8a6b9f2896811104ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ParserInterface::resetCodeParserState</definition>
        <argsstring>()=0</argsstring>
        <name>resetCodeParserState</name>
        <reimplementedby refid="d9/d8f/class_markdown_file_parser_1a78b5337fc2b6a6dd1ee5ce104005e566">resetCodeParserState</reimplementedby>
        <reimplementedby refid="df/de4/class_fortran_language_scanner_1a431c7d79af2cd6b93081f3db7cdaf1c0">resetCodeParserState</reimplementedby>
        <reimplementedby refid="da/de4/class_tcl_language_scanner_1abb80856bb640644a4eaeeac91a427b45">resetCodeParserState</reimplementedby>
        <reimplementedby refid="d0/d32/class_c_language_scanner_1a2d569ccde3f87597741b3cde8efb3af5">resetCodeParserState</reimplementedby>
        <reimplementedby refid="d7/d18/class_d_bus_x_m_l_scanner_1a1a70fe639d3d1da0d29afde8cd084e88">resetCodeParserState</reimplementedby>
        <reimplementedby refid="de/d7e/class_python_language_scanner_1a7d8f587a1753e7d04dee2b5ddbc6c1df">resetCodeParserState</reimplementedby>
        <reimplementedby refid="df/def/class_v_h_d_l_language_scanner_1a67461c7de314e7f414fb70d5735727c3">resetCodeParserState</reimplementedby>
        <briefdescription>
<para>Resets the state of the code parser. </para>        </briefdescription>
        <detaileddescription>
<para>Since multiple code fragments can together form a single example, an explicit function is used to reset the code parser state. <simplesect kind="see"><para><ref refid="d5/d84/class_parser_interface_1a4ab2f3a321c3a1d90a2f1245d204dada" kindref="member">parseCode()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/parserintf.h" line="118"/>
        <referencedby refid="d9/d8f/class_markdown_file_parser_1a78b5337fc2b6a6dd1ee5ce104005e566" compoundref="de/d04/markdown_8cpp" startline="2364" endline="2371">MarkdownFileParser::resetCodeParserState</referencedby>
        <referencedby refid="da/d09/class_member_def_1a480c55edf3118c9e657d3aa4eecf841b" compoundref="d0/d72/memberdef_8cpp" startline="2362" endline="2844">MemberDef::writeDocumentation</referencedby>
        <referencedby refid="d5/dcc/class_definition_1ad5ad17068a22165040e5b256c564c603" compoundref="d3/dea/definition_8cpp" startline="1019" endline="1060">Definition::writeInlineCode</referencedby>
        <referencedby refid="de/db0/class_file_def_1a5ed9987b075539aa61654cc55d3bac28" compoundref="d6/ddc/filedef_8cpp" startline="804" endline="889">FileDef::writeSource</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d84/class_parser_interface_1a5ebf0f524a296845befa22c85a4cc80b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ParserInterface::parsePrototype</definition>
        <argsstring>(const char *text)=0</argsstring>
        <name>parsePrototype</name>
        <reimplementedby refid="d9/d8f/class_markdown_file_parser_1a5579fefcfe5512e79abfe55fd508fc95">parsePrototype</reimplementedby>
        <reimplementedby refid="df/de4/class_fortran_language_scanner_1a8ae8487e02f24ee625ad804b9bda78b3">parsePrototype</reimplementedby>
        <reimplementedby refid="da/de4/class_tcl_language_scanner_1ad39889d754478f3bd641c92c3fdb2247">parsePrototype</reimplementedby>
        <reimplementedby refid="d0/d32/class_c_language_scanner_1afabfbfe6ca101e1d0d02fed9d197cad1">parsePrototype</reimplementedby>
        <reimplementedby refid="d7/d18/class_d_bus_x_m_l_scanner_1add535a64bc7caf4737f85c820b82c4d1">parsePrototype</reimplementedby>
        <reimplementedby refid="de/d7e/class_python_language_scanner_1a114cb3ee5e45f0eb07829faa2868e31e">parsePrototype</reimplementedby>
        <reimplementedby refid="df/def/class_v_h_d_l_language_scanner_1a10bbe28441f011a5de49705e1a64db00">parsePrototype</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Callback function called by the comment block scanner. </para>        </briefdescription>
        <detaileddescription>
<para>It provides a string <emphasis>text</emphasis> containing the prototype of a function or variable. The parser should parse this and store the information in the <ref refid="d4/dd7/class_entry" kindref="compound">Entry</ref> node that corresponds with the node for which the comment block parser was invoked. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/parserintf.h" line="126"/>
        <referencedby refid="d9/d8f/class_markdown_file_parser_1a5579fefcfe5512e79abfe55fd508fc95" compoundref="de/d04/markdown_8cpp" startline="2373" endline="2380">MarkdownFileParser::parsePrototype</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract interface for programming language parsers. </para>    </briefdescription>
    <detaileddescription>
<para>By implementing the methods of this interface one can add a new language parser to doxygen. The parser can make use of the comment block parser to parse the contents of special comment blocks. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3895">
        <label>VHDLLanguageScanner</label>
        <link refid="df/def/class_v_h_d_l_language_scanner"/>
        <childnode refid="3888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3889">
        <label>CLanguageScanner</label>
        <link refid="d0/d32/class_c_language_scanner"/>
        <childnode refid="3888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3894">
        <label>TclLanguageScanner</label>
        <link refid="da/de4/class_tcl_language_scanner"/>
        <childnode refid="3888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3892">
        <label>MarkdownFileParser</label>
        <link refid="d9/d8f/class_markdown_file_parser"/>
        <childnode refid="3888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3890">
        <label>DBusXMLScanner</label>
        <link refid="d7/d18/class_d_bus_x_m_l_scanner"/>
        <childnode refid="3888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3888">
        <label>ParserInterface</label>
        <link refid="d5/d84/class_parser_interface"/>
      </node>
      <node id="3893">
        <label>PythonLanguageScanner</label>
        <link refid="de/d7e/class_python_language_scanner"/>
        <childnode refid="3888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3891">
        <label>FortranLanguageScanner</label>
        <link refid="df/de4/class_fortran_language_scanner"/>
        <childnode refid="3888" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/parserintf.h" line="37" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/parserintf.h" bodystart="36" bodyend="128"/>
    <listofallmembers>
      <member refid="d5/d84/class_parser_interface_1af3acd64c6a33852e2e46e7288eb9c9cf" prot="public" virt="pure-virtual"><scope>ParserInterface</scope><name>finishTranslationUnit</name></member>
      <member refid="d5/d84/class_parser_interface_1a36c669b17b64a6e3847f27d70a5398d2" prot="public" virt="pure-virtual"><scope>ParserInterface</scope><name>needsPreprocessing</name></member>
      <member refid="d5/d84/class_parser_interface_1a4ab2f3a321c3a1d90a2f1245d204dada" prot="public" virt="pure-virtual"><scope>ParserInterface</scope><name>parseCode</name></member>
      <member refid="d5/d84/class_parser_interface_1a09ced377e619d40b7339187bad88341e" prot="public" virt="pure-virtual"><scope>ParserInterface</scope><name>parseInput</name></member>
      <member refid="d5/d84/class_parser_interface_1a5ebf0f524a296845befa22c85a4cc80b" prot="public" virt="pure-virtual"><scope>ParserInterface</scope><name>parsePrototype</name></member>
      <member refid="d5/d84/class_parser_interface_1aee4fccd1865a4e8a6b9f2896811104ca" prot="public" virt="pure-virtual"><scope>ParserInterface</scope><name>resetCodeParserState</name></member>
      <member refid="d5/d84/class_parser_interface_1a72478f87ead5fde10d7d6bbe32a73024" prot="public" virt="pure-virtual"><scope>ParserInterface</scope><name>startTranslationUnit</name></member>
      <member refid="d5/d84/class_parser_interface_1ac468c7abd84cd5ab1263555d3f95f1ee" prot="public" virt="virtual"><scope>ParserInterface</scope><name>~ParserInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
