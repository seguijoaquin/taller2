<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="d7/d79/searchindex_8cpp" kind="file">
    <compoundname>searchindex.cpp</compoundname>
    <includes local="no">ctype.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">qfile.h</includes>
    <includes local="no">qregexp.h</includes>
    <includes refid="de/d07/searchindex_8h" local="yes">searchindex.h</includes>
    <includes refid="db/d16/config_8h" local="yes">config.h</includes>
    <includes refid="d8/d3c/util_8h" local="yes">util.h</includes>
    <includes refid="d1/da1/doxygen_8h" local="yes">doxygen.h</includes>
    <includes refid="d8/dce/language_8h" local="yes">language.h</includes>
    <includes refid="dd/d66/pagedef_8h" local="yes">pagedef.h</includes>
    <includes refid="dd/d72/growbuf_8h" local="yes">growbuf.h</includes>
    <includes refid="d2/d0d/message_8h" local="yes">message.h</includes>
    <includes refid="df/dfc/version_8h" local="yes">version.h</includes>
    <includes refid="d1/de6/groupdef_8h" local="yes">groupdef.h</includes>
    <includes refid="d2/df8/classlist_8h" local="yes">classlist.h</includes>
    <includes refid="d4/d3a/filedef_8h" local="yes">filedef.h</includes>
    <includes refid="d4/d46/memberdef_8h" local="yes">memberdef.h</includes>
    <includes refid="dc/dd6/filename_8h" local="yes">filename.h</includes>
    <includes refid="d7/dfc/membername_8h" local="yes">membername.h</includes>
    <includes refid="d7/d97/namespacedef_8h" local="yes">namespacedef.h</includes>
    <includes refid="d1/da6/classdef_8h" local="yes">classdef.h</includes>
    <includes local="yes">search_js.h</includes>
    <incdepgraph>
      <node id="4591">
        <label>qcstring.h</label>
      </node>
      <node id="4576">
        <label>qregexp.h</label>
      </node>
      <node id="4588">
        <label>qgstring.h</label>
      </node>
      <node id="4575">
        <label>qfile.h</label>
      </node>
      <node id="4574">
        <label>assert.h</label>
      </node>
      <node id="4593">
        <label>qdatetime.h</label>
      </node>
      <node id="4583">
        <label>qstrlist.h</label>
      </node>
      <node id="4607">
        <label>growbuf.h</label>
        <link refid="dd/d72/growbuf_8h_source"/>
        <childnode refid="4608" relation="include">
        </childnode>
        <childnode refid="4609" relation="include">
        </childnode>
      </node>
      <node id="4613">
        <label>classlist.h</label>
        <link refid="d2/df8/classlist_8h_source"/>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4604" relation="include">
        </childnode>
        <childnode refid="4595" relation="include">
        </childnode>
      </node>
      <node id="4587">
        <label>qstring.h</label>
      </node>
      <node id="4608">
        <label>stdlib.h</label>
      </node>
      <node id="4611">
        <label>version.h</label>
        <link refid="df/dfc/version_8h_source"/>
      </node>
      <node id="4596">
        <label>membergroup.h</label>
        <link refid="d9/d11/membergroup_8h_source"/>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4595" relation="include">
        </childnode>
        <childnode refid="4590" relation="include">
        </childnode>
      </node>
      <node id="4595">
        <label>sortdict.h</label>
        <link refid="d9/d21/sortdict_8h_source"/>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4578" relation="include">
        </childnode>
      </node>
      <node id="4599">
        <label>memberlist.h</label>
        <link refid="dd/d78/memberlist_8h_source"/>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4600" relation="include">
        </childnode>
        <childnode refid="4595" relation="include">
        </childnode>
        <childnode refid="4590" relation="include">
        </childnode>
      </node>
      <node id="4605">
        <label>qptrdict.h</label>
      </node>
      <node id="4572">
        <label>src/searchindex.cpp</label>
        <link refid="searchindex.cpp"/>
        <childnode refid="4573" relation="include">
        </childnode>
        <childnode refid="4574" relation="include">
        </childnode>
        <childnode refid="4575" relation="include">
        </childnode>
        <childnode refid="4576" relation="include">
        </childnode>
        <childnode refid="4577" relation="include">
        </childnode>
        <childnode refid="4582" relation="include">
        </childnode>
        <childnode refid="4589" relation="include">
        </childnode>
        <childnode refid="4592" relation="include">
        </childnode>
        <childnode refid="4602" relation="include">
        </childnode>
        <childnode refid="4606" relation="include">
        </childnode>
        <childnode refid="4607" relation="include">
        </childnode>
        <childnode refid="4610" relation="include">
        </childnode>
        <childnode refid="4611" relation="include">
        </childnode>
        <childnode refid="4612" relation="include">
        </childnode>
        <childnode refid="4613" relation="include">
        </childnode>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4600" relation="include">
        </childnode>
        <childnode refid="4616" relation="include">
        </childnode>
        <childnode refid="4617" relation="include">
        </childnode>
        <childnode refid="4618" relation="include">
        </childnode>
        <childnode refid="4604" relation="include">
        </childnode>
        <childnode refid="4619" relation="include">
        </childnode>
      </node>
      <node id="4619">
        <label>search_js.h</label>
      </node>
      <node id="4602">
        <label>language.h</label>
        <link refid="d8/dce/language_8h_source"/>
        <childnode refid="4603" relation="include">
        </childnode>
      </node>
      <node id="4616">
        <label>filename.h</label>
        <link refid="dc/dd6/filename_8h_source"/>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4614" relation="include">
        </childnode>
      </node>
      <node id="4594">
        <label>qcache.h</label>
      </node>
      <node id="4604">
        <label>classdef.h</label>
        <link refid="d1/da6/classdef_8h_source"/>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4605" relation="include">
        </childnode>
        <childnode refid="4598" relation="include">
        </childnode>
      </node>
      <node id="4581">
        <label>qvector.h</label>
      </node>
      <node id="4610">
        <label>message.h</label>
        <link refid="d2/d0d/message_8h_source"/>
        <childnode refid="4585" relation="include">
        </childnode>
      </node>
      <node id="4589">
        <label>util.h</label>
        <link refid="d8/d3c/util_8h"/>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4573" relation="include">
        </childnode>
        <childnode refid="4590" relation="include">
        </childnode>
      </node>
      <node id="4578">
        <label>qintdict.h</label>
      </node>
      <node id="4586">
        <label>qiodevice.h</label>
      </node>
      <node id="4582">
        <label>config.h</label>
        <link refid="db/d16/config_8h_source"/>
        <childnode refid="4583" relation="include">
        </childnode>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4584" relation="include">
        </childnode>
      </node>
      <node id="4601">
        <label>sys/types.h</label>
      </node>
      <node id="4606">
        <label>pagedef.h</label>
        <link refid="dd/d66/pagedef_8h_source"/>
        <childnode refid="4598" relation="include">
        </childnode>
        <childnode refid="4595" relation="include">
        </childnode>
      </node>
      <node id="4609">
        <label>string.h</label>
      </node>
      <node id="4590">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="4591" relation="include">
        </childnode>
      </node>
      <node id="4577">
        <label>searchindex.h</label>
        <link refid="de/d07/searchindex_8h_source"/>
        <childnode refid="4578" relation="include">
        </childnode>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4581" relation="include">
        </childnode>
      </node>
      <node id="4579">
        <label>qlist.h</label>
      </node>
      <node id="4584">
        <label>ftextstream.h</label>
        <link refid="df/d83/ftextstream_8h_source"/>
        <childnode refid="4585" relation="include">
        </childnode>
        <childnode refid="4586" relation="include">
        </childnode>
        <childnode refid="4587" relation="include">
        </childnode>
        <childnode refid="4588" relation="include">
        </childnode>
      </node>
      <node id="4592">
        <label>doxygen.h</label>
        <link refid="d1/da1/doxygen_8h_source"/>
        <childnode refid="4593" relation="include">
        </childnode>
        <childnode refid="4594" relation="include">
        </childnode>
        <childnode refid="4583" relation="include">
        </childnode>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4578" relation="include">
        </childnode>
        <childnode refid="4584" relation="include">
        </childnode>
        <childnode refid="4595" relation="include">
        </childnode>
        <childnode refid="4596" relation="include">
        </childnode>
        <childnode refid="4597" relation="include">
        </childnode>
        <childnode refid="4599" relation="include">
        </childnode>
      </node>
      <node id="4600">
        <label>memberdef.h</label>
        <link refid="d4/d46/memberdef_8h_source"/>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4601" relation="include">
        </childnode>
        <childnode refid="4590" relation="include">
        </childnode>
        <childnode refid="4598" relation="include">
        </childnode>
      </node>
      <node id="4614">
        <label>filedef.h</label>
        <link refid="d4/d3a/filedef_8h_source"/>
        <childnode refid="4615" relation="include">
        </childnode>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4578" relation="include">
        </childnode>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4598" relation="include">
        </childnode>
        <childnode refid="4595" relation="include">
        </childnode>
        <childnode refid="4599" relation="include">
        </childnode>
      </node>
      <node id="4612">
        <label>groupdef.h</label>
        <link refid="d1/de6/groupdef_8h_source"/>
        <childnode refid="4595" relation="include">
        </childnode>
        <childnode refid="4598" relation="include">
        </childnode>
      </node>
      <node id="4617">
        <label>membername.h</label>
        <link refid="d7/dfc/membername_8h_source"/>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4600" relation="include">
        </childnode>
        <childnode refid="4595" relation="include">
        </childnode>
      </node>
      <node id="4573">
        <label>ctype.h</label>
      </node>
      <node id="4598">
        <label>definition.h</label>
        <link refid="df/da1/definition_8h_source"/>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4590" relation="include">
        </childnode>
      </node>
      <node id="4615">
        <label>index.h</label>
        <link refid="d1/db5/index_8h_source"/>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4591" relation="include">
        </childnode>
      </node>
      <node id="4597">
        <label>dirdef.h</label>
        <link refid="d6/d15/dirdef_8h_source"/>
        <childnode refid="4595" relation="include">
        </childnode>
        <childnode refid="4598" relation="include">
        </childnode>
        <childnode refid="4579" relation="include">
        </childnode>
      </node>
      <node id="4580">
        <label>qdict.h</label>
      </node>
      <node id="4585">
        <label>stdio.h</label>
      </node>
      <node id="4603">
        <label>translator.h</label>
        <link refid="d9/df1/translator_8h_source"/>
        <childnode refid="4604" relation="include">
        </childnode>
      </node>
      <node id="4618">
        <label>namespacedef.h</label>
        <link refid="d7/d97/namespacedef_8h_source"/>
        <childnode refid="4583" relation="include">
        </childnode>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4595" relation="include">
        </childnode>
        <childnode refid="4598" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="dd/df7/struct_search_doc_entry" prot="public">SearchDocEntry</innerclass>
    <innerclass refid="d1/db6/struct_search_index_external_1_1_private" prot="public">SearchIndexExternal::Private</innerclass>
    <innerclass refid="d8/d43/class_search_index_list" prot="public">SearchIndexList</innerclass>
    <innerclass refid="d6/dd3/class_search_index_category_mapping" prot="public">SearchIndexCategoryMapping</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1a6c3c9328a53f75cd037e81db65589a2a" prot="public" static="no">
        <name>MEMBER_INDEX_ENTRIES</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="590" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="590" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1a9368511f65b06e6124a24bc5ac4614b2" prot="public" static="no">
        <name>SEARCH_INDEX_ALL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="592" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1ad3b9d29762c49d2c4bbbd41d1c68ef19" prot="public" static="no">
        <name>SEARCH_INDEX_CLASSES</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="593" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1a1d0249b3f2f15dd1b5e881df00836626" prot="public" static="no">
        <name>SEARCH_INDEX_NAMESPACES</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="594" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1a635a2e92df604e5ed0332bb06c9669e2" prot="public" static="no">
        <name>SEARCH_INDEX_FILES</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="595" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1ac4fe1eb6160aaca1f68ad96d8ec3637e" prot="public" static="no">
        <name>SEARCH_INDEX_FUNCTIONS</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="596" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1acb2ab2e86ce7e805d62b1f4020ffabbe" prot="public" static="no">
        <name>SEARCH_INDEX_VARIABLES</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="597" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1a07ec16842dddf537e26d2c8ddd368dfc" prot="public" static="no">
        <name>SEARCH_INDEX_TYPEDEFS</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="598" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1a5d6c3a6eae28e6c2bc54b47445cd29da" prot="public" static="no">
        <name>SEARCH_INDEX_ENUMS</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="599" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="599" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1abc0dad59614a39f0edbc9ced149460fc" prot="public" static="no">
        <name>SEARCH_INDEX_ENUMVALUES</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="600" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1abb8fc9a0778bf0439e72aa92bc4e17b3" prot="public" static="no">
        <name>SEARCH_INDEX_PROPERTIES</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="601" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1a554c8171a88f5708c79daa8d3d400c3b" prot="public" static="no">
        <name>SEARCH_INDEX_EVENTS</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="602" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="602" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1ae391b4f2722baf8355d5d57e4cbfc18e" prot="public" static="no">
        <name>SEARCH_INDEX_RELATED</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="603" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1a5d27e0da63dddb1a4b6e2d7189e76f29" prot="public" static="no">
        <name>SEARCH_INDEX_DEFINES</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="604" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="604" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1aa4dc6b2cb5cea965a6ce59a25dce26bf" prot="public" static="no">
        <name>SEARCH_INDEX_GROUPS</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="605" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="605" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1a6e92885b1759155d51e72752b11ba92e" prot="public" static="no">
        <name>SEARCH_INDEX_PAGES</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="606" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="606" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/d79/searchindex_8cpp_1a62d26c5c880a5812810eb6896ce831b3" prot="public" static="no">
        <name>NUM_SEARCH_INDICES</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="607" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="607" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d7/d79/searchindex_8cpp_1adcca5cab2a078378be9c088229679f60" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int numIndexEntries</definition>
        <argsstring></argsstring>
        <name>numIndexEntries</name>
        <initializer>= 256*256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="51" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d79/searchindex_8cpp_1a001bfcea0fe5abe49e8b0a27354c298c" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char search_script[]</definition>
        <argsstring>[]</argsstring>
        <name>search_script</name>
        <initializer>=
# 587 &quot;C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp&quot; 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="588" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d79/searchindex_8cpp_1a42c4278bda843cdb599860460fb8df7c" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int g_searchIndexCount[NUM_SEARCH_INDICES]</definition>
        <argsstring>[NUM_SEARCH_INDICES]</argsstring>
        <name>g_searchIndexCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="782" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="782" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d79/searchindex_8cpp_1a367810b53975ebafa94f3a245266b5c2" prot="public" static="yes" mutable="no">
        <type>SearchIndexList</type>
        <definition>SearchIndexList g_searchIndexSymbols[NUM_SEARCH_INDICES][MEMBER_INDEX_ENTRIES]</definition>
        <argsstring>[NUM_SEARCH_INDICES][MEMBER_INDEX_ENTRIES]</argsstring>
        <name>g_searchIndexSymbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="783" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="783" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d79/searchindex_8cpp_1aa08787567a43558d413b61b6a043de59" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* g_searchIndexName[NUM_SEARCH_INDICES]</definition>
        <argsstring>[NUM_SEARCH_INDICES]</argsstring>
        <name>g_searchIndexName</name>
        <initializer>= 
{ 
    &quot;all&quot;,
    &quot;classes&quot;,
    &quot;namespaces&quot;,
    &quot;files&quot;,
    &quot;functions&quot;,
    &quot;variables&quot;,
    &quot;typedefs&quot;, 
    &quot;enums&quot;, 
    &quot;enumvalues&quot;,
    &quot;properties&quot;, 
    &quot;events&quot;, 
    &quot;related&quot;,
    &quot;defines&quot;,
    &quot;groups&quot;,
    &quot;pages&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="801" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="784" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d7/d79/searchindex_8cpp_1a175e8dc844fb15930bf9496b155460e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int charsToIndex</definition>
        <argsstring>(const char *word)</argsstring>
        <name>charsToIndex</name>
        <param>
          <type>const char *</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="183" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="182" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="d7/d79/searchindex_8cpp_1a61e6fd0a5b566641e06bbf99c0634998" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void writeInt</definition>
        <argsstring>(QFile &amp;f, int index)</argsstring>
        <name>writeInt</name>
        <param>
          <type>QFile &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="247" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="246" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="d7/d79/searchindex_8cpp_1a0eb25deebfc0a6b53d1f5ee73b7c3bfd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void writeString</definition>
        <argsstring>(QFile &amp;f, const char *s)</argsstring>
        <name>writeString</name>
        <param>
          <type>QFile &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="255" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="254" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="d7/d79/searchindex_8cpp_1a777e4acc9be6351eb34951ce0436b767" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>static QCString definitionToName</definition>
        <argsstring>(Definition *ctx)</argsstring>
        <name>definitionToName</name>
        <param>
          <type><ref refid="d5/dcc/class_definition" kindref="compound">Definition</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="446" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="445" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="d7/d79/searchindex_8cpp_1a51f853fee102e2c5330f9ab70d8d784e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void addMemberToSearchIndex</definition>
        <argsstring>(SearchIndexList symbols[NUM_SEARCH_INDICES][MEMBER_INDEX_ENTRIES], int symbolCount[NUM_SEARCH_INDICES], MemberDef *md)</argsstring>
        <name>addMemberToSearchIndex</name>
        <param>
          <type>SearchIndexList</type>
          <declname>symbols</declname>
          <array>[NUM_SEARCH_INDICES][MEMBER_INDEX_ENTRIES]</array>
        </param>
        <param>
          <type>int</type>
          <declname>symbolCount</declname>
          <array>[NUM_SEARCH_INDICES]</array>
        </param>
        <param>
          <type><ref refid="da/d09/class_member_def" kindref="compound">MemberDef</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="641" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="637" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="d7/d79/searchindex_8cpp_1ab057d053717f337126668018b4d1a93e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>static QCString searchId</definition>
        <argsstring>(const QCString &amp;s)</argsstring>
        <name>searchId</name>
        <param>
          <type>const QCString &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="761" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="760" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="d7/d79/searchindex_8cpp_1aa54f20a60167939cce6d5c29815ce318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void writeJavascriptSearchIndex</definition>
        <argsstring>()</argsstring>
        <name>writeJavascriptSearchIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="829" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="828" bodyend="1330"/>
      </memberdef>
      <memberdef kind="function" id="d7/d79/searchindex_8cpp_1a66104604d75da9cfd0c3bcaa9d5c411a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void writeSearchCategories</definition>
        <argsstring>(FTextStream &amp;t)</argsstring>
        <name>writeSearchCategories</name>
        <param>
          <type><ref refid="dc/d3c/class_f_text_stream" kindref="compound">FTextStream</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="1333" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="1332" bodyend="1348"/>
      </memberdef>
      <memberdef kind="function" id="d7/d79/searchindex_8cpp_1a50d08832d359fc0cce18c3079d46eb9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initSearchIndexer</definition>
        <argsstring>()</argsstring>
        <name>initSearchIndexer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the search indexer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="1353" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="1352" bodyend="1372"/>
      </memberdef>
      <memberdef kind="function" id="d7/d79/searchindex_8cpp_1a88244abeb89e8a1f4e9f3366c2f7c25e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void finializeSearchIndexer</definition>
        <argsstring>()</argsstring>
        <name>finializeSearchIndexer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cleanup the search indexer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" line="1375" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp" bodystart="1374" bodyend="1377"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>searchindex.cpp,v<sp/>1.7<sp/>2001/03/19<sp/>19:27:41<sp/>root<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1997-2013<sp/>by<sp/>Dimitri<sp/>van<sp/>Heesch.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and<sp/>distribute<sp/>this<sp/>software<sp/>and<sp/>its</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>documentation<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>is<sp/>hereby<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>granted.<sp/>No<sp/>representations<sp/>are<sp/>made<sp/>about<sp/>the<sp/>suitability<sp/>of<sp/>this<sp/>software<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>for<sp/>any<sp/>purpose.<sp/>It<sp/>is<sp/>provided<sp/>&quot;as<sp/>is&quot;<sp/>without<sp/>express<sp/>or<sp/>implied<sp/>warranty.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Documents<sp/>produced<sp/>by<sp/>Doxygen<sp/>are<sp/>derivative<sp/>works<sp/>derived<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>input<sp/>used<sp/>in<sp/>their<sp/>production;<sp/>they<sp/>are<sp/>not<sp/>affected<sp/>by<sp/>this<sp/>license.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qregexp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;searchindex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d3c/util_8h" kindref="compound" tooltip="A bunch of utility functions.">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;doxygen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;language.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pagedef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;growbuf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;message.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;version.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;groupdef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;classlist.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;filedef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;memberdef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;filename.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;membername.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>format:<sp/>(all<sp/>multi-byte<sp/>values<sp/>are<sp/>stored<sp/>in<sp/>big<sp/>endian<sp/>format)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>4<sp/>byte<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>256*256*4<sp/>byte<sp/>index<sp/>(4<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>each<sp/>index<sp/>entry:<sp/>a<sp/>zero<sp/>terminated<sp/>list<sp/>of<sp/>words<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>each<sp/>word:<sp/>a<sp/>\0<sp/>terminated<sp/>string<sp/>+<sp/>4<sp/>byte<sp/>offset<sp/>to<sp/>the<sp/>stats<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>padding<sp/>bytes<sp/>to<sp/>align<sp/>at<sp/>4<sp/>byte<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>each<sp/>word:<sp/>the<sp/>number<sp/>of<sp/>urls<sp/>(4<sp/>bytes)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>for<sp/>each<sp/>url<sp/>containing<sp/>the<sp/>word<sp/>8<sp/>bytes<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(4<sp/>bytes<sp/>index<sp/>to<sp/>url<sp/>string<sp/>+<sp/>4<sp/>bytes<sp/>frequency<sp/>counter)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>each<sp/>url:<sp/>a<sp/>\0<sp/>terminated<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numIndexEntries<sp/>=<sp/>256*256;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">IndexWord::IndexWord(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*word)<sp/>:<sp/>m_word(word),<sp/>m_urls(17)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>m_urls.setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;IndexWord::IndexWord(%s)\n&quot;,word);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IndexWord::addUrlIndex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hiPriority)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;IndexWord::addUrlIndex(%d,%d)\n&quot;,idx,hiPriority);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="d6/d43/struct_u_r_l_info" kindref="compound">URLInfo</ref><sp/>*ui<sp/>=<sp/>m_urls.find(idx);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ui==0)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;URLInfo::URLInfo(%d)\n&quot;,idx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>ui=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d6/d43/struct_u_r_l_info" kindref="compound">URLInfo</ref>(idx,0);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>m_urls.insert(idx,ui);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>ui-&gt;freq+=2;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hiPriority)<sp/>ui-&gt;freq|=1;<sp/></highlight><highlight class="comment">//<sp/>mark<sp/>as<sp/>high<sp/>priority<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//--------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">SearchIndex::SearchIndex()<sp/>:<sp/><ref refid="d8/d4d/class_search_index_intf" kindref="compound">SearchIndexIntf</ref>(Internal),<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_words(328829),<sp/>m_index(numIndexEntries),<sp/>m_url2IdMap(10007),<sp/>m_urls(10007),<sp/>m_urlIndex(-1)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>m_words.setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>m_url2IdMap.setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>m_urls.setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>m_index.setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;numIndexEntries;i++)<sp/>m_index.insert(i,</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;IndexWord&gt;</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SearchIndex::setCurrentDoc(<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*ctx,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*anchor,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSourceFile)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>assert(!isSourceFile<sp/>||<sp/>ctx-&gt;<ref refid="d9/d4a/class_definition_intf_1ac8ee00bc1af5558ae37f6896d16f5a3a" kindref="member">definitionType</ref>()==Definition::TypeFile);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;SearchIndex::setCurrentDoc(%s,%s,%s)\n&quot;,name,baseName,anchor);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>QCString<sp/>url=isSourceFile<sp/>?<sp/>((<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref>*)ctx)-&gt;getSourceFileBase()<sp/>:<sp/>ctx-&gt;<ref refid="d5/dcc/class_definition_1acabecdc6bfda2015811eed5f3436322d" kindref="member">getOutputFileBase</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>url+=Config_getString(</highlight><highlight class="stringliteral">&quot;HTML_FILE_EXTENSION&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>QCString<sp/>baseUrl<sp/>=<sp/>url;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor)<sp/>url+=QCString(</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">)+anchor;<sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isSourceFile)<sp/>baseUrl=url;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>QCString<sp/>name=ctx-&gt;<ref refid="d5/dcc/class_definition_1aacd9b72da80deb37974a18d2001ed715" kindref="member">qualifiedName</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;<ref refid="d9/d4a/class_definition_intf_1ac8ee00bc1af5558ae37f6896d16f5a3a" kindref="member">definitionType</ref>()==Definition::TypeMember)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*md<sp/>=<sp/>(<ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*)ctx;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>name.prepend((md-&gt;<ref refid="d5/dcc/class_definition_1a55485230d99cc877348db64f01dde092" kindref="member" tooltip="Returns the programming language this definition was written in.">getLanguage</ref>()==SrcLangExt_Fortran<sp/><sp/>?<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theTranslator-&gt;trSubprogram(TRUE,TRUE)<sp/>:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theTranslator-&gt;trMember(TRUE,TRUE))+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>compound<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member" tooltip="Language as given by extension.">SrcLangExt</ref><sp/>lang<sp/>=<sp/>ctx-&gt;<ref refid="d5/dcc/class_definition_1a55485230d99cc877348db64f01dde092" kindref="member" tooltip="Returns the programming language this definition was written in.">getLanguage</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>sep<sp/>=<sp/>getLanguageSpecificSeparator(lang);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sep!=</highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>substitute(name,</highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal">,sep);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ctx-&gt;<ref refid="d9/d4a/class_definition_intf_1ac8ee00bc1af5558ae37f6896d16f5a3a" kindref="member">definitionType</ref>())</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Definition::TypePage:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d41/class_page_def" kindref="compound" tooltip="A model of a page symbol.">PageDef</ref><sp/>*pd<sp/>=<sp/>(<ref refid="dd/d41/class_page_def" kindref="compound" tooltip="A model of a page symbol.">PageDef</ref><sp/>*)ctx;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pd-&gt;title().isEmpty())</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>theTranslator-&gt;trPage(TRUE,TRUE)+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+pd-&gt;title();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>theTranslator-&gt;trPage(TRUE,TRUE)+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+pd-&gt;<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Definition::TypeClass:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref><sp/>*cd<sp/>=<sp/>(<ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref><sp/>*)ctx;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.prepend(cd-&gt;<ref refid="d1/dcf/class_class_def_1a2e2c5900a55d6594678f35ea0f77631e" kindref="member" tooltip="Returns the type of compound as a string.">compoundTypeString</ref>()+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Definition::TypeNamespace:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lang==SrcLangExt_Java<sp/>||<sp/>lang==SrcLangExt_CSharp)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>theTranslator-&gt;trPackage(name);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lang==SrcLangExt_Fortran)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.prepend(theTranslator-&gt;trModule(TRUE,TRUE)+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.prepend(theTranslator-&gt;trNamespace(TRUE,TRUE)+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Definition::TypeGroup:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d09/class_group_def" kindref="compound" tooltip="A model of a group of symbols.">GroupDef</ref><sp/>*gd<sp/>=<sp/>(<ref refid="d8/d09/class_group_def" kindref="compound" tooltip="A model of a group of symbols.">GroupDef</ref><sp/>*)ctx;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gd-&gt;groupTitle())</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>theTranslator-&gt;trGroup(TRUE,TRUE)+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+gd-&gt;groupTitle();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.prepend(theTranslator-&gt;trGroup(TRUE,TRUE)+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pIndex<sp/>=<sp/>m_url2IdMap.find(baseUrl);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pIndex==0)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_urlIndex;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>m_url2IdMap.insert(baseUrl,</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(m_urlIndex));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>m_urls.insert(m_urlIndex,</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d89/struct_u_r_l" kindref="compound">URL</ref>(name,url));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>m_urls.insert(*pIndex,</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d89/struct_u_r_l" kindref="compound">URL</ref>(name,url));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charsToIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*word)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fast<sp/>string<sp/>hashing<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//register<sp/>ushort<sp/>h=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//const<sp/>char<sp/>*k<sp/>=<sp/>word;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//ushort<sp/>mask=0xfc00;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//while<sp/>(<sp/>*k<sp/>)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>h<sp/>=<sp/>(h&amp;mask)^(h&lt;&lt;6)^(*k++);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//return<sp/>h;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>hashing<sp/>that<sp/>allows<sp/>for<sp/>substring<sp/>searching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>uint<sp/>c1=((uchar<sp/>*)word)[0];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>uint<sp/>c2=((uchar<sp/>*)word)[1];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c2==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c1*256+c2;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SearchIndex::addWord(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*word,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hiPriority,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recurse)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QRegExp<sp/>nextPart(</highlight><highlight class="stringliteral">&quot;[_a-z:][A-Z]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word==0<sp/>||<sp/>word[0]==</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>QCString<sp/>wStr<sp/>=<sp/>QCString(word).lower();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;SearchIndex::addWord(%s,%d)<sp/>wStr=%s\n&quot;,word,hiPriority,wStr.data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="d6/d0c/class_index_word" kindref="compound">IndexWord</ref><sp/>*w<sp/>=<sp/>m_words[wStr];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w==0)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx=charsToIndex(wStr);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fprintf(stderr,&quot;addWord(%s)<sp/>at<sp/>index<sp/>%d\n&quot;,word,idx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx&lt;0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d6/d0c/class_index_word" kindref="compound">IndexWord</ref>(wStr);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>m_index[idx]-&gt;append(w);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>m_words.insert(wStr,w);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>w-&gt;addUrlIndex(m_urlIndex,hiPriority);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found=FALSE;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!recurse)<sp/></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>time<sp/>we<sp/>check<sp/>if<sp/>we<sp/>can<sp/>strip<sp/>the<sp/>prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>i=getPrefixIndex(word);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;0)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addWord(word+i,hiPriority,TRUE);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>found=TRUE;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)<sp/></highlight><highlight class="comment">//<sp/>no<sp/>prefix<sp/>stripped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i=nextPart.match(word))&gt;=1)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addWord(word+i+1,hiPriority,TRUE);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SearchIndex::addWord(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*word,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hiPriority)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>addWord(word,hiPriority,FALSE);</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeInt(QFile<sp/>&amp;f,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>f.putch(((uint)index)&gt;&gt;24);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>f.putch((((uint)index)&gt;&gt;16)&amp;0xff);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>f.putch((((uint)index)&gt;&gt;8)&amp;0xff);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>f.putch(((uint)index)&amp;0xff);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeString(QFile<sp/>&amp;f,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*p)<sp/>f.putch(*p++);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>f.putch(0);</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SearchIndex::write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size=4;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>size+=4*numIndexEntries;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wordsOffset<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>pass:<sp/>compute<sp/>the<sp/>size<sp/>of<sp/>the<sp/>wordlist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;numIndexEntries;i++)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;IndexWord&gt;</ref><sp/>*wlist<sp/>=<sp/>m_index[i];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wlist-&gt;isEmpty())</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QListIterator&lt;IndexWord&gt;<sp/>iwi(*wlist);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d0c/class_index_word" kindref="compound">IndexWord</ref><sp/>*iw;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iwi.toFirst();(iw=iwi.current());++iwi)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>iw-&gt;word().length()+1;<sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size+=ws+4;<sp/></highlight><highlight class="comment">//<sp/>word<sp/>+<sp/>url<sp/>info<sp/>list<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size+=1;<sp/></highlight><highlight class="comment">//<sp/>zero<sp/>list<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>pass:<sp/>compute<sp/>the<sp/>offsets<sp/>in<sp/>the<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexOffsets[numIndexEntries];</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset=wordsOffset;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;numIndexEntries;i++)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;IndexWord&gt;</ref><sp/>*wlist<sp/>=<sp/>m_index[i];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wlist-&gt;isEmpty())</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indexOffsets[i]=offset;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QListIterator&lt;IndexWord&gt;<sp/>iwi(*wlist);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d0c/class_index_word" kindref="compound">IndexWord</ref><sp/>*iw;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iwi.toFirst();(iw=iwi.current());++iwi)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset+=<sp/>iw-&gt;word().length()+1;<sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset+=4;<sp/></highlight><highlight class="comment">//<sp/>word<sp/>+<sp/>offset<sp/>to<sp/>url<sp/>info<sp/>array<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset+=1;<sp/></highlight><highlight class="comment">//<sp/>zero<sp/>list<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indexOffsets[i]=0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>size<sp/>=<sp/>(size+3)&amp;~3;<sp/></highlight><highlight class="comment">//<sp/>round<sp/>up<sp/>to<sp/>4<sp/>byte<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>padding<sp/>=<sp/>size<sp/>-<sp/>padding;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//int<sp/>statsOffset<sp/>=<sp/>size;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>QDictIterator&lt;IndexWord&gt;<sp/>wdi(m_words);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//IndexWord<sp/>*iw;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*wordStatOffsets<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[m_words.count()];</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count=0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>third<sp/>pass:<sp/>compute<sp/>offset<sp/>to<sp/>stats<sp/>info<sp/>for<sp/>each<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;numIndexEntries;i++)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;IndexWord&gt;</ref><sp/>*wlist<sp/>=<sp/>m_index[i];</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wlist-&gt;isEmpty())</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QListIterator&lt;IndexWord&gt;<sp/>iwi(*wlist);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d0c/class_index_word" kindref="compound">IndexWord</ref><sp/>*iw;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iwi.toFirst();(iw=iwi.current());++iwi)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;wordStatOffsets[%d]=%d\n&quot;,count,size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wordStatOffsets[count++]<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size+=4+iw-&gt;urls().count()*8;<sp/></highlight><highlight class="comment">//<sp/>count<sp/>+<sp/>(url_index,freq)<sp/>per<sp/>url</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*urlOffsets<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[m_urls.count()];</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//int<sp/>urlsOffset<sp/>=<sp/>size;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>QIntDictIterator&lt;URL&gt;<sp/>udi(m_urls);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="dd/d89/struct_u_r_l" kindref="compound">URL</ref><sp/>*url;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(udi.toFirst();(url=udi.current());++udi)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>urlOffsets[udi.currentKey()]=size;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>size+=url-&gt;name.length()+1+</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>url-&gt;url.length()+1;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Total<sp/>size<sp/>%x<sp/>bytes<sp/>(word=%x<sp/>stats=%x<sp/>urls=%x)\n&quot;,size,wordsOffset,statsOffset,urlsOffset);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>QFile<sp/>f(fileName);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.open(IO_WriteOnly))</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>f.putch(</highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">);<sp/>f.putch(</highlight><highlight class="charliteral">&apos;O&apos;</highlight><highlight class="normal">);<sp/>f.putch(</highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">);<sp/>f.putch(</highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;numIndexEntries;i++)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>writeInt(f,indexOffsets[i]);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>word<sp/>lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>count=0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;numIndexEntries;i++)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;IndexWord&gt;</ref><sp/>*wlist<sp/>=<sp/>m_index[i];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wlist-&gt;isEmpty())</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QListIterator&lt;IndexWord&gt;<sp/>iwi(*wlist);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d0c/class_index_word" kindref="compound">IndexWord</ref><sp/>*iw;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iwi.toFirst();(iw=iwi.current());++iwi)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeString(f,iw-&gt;word());</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeInt(f,wordStatOffsets[count++]);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.putch(0);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>extra<sp/>padding<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;padding;i++)<sp/>f.putch(0);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>word<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;numIndexEntries;i++)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;IndexWord&gt;</ref><sp/>*wlist<sp/>=<sp/>m_index[i];</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wlist-&gt;isEmpty())</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QListIterator&lt;IndexWord&gt;<sp/>iwi(*wlist);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d0c/class_index_word" kindref="compound">IndexWord</ref><sp/>*iw;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iwi.toFirst();(iw=iwi.current());++iwi)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numUrls<sp/>=<sp/>iw-&gt;urls().count();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeInt(f,numUrls);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QIntDictIterator&lt;URLInfo&gt;<sp/>uli(iw-&gt;urls());</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d43/struct_u_r_l_info" kindref="compound">URLInfo</ref><sp/>*ui;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uli.toFirst();(ui=uli.current());++uli)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeInt(f,urlOffsets[ui-&gt;urlIdx]);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeInt(f,ui-&gt;freq);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>urls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>QIntDictIterator&lt;URL&gt;<sp/>udi(m_urls);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d89/struct_u_r_l" kindref="compound">URL</ref><sp/>*url;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(udi.toFirst();(url=udi.current());++udi)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>writeString(f,url-&gt;name);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>writeString(f,url-&gt;url);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>urlOffsets;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>wordStatOffsets;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>following<sp/>part<sp/>is<sp/>for<sp/>writing<sp/>an<sp/>external<sp/>search<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SearchDocEntry</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>QCString<sp/>type;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>QCString<sp/>name;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>QCString<sp/>args;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>QCString<sp/>extId;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>QCString<sp/>url;<sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><ref refid="d8/d33/class_grow_buf" kindref="compound" tooltip="Class representing a string buffer optimised for growing.">GrowBuf</ref><sp/><sp/>importantText;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><ref refid="d8/d33/class_grow_buf" kindref="compound" tooltip="Class representing a string buffer optimised for growing.">GrowBuf</ref><sp/><sp/>normalText;</highlight></codeline>
<codeline lineno="423"><highlight class="normal">};</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SearchIndexExternal::Private</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>Private()<sp/>:<sp/>docEntries(12251)<sp/>{}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><ref refid="d1/d50/class_s_dict" kindref="compound">SDict&lt;SearchDocEntry&gt;</ref><sp/>docEntries;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>SearchDocEntry<sp/>*current;</highlight></codeline>
<codeline lineno="430"><highlight class="normal">};</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal">SearchIndexExternal::SearchIndexExternal()<sp/>:<sp/><ref refid="d8/d4d/class_search_index_intf" kindref="compound">SearchIndexIntf</ref>(External)</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SearchIndexExternal::Private;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>p-&gt;docEntries.setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>p-&gt;current=0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal">SearchIndexExternal::~SearchIndexExternal()</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;p-&gt;docEntries.count()=%d\n&quot;,p-&gt;docEntries.count());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QCString<sp/>definitionToName(<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*ctx)</highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;<ref refid="d9/d4a/class_definition_intf_1ac8ee00bc1af5558ae37f6896d16f5a3a" kindref="member">definitionType</ref>()==Definition::TypeMember)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*md<sp/>=<sp/>(<ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref>*)ctx;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isFunction())</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;function&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isSlot())</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;slot&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isSignal())</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;signal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isVariable())</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;variable&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isTypedef())</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;typedef&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isEnumerate())</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;enum&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isEnumValue())</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;enumvalue&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isProperty())</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;property&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isEvent())</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;event&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isRelated()<sp/>||<sp/>md-&gt;isForeign())</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;related&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isFriend())</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;friend&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isDefine())</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;define&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(ctx-&gt;<ref refid="d9/d4a/class_definition_intf_1ac8ee00bc1af5558ae37f6896d16f5a3a" kindref="member">definitionType</ref>())</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Definition::TypeClass:<sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref>*)ctx)-&gt;compoundTypeString();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Definition::TypeFile:</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Definition::TypeNamespace:</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;namespace&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Definition::TypeGroup:</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;group&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Definition::TypePackage:</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;package&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Definition::TypePage:</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;page&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Definition::TypeDir:</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;dir&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SearchIndexExternal::setCurrentDoc(<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*ctx,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*anchor,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSourceFile)</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>QCString<sp/>extId<sp/>=<sp/>stripPath(Config_getString(</highlight><highlight class="stringliteral">&quot;EXTERNAL_SEARCH_ID&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>QCString<sp/>baseName<sp/>=<sp/>isSourceFile<sp/>?<sp/>((<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref>*)ctx)-&gt;getSourceFileBase()<sp/>:<sp/>ctx-&gt;<ref refid="d5/dcc/class_definition_1acabecdc6bfda2015811eed5f3436322d" kindref="member">getOutputFileBase</ref>();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>QCString<sp/>url<sp/>=<sp/>baseName<sp/>+<sp/>Doxygen::htmlFileExtension;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor)<sp/>url+=QCString(</highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">)+anchor;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>QCString<sp/>key<sp/>=<sp/>extId+</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">+url;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>p-&gt;current<sp/>=<sp/>p-&gt;docEntries.find(key);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;setCurrentDoc(url=%s,isSourceFile=%d)<sp/>current=%p\n&quot;,url.data(),isSourceFile,p-&gt;current);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;current)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>SearchDocEntry<sp/>*e<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SearchDocEntry;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;type<sp/>=<sp/>isSourceFile<sp/>?<sp/>QCString(</highlight><highlight class="stringliteral">&quot;source&quot;</highlight><highlight class="normal">)<sp/>:<sp/>definitionToName(ctx);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;name<sp/>=<sp/>ctx-&gt;<ref refid="d5/dcc/class_definition_1aacd9b72da80deb37974a18d2001ed715" kindref="member">qualifiedName</ref>();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx-&gt;<ref refid="d9/d4a/class_definition_intf_1ac8ee00bc1af5558ae37f6896d16f5a3a" kindref="member">definitionType</ref>()==Definition::TypeMember)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;args<sp/>=<sp/>((<ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref>*)ctx)-&gt;argsString();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;extId<sp/>=<sp/>extId;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;url<sp/><sp/>=<sp/>url;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;current<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;docEntries.append(key,e);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;searchIndexExt<sp/>%s<sp/>:<sp/>%s\n&quot;,e-&gt;name.data(),e-&gt;url.data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SearchIndexExternal::addWord(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*word,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hiPriority)</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word==0<sp/>||<sp/>!isId(*word)<sp/>||<sp/>p-&gt;current==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><ref refid="d8/d33/class_grow_buf" kindref="compound" tooltip="Class representing a string buffer optimised for growing.">GrowBuf</ref><sp/>*pText<sp/>=<sp/>hiPriority<sp/>?<sp/>&amp;p-&gt;current-&gt;importantText<sp/>:<sp/>&amp;p-&gt;current-&gt;normalText;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pText-&gt;getPos()&gt;0)<sp/>pText-&gt;addChar(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>pText-&gt;addStr(word);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;addWord<sp/>%s\n&quot;,word);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SearchIndexExternal::write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fileName)</highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>QFile<sp/>f(fileName);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.open(IO_WriteOnly))</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d3c/class_f_text_stream" kindref="compound" tooltip="Simplified and optimized version of QTextStream.">FTextStream</ref><sp/>t(&amp;f);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;?xml<sp/>version=\&quot;1.0\&quot;<sp/>encoding=\&quot;UTF-8\&quot;?&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;add&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d50/class_s_dict" kindref="compound" tooltip="Ordered dictionary of elements of type T.">SDict&lt;SearchDocEntry&gt;::Iterator</ref><sp/>it(p-&gt;docEntries);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>SearchDocEntry<sp/>*doc;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.toFirst();(doc=it.current());++it)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;normalText.addChar(0);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>buffer<sp/>ends<sp/>with<sp/>a<sp/>0<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;importantText.addChar(0);<sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>buffer<sp/>ends<sp/>with<sp/>a<sp/>0<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;doc&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;field<sp/>name=\&quot;type\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>doc-&gt;type<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/field&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;field<sp/>name=\&quot;name\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>convertToXML(doc-&gt;name)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/field&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!doc-&gt;args.isEmpty())</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;field<sp/>name=\&quot;args\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>convertToXML(doc-&gt;args)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/field&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!doc-&gt;extId.isEmpty())</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;field<sp/>name=\&quot;tag\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>convertToXML(doc-&gt;extId)<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/field&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;field<sp/>name=\&quot;url\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>convertToXML(doc-&gt;url)<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/field&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;field<sp/>name=\&quot;keywords\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>convertToXML(doc-&gt;importantText.get())<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/field&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&lt;field<sp/>name=\&quot;text\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>convertToXML(doc-&gt;normalText.get())<sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/field&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&lt;/doc&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/add&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>file<sp/>%s<sp/>for<sp/>writing!\n&quot;</highlight><highlight class="normal">,fileName);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>following<sp/>part<sp/>is<sp/>for<sp/>the<sp/>javascript<sp/>based<sp/>search<sp/>engine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;memberdef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;namespacedef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pagedef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;classdef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;filedef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;language.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;doxygen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;message.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>search_script[]=</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;search_js.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MEMBER_INDEX_ENTRIES<sp/><sp/><sp/>256</highlight></codeline>
<codeline lineno="591"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_ALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="593"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_CLASSES<sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="594"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_NAMESPACES<sp/><sp/>2</highlight></codeline>
<codeline lineno="595"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_FILES<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight></codeline>
<codeline lineno="596"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_FUNCTIONS<sp/><sp/><sp/>4</highlight></codeline>
<codeline lineno="597"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_VARIABLES<sp/><sp/><sp/>5</highlight></codeline>
<codeline lineno="598"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_TYPEDEFS<sp/><sp/><sp/><sp/>6</highlight></codeline>
<codeline lineno="599"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_ENUMS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight></codeline>
<codeline lineno="600"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_ENUMVALUES<sp/><sp/>8</highlight></codeline>
<codeline lineno="601"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_PROPERTIES<sp/><sp/>9</highlight></codeline>
<codeline lineno="602"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_EVENTS<sp/><sp/><sp/><sp/><sp/>10</highlight></codeline>
<codeline lineno="603"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_RELATED<sp/><sp/><sp/><sp/>11</highlight></codeline>
<codeline lineno="604"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_DEFINES<sp/><sp/><sp/><sp/>12</highlight></codeline>
<codeline lineno="605"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_GROUPS<sp/><sp/><sp/><sp/><sp/>13</highlight></codeline>
<codeline lineno="606"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SEARCH_INDEX_PAGES<sp/><sp/><sp/><sp/><sp/><sp/>14</highlight></codeline>
<codeline lineno="607"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>NUM_SEARCH_INDICES<sp/><sp/><sp/><sp/><sp/><sp/>15</highlight></codeline>
<codeline lineno="608"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SearchIndexList<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d1/d50/class_s_dict" kindref="compound" tooltip="Ordered dictionary of elements of type T.">SDict</ref>&lt;<sp/>QList&lt;Definition&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>SearchIndexList(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size=17)<sp/>:<sp/><ref refid="d1/d50/class_s_dict" kindref="compound" tooltip="Ordered dictionary of elements of type T.">SDict</ref>&lt;<sp/><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt;<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref>&gt;<sp/>&gt;(size,FALSE)<sp/></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d50/class_s_dict_1ac5ed340a2e6b4b4fb8398254cd35ef55" kindref="member">setAutoDelete</ref>(TRUE);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/>~SearchIndexList()<sp/>{}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d50/class_s_dict_1a121842d9858421076b81ed663034d62c" kindref="member">append</ref>(<ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*d)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;Definition&gt;</ref><sp/>*l<sp/>=<sp/><ref refid="d1/d50/class_s_dict_1aec67482d780157680d46f48a7ed5e7bd" kindref="member">find</ref>(d-&gt;<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l==0)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;Definition&gt;</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d50/class_s_dict" kindref="compound" tooltip="Ordered dictionary of elements of type T.">SDict&lt; QList&lt;Definition&gt;</ref><sp/>&gt;<ref refid="d1/d50/class_s_dict_1a121842d9858421076b81ed663034d62c" kindref="member">::append</ref>(d-&gt;<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>(),l);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l-&gt;append(d);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d1/d50/class_s_dict_1a99cd2f7d27403649ab8b7e60d06f487e" kindref="member">compareItems</ref>(QCollection::Item<sp/>item1,<sp/>QCollection::Item<sp/>item2)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;Definition&gt;</ref><sp/>*md1=(<ref refid="db/daa/class_q_list" kindref="compound">QList&lt;Definition&gt;</ref><sp/>*)item1;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;Definition&gt;</ref><sp/>*md2=(<ref refid="db/daa/class_q_list" kindref="compound">QList&lt;Definition&gt;</ref><sp/>*)item2;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>n1<sp/>=<sp/>md1-&gt;first()-&gt;localName();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>n2<sp/>=<sp/>md2-&gt;first()-&gt;localName();</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>qstricmp(n1.data(),n2.data());</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal">};</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addMemberToSearchIndex(</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SearchIndexList<sp/>symbols[NUM_SEARCH_INDICES][MEMBER_INDEX_ENTRIES],</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>symbolCount[NUM_SEARCH_INDICES],</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*md)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hideFriendCompounds<sp/>=<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;HIDE_FRIEND_COMPOUNDS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLinkable<sp/>=<sp/>md-&gt;<ref refid="da/d09/class_member_def_1ac1e70d83e731e91e68871d8b7908351a" kindref="member">isLinkable</ref>();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref><sp/>*cd=0;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><ref refid="d0/d07/class_namespace_def" kindref="compound" tooltip="A model of a namespace symbol.">NamespaceDef</ref><sp/>*nd=0;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fd=0;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><ref refid="d8/d09/class_group_def" kindref="compound" tooltip="A model of a group of symbols.">GroupDef</ref><sp/>*gd=0;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isLinkable<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((cd=md-&gt;getClassDef())<sp/>&amp;&amp;<sp/>cd-&gt;<ref refid="d1/dcf/class_class_def_1a1ea1c676588739bbabf189cf2b343c56" kindref="member" tooltip="return TRUE iff a link to this class is possible (either within this project, or as a cross-reference...">isLinkable</ref>()<sp/>&amp;&amp;<sp/>cd-&gt;<ref refid="d1/dcf/class_class_def_1af6d871db00924a443ef14c86c830c0d9" kindref="member" tooltip="Returns the template master of which this class is an instance.">templateMaster</ref>()==0)<sp/>||</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((gd=md-&gt;getGroupDef())<sp/>&amp;&amp;<sp/>gd-&gt;<ref refid="d8/d09/class_group_def_1a9338f966e744542f22c5bbc630b80f95" kindref="member">isLinkable</ref>())</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>n<sp/>=<sp/>md-&gt;<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>uchar<sp/>charCode<sp/>=<sp/>(uchar)n.at(0);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>letter<sp/>=<sp/>charCode&lt;128<sp/>?<sp/>tolower(charCode)<sp/>:<sp/>charCode;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n.isEmpty())<sp/></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFriendToHide<sp/>=<sp/>hideFriendCompounds<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(QCString(md-&gt;typeString())==</highlight><highlight class="stringliteral">&quot;friend<sp/>class&quot;</highlight><highlight class="normal"><sp/>||<sp/></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString(md-&gt;typeString())==</highlight><highlight class="stringliteral">&quot;friend<sp/>struct&quot;</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString(md-&gt;typeString())==</highlight><highlight class="stringliteral">&quot;friend<sp/>union&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(md-&gt;isFriend()<sp/>&amp;&amp;<sp/>isFriendToHide))</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_ALL][letter].append(md);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_ALL]++;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isFunction()<sp/>||<sp/>md-&gt;isSlot()<sp/>||<sp/>md-&gt;isSignal())</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_FUNCTIONS][letter].append(md);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_FUNCTIONS]++;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isVariable())</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_VARIABLES][letter].append(md);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_VARIABLES]++;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isTypedef())</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_TYPEDEFS][letter].append(md);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_TYPEDEFS]++;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isEnumerate())</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_ENUMS][letter].append(md);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_ENUMS]++;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isEnumValue())</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_ENUMVALUES][letter].append(md);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_ENUMVALUES]++;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isProperty())</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_PROPERTIES][letter].append(md);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_PROPERTIES]++;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isEvent())</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_EVENTS][letter].append(md);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_EVENTS]++;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isRelated()<sp/>||<sp/>md-&gt;isForeign()<sp/>||</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(md-&gt;isFriend()<sp/>&amp;&amp;<sp/>!isFriendToHide))</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_RELATED][letter].append(md);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_RELATED]++;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isLinkable<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(((nd=md-&gt;getNamespaceDef())<sp/>&amp;&amp;<sp/>nd-&gt;<ref refid="d0/d07/class_namespace_def_1a5bbc047ff9799f2f74668168afacc0b2" kindref="member">isLinkable</ref>())<sp/>||<sp/></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((fd=md-&gt;getFileDef())<sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>fd-&gt;<ref refid="de/db0/class_file_def_1af677cee8c349fa10532b0aa5c09df396" kindref="member">isLinkable</ref>())</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>n<sp/>=<sp/>md-&gt;<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>();</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>uchar<sp/>charCode<sp/>=<sp/>(uchar)n.at(0);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>letter<sp/>=<sp/>charCode&lt;128<sp/>?<sp/>tolower(charCode)<sp/>:<sp/>charCode;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n.isEmpty())<sp/></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_ALL][letter].append(md);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_ALL]++;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isFunction())<sp/></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_FUNCTIONS][letter].append(md);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_FUNCTIONS]++;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isVariable())<sp/></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_VARIABLES][letter].append(md);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_VARIABLES]++;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isTypedef())</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_TYPEDEFS][letter].append(md);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_TYPEDEFS]++;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isEnumerate())</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_ENUMS][letter].append(md);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_ENUMS]++;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isEnumValue())</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_ENUMVALUES][letter].append(md);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_ENUMVALUES]++;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;isDefine())</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols[SEARCH_INDEX_DEFINES][letter].append(md);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount[SEARCH_INDEX_DEFINES]++;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QCString<sp/>searchId(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;s)</highlight></codeline>
<codeline lineno="761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>QCString<sp/>result;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;s.length();i++)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>c=s.at(i);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((c&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(c&gt;=</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c&lt;=</highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>||<sp/>(c&gt;=</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>c&lt;=</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result+=(char)tolower(c);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val[4];</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(val,</highlight><highlight class="stringliteral">&quot;_%02x&quot;</highlight><highlight class="normal">,(uchar)c);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result+=val;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>g_searchIndexCount[NUM_SEARCH_INDICES];</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SearchIndexList<sp/>g_searchIndexSymbols[NUM_SEARCH_INDICES][MEMBER_INDEX_ENTRIES];</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*g_searchIndexName[NUM_SEARCH_INDICES]<sp/>=<sp/></highlight></codeline>
<codeline lineno="785"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;classes&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;namespaces&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;files&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;functions&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;variables&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;typedefs&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;enums&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;enumvalues&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;properties&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;events&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;related&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;defines&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;groups&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pages&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal">};</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SearchIndexCategoryMapping</highlight></codeline>
<codeline lineno="805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>SearchIndexCategoryMapping()</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_ALL]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>theTranslator-&gt;trAll();</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_CLASSES]<sp/><sp/><sp/><sp/>=<sp/>theTranslator-&gt;trClasses();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_NAMESPACES]<sp/>=<sp/>theTranslator-&gt;trNamespace(TRUE,FALSE);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_FILES]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>theTranslator-&gt;trFile(TRUE,FALSE);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_FUNCTIONS]<sp/><sp/>=<sp/>theTranslator-&gt;trFunctions();</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_VARIABLES]<sp/><sp/>=<sp/>theTranslator-&gt;trVariables();</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_TYPEDEFS]<sp/><sp/><sp/>=<sp/>theTranslator-&gt;trTypedefs();</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_ENUMS]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>theTranslator-&gt;trEnumerations();</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_ENUMVALUES]<sp/>=<sp/>theTranslator-&gt;trEnumerationValues();</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_PROPERTIES]<sp/>=<sp/>theTranslator-&gt;trProperties();</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_EVENTS]<sp/><sp/><sp/><sp/><sp/>=<sp/>theTranslator-&gt;trEvents();</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_RELATED]<sp/><sp/><sp/><sp/>=<sp/>theTranslator-&gt;trFriends();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_DEFINES]<sp/><sp/><sp/><sp/>=<sp/>theTranslator-&gt;trDefines();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_GROUPS]<sp/><sp/><sp/><sp/><sp/>=<sp/>theTranslator-&gt;trGroup(TRUE,FALSE);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>categoryLabel[SEARCH_INDEX_PAGES]<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>theTranslator-&gt;trPage(TRUE,FALSE);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>categoryLabel[NUM_SEARCH_INDICES];</highlight></codeline>
<codeline lineno="826"><highlight class="normal">};</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeJavascriptSearchIndex()</highlight></codeline>
<codeline lineno="829"><highlight class="normal">{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Config_getBool(</highlight><highlight class="stringliteral">&quot;GENERATE_HTML&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>ClassSDict::Iterator<sp/>cli(*Doxygen::classSDict);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref><sp/>*cd;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;(cd=cli.current());++cli)</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>uchar<sp/>charCode<sp/>=<sp/>(uchar)cd-&gt;<ref refid="d5/dcc/class_definition_1ae4fa9ca0807ec16be5b9b4606a5f4ba9" kindref="member">localName</ref>().at(0);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>letter<sp/>=<sp/>charCode&lt;128<sp/>?<sp/>tolower(charCode)<sp/>:<sp/>charCode;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cd-&gt;<ref refid="d1/dcf/class_class_def_1a1ea1c676588739bbabf189cf2b343c56" kindref="member" tooltip="return TRUE iff a link to this class is possible (either within this project, or as a cross-reference...">isLinkable</ref>()<sp/>&amp;&amp;<sp/>isId(letter))</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexSymbols[SEARCH_INDEX_ALL][letter].append(cd);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexSymbols[SEARCH_INDEX_CLASSES][letter].append(cd);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexCount[SEARCH_INDEX_ALL]++;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexCount[SEARCH_INDEX_CLASSES]++;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>namespaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>NamespaceSDict::Iterator<sp/>nli(*Doxygen::namespaceSDict);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><ref refid="d0/d07/class_namespace_def" kindref="compound" tooltip="A model of a namespace symbol.">NamespaceDef</ref><sp/>*nd;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;(nd=nli.current());++nli)</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>uchar<sp/>charCode<sp/>=<sp/>(uchar)nd-&gt;<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>().at(0);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>letter<sp/>=<sp/>charCode&lt;128<sp/>?<sp/>tolower(charCode)<sp/>:<sp/>charCode;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nd-&gt;<ref refid="d0/d07/class_namespace_def_1a5bbc047ff9799f2f74668168afacc0b2" kindref="member">isLinkable</ref>()<sp/>&amp;&amp;<sp/>isId(letter))</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexSymbols[SEARCH_INDEX_ALL][letter].append(nd);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexSymbols[SEARCH_INDEX_NAMESPACES][letter].append(nd);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexCount[SEARCH_INDEX_ALL]++;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexCount[SEARCH_INDEX_NAMESPACES]++;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><ref refid="db/d32/class_file_name_list_iterator" kindref="compound" tooltip="Iterator for FileName objects in a FileNameList.">FileNameListIterator</ref><sp/>fnli(*Doxygen::inputNameList);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><ref refid="dd/db9/class_file_name" kindref="compound" tooltip="Class representing all files with a certain base name.">FileName</ref><sp/>*fn;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;(fn=fnli.current());++fnli)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d01/class_file_name_iterator" kindref="compound" tooltip="Iterator for FileDef objects in a FileName list.">FileNameIterator</ref><sp/>fni(*fn);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fd;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;(fd=fni.current());++fni)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uchar<sp/>charCode<sp/>=<sp/>(uchar)fd-&gt;<ref refid="de/db0/class_file_def_1a80989971450b35c785a8fe0002e1c2db" kindref="member">name</ref>().at(0);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>letter<sp/>=<sp/>charCode&lt;128<sp/>?<sp/>tolower(charCode)<sp/>:<sp/>charCode;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd-&gt;<ref refid="de/db0/class_file_def_1af677cee8c349fa10532b0aa5c09df396" kindref="member">isLinkable</ref>()<sp/>&amp;&amp;<sp/>isId(letter))</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexSymbols[SEARCH_INDEX_ALL][letter].append(fd);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexSymbols[SEARCH_INDEX_FILES][letter].append(fd);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexCount[SEARCH_INDEX_ALL]++;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexCount[SEARCH_INDEX_FILES]++;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>class<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberNameSDict::Iterator<sp/>mnli(*Doxygen::memberNameSDict);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d7e/class_member_name" kindref="compound" tooltip="Class representing all MemberDef objects with the same name.">MemberName</ref><sp/>*mn;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>member<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mnli.toFirst();(mn=mnli.current());++mnli)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*md;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d28/class_member_name_iterator" kindref="compound" tooltip="Iterator for MemberDef objects in a MemberName list.">MemberNameIterator</ref><sp/>mni(*mn);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>member<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mni.toFirst();(md=mni.current());++mni)</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addMemberToSearchIndex(g_searchIndexSymbols,g_searchIndexCount,md);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>file/namespace<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberNameSDict::Iterator<sp/>fnli(*Doxygen::functionNameSDict);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d7e/class_member_name" kindref="compound" tooltip="Class representing all MemberDef objects with the same name.">MemberName</ref><sp/>*mn;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>member<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fnli.toFirst();(mn=fnli.current());++fnli)</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*md;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d28/class_member_name_iterator" kindref="compound" tooltip="Iterator for MemberDef objects in a MemberName list.">MemberNameIterator</ref><sp/>mni(*mn);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>member<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mni.toFirst();(md=mni.current());++mni)</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addMemberToSearchIndex(g_searchIndexSymbols,g_searchIndexCount,md);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>groups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>GroupSDict::Iterator<sp/>gli(*Doxygen::groupSDict);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><ref refid="d8/d09/class_group_def" kindref="compound" tooltip="A model of a group of symbols.">GroupDef</ref><sp/>*gd;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gli.toFirst();(gd=gli.current());++gli)</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gd-&gt;<ref refid="d8/d09/class_group_def_1a9338f966e744542f22c5bbc630b80f95" kindref="member">isLinkable</ref>())</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>title<sp/>=<sp/>gd-&gt;groupTitle();</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!title.isEmpty())<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>able<sp/>searching<sp/>for<sp/>all<sp/>word<sp/>in<sp/>the<sp/>title</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uchar<sp/>charCode<sp/>=<sp/>title.at(0);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>letter<sp/>=<sp/>charCode&lt;128<sp/>?<sp/>tolower(charCode)<sp/>:<sp/>charCode;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isId(letter))</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexSymbols[SEARCH_INDEX_ALL][letter].append(gd);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexSymbols[SEARCH_INDEX_GROUPS][letter].append(gd);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexCount[SEARCH_INDEX_ALL]++;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexCount[SEARCH_INDEX_GROUPS]++;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>pages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>PageSDict::Iterator<sp/>pdi(*Doxygen::pageSDict);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><ref refid="dd/d41/class_page_def" kindref="compound" tooltip="A model of a page symbol.">PageDef</ref><sp/>*pd=0;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pdi.toFirst();(pd=pdi.current());++pdi)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pd-&gt;<ref refid="dd/d41/class_page_def_1acebec06d0ff3e2e184eeba1d8e281a9b" kindref="member">isLinkable</ref>())</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>title<sp/>=<sp/>pd-&gt;title();</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!title.isEmpty())</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uchar<sp/>charCode<sp/>=<sp/>title.at(0);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>letter<sp/>=<sp/>charCode&lt;128<sp/>?<sp/>tolower(charCode)<sp/>:<sp/>charCode;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isId(letter))</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexSymbols[SEARCH_INDEX_ALL][letter].append(pd);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexSymbols[SEARCH_INDEX_PAGES][letter].append(pd);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexCount[SEARCH_INDEX_ALL]++;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexCount[SEARCH_INDEX_PAGES]++;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Doxygen::mainPage)</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>title<sp/>=<sp/>Doxygen::mainPage-&gt;title();</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!title.isEmpty())</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uchar<sp/>charCode<sp/>=<sp/>title.at(0);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>letter<sp/>=<sp/>charCode&lt;128<sp/>?<sp/>tolower(charCode)<sp/>:<sp/>charCode;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isId(letter))</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexSymbols[SEARCH_INDEX_ALL][letter].append(Doxygen::mainPage);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexSymbols[SEARCH_INDEX_PAGES][letter].append(Doxygen::mainPage);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexCount[SEARCH_INDEX_ALL]++;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexCount[SEARCH_INDEX_PAGES]++;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sort<sp/>all<sp/>lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,p;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;NUM_SEARCH_INDICES;i++)</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p=0;p&lt;MEMBER_INDEX_ENTRIES;p++)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_searchIndexSymbols[i][p].count()&gt;0)</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_searchIndexSymbols[i][p].sort();</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>index<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/>QCString<sp/>searchDirName<sp/>=<sp/>Config_getString(</highlight><highlight class="stringliteral">&quot;HTML_OUTPUT&quot;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&quot;/search&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;NUM_SEARCH_INDICES;i++)</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p=0;p&lt;MEMBER_INDEX_ENTRIES;p++)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_searchIndexSymbols[i][p].count()&gt;0)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>baseName;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseName.sprintf(</highlight><highlight class="stringliteral">&quot;%s_%02x&quot;</highlight><highlight class="normal">,g_searchIndexName[i],p);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>fileName<sp/>=<sp/>searchDirName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+baseName+</highlight><highlight class="stringliteral">&quot;.html&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>dataFileName<sp/>=<sp/>searchDirName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+baseName+</highlight><highlight class="stringliteral">&quot;.js&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFile<sp/>outFile(fileName);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFile<sp/>dataOutFile(dataFileName);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outFile.open(IO_WriteOnly)<sp/>&amp;&amp;<sp/>dataOutFile.open(IO_WriteOnly))</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d3c/class_f_text_stream" kindref="compound" tooltip="Simplified and optimized version of QTextStream.">FTextStream</ref><sp/>t(&amp;outFile);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;!DOCTYPE<sp/>html<sp/>PUBLIC<sp/>\&quot;-//W3C//DTD<sp/>XHTML<sp/>1.0<sp/>Transitional//EN\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>\&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;&lt;/title&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;meta<sp/>http-equiv=\&quot;Content-Type\&quot;<sp/>content=\&quot;text/xhtml;charset=UTF-8\&quot;/&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;meta<sp/>name=\&quot;generator\&quot;<sp/>content=\&quot;Doxygen<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>versionString<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;link<sp/>rel=\&quot;stylesheet\&quot;<sp/>type=\&quot;text/css\&quot;<sp/>href=\&quot;search.css\&quot;/&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;script<sp/>type=\&quot;text/javascript\&quot;<sp/>src=\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>baseName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.js\&quot;&gt;&lt;/script&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;script<sp/>type=\&quot;text/javascript\&quot;<sp/>src=\&quot;search.js\&quot;&gt;&lt;/script&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/head&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;body<sp/>class=\&quot;SRPage\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;div<sp/>id=\&quot;SRIndex\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;div<sp/>class=\&quot;SRStatus\&quot;<sp/>id=\&quot;Loading\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>theTranslator-&gt;trLoading()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/div&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;div<sp/>id=\&quot;SRResults\&quot;&gt;&lt;/div&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="comment">//<sp/>here<sp/>the<sp/>results<sp/>will<sp/>be<sp/>inserted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;script<sp/>type=\&quot;text/javascript\&quot;&gt;&lt;!--&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;createResults();&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>will<sp/>insert<sp/>the<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;--&gt;&lt;/script&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;div<sp/>class=\&quot;SRStatus\&quot;<sp/>id=\&quot;Searching\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>theTranslator-&gt;trSearching()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/div&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;div<sp/>class=\&quot;SRStatus\&quot;<sp/>id=\&quot;NoMatches\&quot;&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>theTranslator-&gt;trNoMatches()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/div&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;script<sp/>type=\&quot;text/javascript\&quot;&gt;&lt;!--&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;document.getElementById(\&quot;Loading\&quot;).style.display=\&quot;none\&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;document.getElementById(\&quot;NoMatches\&quot;).style.display=\&quot;none\&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;var<sp/>searchResults<sp/>=<sp/>new<sp/>SearchResults(\&quot;searchResults\&quot;);&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;searchResults.Search();&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;--&gt;&lt;/script&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/div&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="comment">//<sp/>SRIndex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/body&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/html&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d3c/class_f_text_stream" kindref="compound" tooltip="Simplified and optimized version of QTextStream.">FTextStream</ref><sp/>ti(&amp;dataOutFile);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;var<sp/>searchData=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>searchData[]<sp/>=<sp/>array<sp/>of<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>searchData[x][0]<sp/>=<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>searchData[x][1]<sp/>=<sp/>[<sp/>name<sp/>+<sp/>child1<sp/>+<sp/>child2<sp/>+<sp/>..<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>searchData[x][1][0]<sp/>=<sp/>name<sp/>as<sp/>shown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>searchData[x][1][y+1]<sp/>=<sp/>info<sp/>for<sp/>child<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>searchData[x][1][y+1][0]<sp/>=<sp/>url</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>searchData[x][1][y+1][1]<sp/>=<sp/>1<sp/>=&gt;<sp/>target=&quot;_parent&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>searchData[x][1][y+1][2]<sp/>=<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstEntry=TRUE;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d50/class_s_dict" kindref="compound" tooltip="Ordered dictionary of elements of type T.">SDict&lt;QList&lt;Definition&gt;</ref><sp/>&gt;::Iterator<sp/>li(g_searchIndexSymbols[i][p]);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;Definition&gt;</ref><sp/>*dl;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>itemCount=0;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(li.toFirst();(dl=li.current());++li)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*d<sp/>=<sp/>dl-&gt;first();</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>d-&gt;<ref refid="d5/dcc/class_definition_1ae4fa9ca0807ec16be5b9b4606a5f4ba9" kindref="member">localName</ref>();</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!firstEntry)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstEntry=FALSE;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>dispName<sp/>=<sp/>d-&gt;<ref refid="d5/dcc/class_definition_1ae4fa9ca0807ec16be5b9b4606a5f4ba9" kindref="member">localName</ref>();</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="d9/d4a/class_definition_intf_1ac8ee00bc1af5558ae37f6896d16f5a3a" kindref="member">definitionType</ref>()==Definition::TypeGroup)</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispName<sp/>=<sp/>((<ref refid="d8/d09/class_group_def" kindref="compound" tooltip="A model of a group of symbols.">GroupDef</ref>*)d)-&gt;groupTitle();</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="d9/d4a/class_definition_intf_1ac8ee00bc1af5558ae37f6896d16f5a3a" kindref="member">definitionType</ref>()==Definition::TypePage)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispName<sp/>=<sp/>((<ref refid="dd/d41/class_page_def" kindref="compound" tooltip="A model of a page symbol.">PageDef</ref>*)d)-&gt;title();</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>[&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>searchId(dispName)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;,[&apos;&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>convertToXML(dispName)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;,[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dl-&gt;count()==1)<sp/></highlight><highlight class="comment">//<sp/>item<sp/>with<sp/>a<sp/>unique<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/><sp/>*md<sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMemberDef<sp/>=<sp/>d-&gt;<ref refid="d9/d4a/class_definition_intf_1ac8ee00bc1af5558ae37f6896d16f5a3a" kindref="member">definitionType</ref>()==Definition::TypeMember;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isMemberDef)<sp/>md<sp/>=<sp/>(<ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref>*)d;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>anchor<sp/>=<sp/>d-&gt;<ref refid="d5/dcc/class_definition_1a56e91f9b76f41208a22cfb2336871604" kindref="member">anchor</ref>();</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>externalRef(</highlight><highlight class="stringliteral">&quot;../&quot;</highlight><highlight class="normal">,d-&gt;<ref refid="d5/dcc/class_definition_1a266bc8f350de23e01335d4d674995dcf" kindref="member">getReference</ref>(),TRUE)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>d-&gt;<ref refid="d5/dcc/class_definition_1acabecdc6bfda2015811eed5f3436322d" kindref="member">getOutputFileBase</ref>()<sp/>&lt;&lt;<sp/>Doxygen::htmlFileExtension;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!anchor.isEmpty())</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anchor;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>extLinksInWindow<sp/>=<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;EXT_LINKS_IN_WINDOW&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!extLinksInWindow<sp/>||<sp/>d-&gt;<ref refid="d5/dcc/class_definition_1a266bc8f350de23e01335d4d674995dcf" kindref="member">getReference</ref>().isEmpty())</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;getOuterScope()!=Doxygen::globalScope)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>convertToXML(d-&gt;getOuterScope()-&gt;<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md)</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fd<sp/>=<sp/>md-&gt;<ref refid="d5/dcc/class_definition_1aba56816cd19b24f234c7fd3f4f7ebe47" kindref="member">getBodyDef</ref>();</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd==0)<sp/>fd<sp/>=<sp/>md-&gt;getFileDef();</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd)</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>convertToXML(fd-&gt;<ref refid="d5/dcc/class_definition_1ae4fa9ca0807ec16be5b9b4606a5f4ba9" kindref="member">localName</ref>())<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>multiple<sp/>items<sp/>with<sp/>the<sp/>same<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QListIterator&lt;Definition&gt;<sp/>di(*dl);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overloadedFunction<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*prevScope<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childCount=0;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(di.toFirst();(d=di.current());)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++di;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*scope<sp/><sp/><sp/><sp/><sp/>=<sp/>d-&gt;getOuterScope();</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*next<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>di.current();</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/dcc/class_definition" kindref="compound" tooltip="The common base class of all entity definitions found in the sources.">Definition</ref><sp/>*nextScope<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/><sp/>*md<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMemberDef<sp/>=<sp/>d-&gt;<ref refid="d9/d4a/class_definition_intf_1ac8ee00bc1af5558ae37f6896d16f5a3a" kindref="member">definitionType</ref>()==Definition::TypeMember;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isMemberDef)<sp/>md<sp/>=<sp/>(<ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref>*)d;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next)<sp/>nextScope<sp/>=<sp/>next-&gt;getOuterScope();</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>anchor<sp/>=<sp/>d-&gt;<ref refid="d5/dcc/class_definition_1a56e91f9b76f41208a22cfb2336871604" kindref="member">anchor</ref>();</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(childCount&gt;0)</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;],[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>externalRef(</highlight><highlight class="stringliteral">&quot;../&quot;</highlight><highlight class="normal">,d-&gt;<ref refid="d5/dcc/class_definition_1a266bc8f350de23e01335d4d674995dcf" kindref="member">getReference</ref>(),TRUE)</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>d-&gt;<ref refid="d5/dcc/class_definition_1acabecdc6bfda2015811eed5f3436322d" kindref="member">getOutputFileBase</ref>()<sp/>&lt;&lt;<sp/>Doxygen::htmlFileExtension;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!anchor.isEmpty())</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>anchor;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>extLinksInWindow<sp/>=<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;EXT_LINKS_IN_WINDOW&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!extLinksInWindow<sp/>||<sp/>d-&gt;<ref refid="d5/dcc/class_definition_1a266bc8f350de23e01335d4d674995dcf" kindref="member">getReference</ref>().isEmpty())</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0,&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found=FALSE;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overloadedFunction<sp/>=<sp/>((prevScope!=0<sp/>&amp;&amp;<sp/>scope==prevScope)<sp/>||</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(scope<sp/>&amp;&amp;<sp/>scope==nextScope)</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>&amp;&amp;<sp/>md<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(md-&gt;isFunction()<sp/>||<sp/>md-&gt;isSlot());</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>prefix;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md)<sp/>prefix=convertToXML(md-&gt;<ref refid="d5/dcc/class_definition_1ae4fa9ca0807ec16be5b9b4606a5f4ba9" kindref="member">localName</ref>());</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overloadedFunction)<sp/></highlight><highlight class="comment">//<sp/>overloaded<sp/>member<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix+=convertToXML(md-&gt;argsString());<sp/></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>show<sp/>argument<sp/>list<sp/>to<sp/>disambiguate<sp/>overloaded<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md)<sp/></highlight><highlight class="comment">//<sp/>unique<sp/>member<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix+=</highlight><highlight class="stringliteral">&quot;()&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>only<sp/>to<sp/>show<sp/>it<sp/>is<sp/>a<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>name;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="d9/d4a/class_definition_intf_1ac8ee00bc1af5558ae37f6896d16f5a3a" kindref="member">definitionType</ref>()==Definition::TypeClass)</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>convertToXML(((<ref refid="d1/dcf/class_class_def" kindref="compound" tooltip="A class representing of a compound symbol.">ClassDef</ref>*)d)-&gt;displayName());</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="d9/d4a/class_definition_intf_1ac8ee00bc1af5558ae37f6896d16f5a3a" kindref="member">definitionType</ref>()==Definition::TypeNamespace)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>convertToXML(((<ref refid="d0/d07/class_namespace_def" kindref="compound" tooltip="A model of a namespace symbol.">NamespaceDef</ref>*)d)-&gt;displayName());</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scope==0<sp/>||<sp/>scope==Doxygen::globalScope)<sp/></highlight><highlight class="comment">//<sp/>in<sp/>global<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md)</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref><sp/>*fd<sp/>=<sp/>md-&gt;<ref refid="d5/dcc/class_definition_1aba56816cd19b24f234c7fd3f4f7ebe47" kindref="member">getBodyDef</ref>();</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd==0)<sp/>fd<sp/>=<sp/>md-&gt;getFileDef();</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd)</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!prefix.isEmpty())<sp/>prefix+=</highlight><highlight class="stringliteral">&quot;:&amp;#160;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>prefix<sp/>+<sp/>convertToXML(fd-&gt;<ref refid="d5/dcc/class_definition_1ae4fa9ca0807ec16be5b9b4606a5f4ba9" kindref="member">localName</ref>());</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md<sp/>&amp;&amp;<sp/>(md-&gt;getClassDef()<sp/>||<sp/>md-&gt;getNamespaceDef()))<sp/></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>member<sp/>in<sp/>class<sp/>or<sp/>namespace<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member" tooltip="Language as given by extension.">SrcLangExt</ref><sp/>lang<sp/>=<sp/>md-&gt;<ref refid="d5/dcc/class_definition_1a55485230d99cc877348db64f01dde092" kindref="member" tooltip="Returns the programming language this definition was written in.">getLanguage</ref>();</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>convertToXML(d-&gt;getOuterScope()-&gt;<ref refid="d5/dcc/class_definition_1aacd9b72da80deb37974a18d2001ed715" kindref="member">qualifiedName</ref>())<sp/></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>getLanguageSpecificSeparator(lang)<sp/>+<sp/>prefix;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scope)<sp/></highlight><highlight class="comment">//<sp/>some<sp/>thing<sp/>else?<sp/>-&gt;<sp/>show<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>prefix<sp/>+<sp/>convertToXML(scope-&gt;<ref refid="d5/dcc/class_definition_1a99481361779e85f0c1556709de7d9e5b" kindref="member">name</ref>());</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)<sp/></highlight><highlight class="comment">//<sp/>fallback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">+theTranslator-&gt;trGlobalNamespace()+</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevScope<sp/>=<sp/>scope;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>childCount++;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemCount++;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!firstEntry)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;];&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>file<sp/>&apos;%s&apos;<sp/>for<sp/>writing...\n&quot;</highlight><highlight class="normal">,fileName.data());</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/>f(searchDirName+</highlight><highlight class="stringliteral">&quot;/search.js&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.open(IO_WriteOnly))</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d3c/class_f_text_stream" kindref="compound" tooltip="Simplified and optimized version of QTextStream.">FTextStream</ref><sp/>t(&amp;f);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;//<sp/>Search<sp/>script<sp/>generated<sp/>by<sp/>doxygen&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;//<sp/>Copyright<sp/>(C)<sp/>2009<sp/>by<sp/>Dimitri<sp/>van<sp/>Heesch.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;//<sp/>The<sp/>code<sp/>in<sp/>this<sp/>file<sp/>is<sp/>loosly<sp/>based<sp/>on<sp/>main.js,<sp/>part<sp/>of<sp/>Natural<sp/>Docs,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;//<sp/>which<sp/>is<sp/>Copyright<sp/>(C)<sp/>2003-2008<sp/>Greg<sp/>Valure&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;//<sp/>Natural<sp/>Docs<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>GPL.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;var<sp/>indexSectionsWithContent<sp/>=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first=TRUE;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;NUM_SEARCH_INDICES;i++)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_searchIndexCount[i]&gt;0)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first)<sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p=0;p&lt;MEMBER_INDEX_ENTRIES;p++)</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>(g_searchIndexSymbols[i][p].count()&gt;0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first=FALSE;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first)<sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;};&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;var<sp/>indexSectionNames<sp/>=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first=TRUE;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j=0;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;NUM_SEARCH_INDICES;i++)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_searchIndexCount[i]&gt;0)</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first)<sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>g_searchIndexName[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first=FALSE;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first)<sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;};&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>search_script;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>QFile<sp/>f(searchDirName+</highlight><highlight class="stringliteral">&quot;/nomatches.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.open(IO_WriteOnly))</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d3c/class_f_text_stream" kindref="compound" tooltip="Simplified and optimized version of QTextStream.">FTextStream</ref><sp/>t(&amp;f);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;!DOCTYPE<sp/>html<sp/>PUBLIC<sp/>\&quot;-//W3C//DTD<sp/>XHTML<sp/>1.0<sp/>Transitional//EN\&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;&lt;/title&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;meta<sp/>http-equiv=\&quot;Content-Type\&quot;<sp/>content=\&quot;text/xhtml;charset=UTF-8\&quot;/&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;link<sp/>rel=\&quot;stylesheet\&quot;<sp/>type=\&quot;text/css\&quot;<sp/>href=\&quot;search.css\&quot;/&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;script<sp/>type=\&quot;text/javascript\&quot;<sp/>src=\&quot;search.js\&quot;&gt;&lt;/script&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/head&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;body<sp/>class=\&quot;SRPage\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;div<sp/>id=\&quot;SRIndex\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;div<sp/>class=\&quot;SRStatus\&quot;<sp/>id=\&quot;NoMatches\&quot;&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>theTranslator-&gt;trNoMatches()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/div&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/div&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/body&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/html&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>Doxygen::indexList-&gt;addStyleSheetFile(</highlight><highlight class="stringliteral">&quot;search/search.js&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeSearchCategories(<ref refid="dc/d3c/class_f_text_stream" kindref="compound" tooltip="Simplified and optimized version of QTextStream.">FTextStream</ref><sp/>&amp;t)</highlight></codeline>
<codeline lineno="1333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SearchIndexCategoryMapping<sp/>map;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j=0;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;NUM_SEARCH_INDICES;i++)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_searchIndexCount[i]&gt;0)</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;a<sp/>class=\&quot;SelectItem\&quot;<sp/>href=\&quot;javascript:void(0)\&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;onclick=\&quot;searchBox.OnSelectItem(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)\&quot;&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;span<sp/>class=\&quot;SelectionMark\&quot;&gt;&amp;#160;&lt;/span&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>convertToXML(map.categoryLabel[i])</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/a&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initSearchIndexer()</highlight></codeline>
<codeline lineno="1353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>searchEngine<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;SEARCHENGINE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>serverBasedSearch<sp/>=<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;SERVER_BASED_SEARCH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>externalSearch<sp/><sp/><sp/><sp/>=<sp/>Config_getBool(</highlight><highlight class="stringliteral">&quot;EXTERNAL_SEARCH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(searchEngine<sp/>&amp;&amp;<sp/>serverBasedSearch)</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(externalSearch)<sp/></highlight><highlight class="comment">//<sp/>external<sp/>tools<sp/>produce<sp/>search<sp/>index<sp/>and<sp/>engine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Doxygen::searchIndex<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/d83/class_search_index_external" kindref="compound">SearchIndexExternal</ref>;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>doxygen<sp/>produces<sp/>search<sp/>index<sp/>and<sp/>engine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Doxygen::searchIndex<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="da/d36/class_search_index" kindref="compound">SearchIndex</ref>;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>no<sp/>search<sp/>engine<sp/>or<sp/>pure<sp/>javascript<sp/>based<sp/>search<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>Doxygen::searchIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finializeSearchIndexer()</highlight></codeline>
<codeline lineno="1375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>Doxygen::searchIndex;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/searchindex.cpp"/>
  </compounddef>
</doxygen>
