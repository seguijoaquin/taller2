<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="d7/d5b/formula_8cpp" kind="file">
    <compoundname>formula.cpp</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">qfile.h</includes>
    <includes local="no">qfileinfo.h</includes>
    <includes local="no">qtextstream.h</includes>
    <includes local="no">qdir.h</includes>
    <includes refid="d3/d9a/formula_8h" local="yes">formula.h</includes>
    <includes refid="d5/db2/image_8h" local="yes">image.h</includes>
    <includes refid="d8/d3c/util_8h" local="yes">util.h</includes>
    <includes refid="d2/d0d/message_8h" local="yes">message.h</includes>
    <includes refid="db/d16/config_8h" local="yes">config.h</includes>
    <includes refid="d2/de2/portable_8h" local="yes">portable.h</includes>
    <includes refid="d1/db5/index_8h" local="yes">index.h</includes>
    <includes refid="d1/da1/doxygen_8h" local="yes">doxygen.h</includes>
    <includes refid="df/d83/ftextstream_8h" local="yes">ftextstream.h</includes>
    <incdepgraph>
      <node id="2080">
        <label>qcstring.h</label>
      </node>
      <node id="2088">
        <label>qgstring.h</label>
      </node>
      <node id="2075">
        <label>image.h</label>
        <link refid="d5/db2/image_8h_source"/>
        <childnode refid="2076" relation="include">
        </childnode>
      </node>
      <node id="2068">
        <label>qfile.h</label>
      </node>
      <node id="2093">
        <label>qdatetime.h</label>
      </node>
      <node id="2084">
        <label>qstrlist.h</label>
      </node>
      <node id="2076">
        <label>qglobal.h</label>
      </node>
      <node id="2072">
        <label>formula.h</label>
        <link refid="d3/d9a/formula_8h_source"/>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2074" relation="include">
        </childnode>
      </node>
      <node id="2087">
        <label>qstring.h</label>
      </node>
      <node id="2066">
        <label>stdlib.h</label>
      </node>
      <node id="2097">
        <label>membergroup.h</label>
        <link refid="d9/d11/membergroup_8h_source"/>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2079" relation="include">
        </childnode>
      </node>
      <node id="2096">
        <label>sortdict.h</label>
        <link refid="d9/d21/sortdict_8h_source"/>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2074" relation="include">
        </childnode>
        <childnode refid="2095" relation="include">
        </childnode>
      </node>
      <node id="2100">
        <label>memberlist.h</label>
        <link refid="dd/d78/memberlist_8h_source"/>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2101" relation="include">
        </childnode>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2079" relation="include">
        </childnode>
      </node>
      <node id="2071">
        <label>qdir.h</label>
      </node>
      <node id="2094">
        <label>qcache.h</label>
      </node>
      <node id="2081">
        <label>message.h</label>
        <link refid="d2/d0d/message_8h_source"/>
        <childnode refid="2082" relation="include">
        </childnode>
      </node>
      <node id="2077">
        <label>util.h</label>
        <link refid="d8/d3c/util_8h"/>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2078" relation="include">
        </childnode>
        <childnode refid="2079" relation="include">
        </childnode>
      </node>
      <node id="2095">
        <label>qintdict.h</label>
      </node>
      <node id="2086">
        <label>qiodevice.h</label>
      </node>
      <node id="2065">
        <label>src/formula.cpp</label>
        <link refid="formula.cpp"/>
        <childnode refid="2066" relation="include">
        </childnode>
        <childnode refid="2067" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2069" relation="include">
        </childnode>
        <childnode refid="2070" relation="include">
        </childnode>
        <childnode refid="2071" relation="include">
        </childnode>
        <childnode refid="2072" relation="include">
        </childnode>
        <childnode refid="2075" relation="include">
        </childnode>
        <childnode refid="2077" relation="include">
        </childnode>
        <childnode refid="2081" relation="include">
        </childnode>
        <childnode refid="2083" relation="include">
        </childnode>
        <childnode refid="2089" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2085" relation="include">
        </childnode>
      </node>
      <node id="2083">
        <label>config.h</label>
        <link refid="db/d16/config_8h_source"/>
        <childnode refid="2084" relation="include">
        </childnode>
        <childnode refid="2074" relation="include">
        </childnode>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2085" relation="include">
        </childnode>
      </node>
      <node id="2090">
        <label>sys/types.h</label>
      </node>
      <node id="2079">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="2080" relation="include">
        </childnode>
      </node>
      <node id="2067">
        <label>unistd.h</label>
      </node>
      <node id="2073">
        <label>qlist.h</label>
      </node>
      <node id="2085">
        <label>ftextstream.h</label>
        <link refid="df/d83/ftextstream_8h_source"/>
        <childnode refid="2082" relation="include">
        </childnode>
        <childnode refid="2086" relation="include">
        </childnode>
        <childnode refid="2087" relation="include">
        </childnode>
        <childnode refid="2088" relation="include">
        </childnode>
      </node>
      <node id="2070">
        <label>qtextstream.h</label>
      </node>
      <node id="2092">
        <label>doxygen.h</label>
        <link refid="d1/da1/doxygen_8h_source"/>
        <childnode refid="2093" relation="include">
        </childnode>
        <childnode refid="2094" relation="include">
        </childnode>
        <childnode refid="2084" relation="include">
        </childnode>
        <childnode refid="2074" relation="include">
        </childnode>
        <childnode refid="2095" relation="include">
        </childnode>
        <childnode refid="2085" relation="include">
        </childnode>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2098" relation="include">
        </childnode>
        <childnode refid="2100" relation="include">
        </childnode>
      </node>
      <node id="2101">
        <label>memberdef.h</label>
        <link refid="d4/d46/memberdef_8h_source"/>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2079" relation="include">
        </childnode>
        <childnode refid="2099" relation="include">
        </childnode>
      </node>
      <node id="2078">
        <label>ctype.h</label>
      </node>
      <node id="2099">
        <label>definition.h</label>
        <link refid="df/da1/definition_8h_source"/>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2074" relation="include">
        </childnode>
        <childnode refid="2079" relation="include">
        </childnode>
      </node>
      <node id="2091">
        <label>index.h</label>
        <link refid="d1/db5/index_8h_source"/>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2080" relation="include">
        </childnode>
      </node>
      <node id="2069">
        <label>qfileinfo.h</label>
      </node>
      <node id="2098">
        <label>dirdef.h</label>
        <link refid="d6/d15/dirdef_8h_source"/>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2099" relation="include">
        </childnode>
        <childnode refid="2073" relation="include">
        </childnode>
      </node>
      <node id="2074">
        <label>qdict.h</label>
      </node>
      <node id="2089">
        <label>portable.h</label>
        <link refid="d2/de2/portable_8h"/>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2082" relation="include">
        </childnode>
        <childnode refid="2076" relation="include">
        </childnode>
      </node>
      <node id="2082">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1997-2013<sp/>by<sp/>Dimitri<sp/>van<sp/>Heesch.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and<sp/>distribute<sp/>this<sp/>software<sp/>and<sp/>its</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>documentation<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>is<sp/>hereby<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>granted.<sp/>No<sp/>representations<sp/>are<sp/>made<sp/>about<sp/>the<sp/>suitability<sp/>of<sp/>this<sp/>software<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>for<sp/>any<sp/>purpose.<sp/>It<sp/>is<sp/>provided<sp/>&quot;as<sp/>is&quot;<sp/>without<sp/>express<sp/>or<sp/>implied<sp/>warranty.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Documents<sp/>produced<sp/>by<sp/>Doxygen<sp/>are<sp/>derivative<sp/>works<sp/>derived<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>input<sp/>used<sp/>in<sp/>their<sp/>production;<sp/>they<sp/>are<sp/>not<sp/>affected<sp/>by<sp/>this<sp/>license.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qfileinfo.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qtextstream.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qdir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;formula.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;image.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d3c/util_8h" kindref="compound" tooltip="A bunch of utility functions.">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;message.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/de2/portable_8h" kindref="compound" tooltip="Portable versions of functions that are platform dependent.">portable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;index.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;doxygen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ftextstream.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">Formula::Formula(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count=0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>number<sp/>=<sp/>count++;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>form=text;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">Formula::~Formula()</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Formula::getId()</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>number;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FormulaList::generateBitmaps(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,y1,x2,y2;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>QDir<sp/>d(path);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>original<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d.exists())<sp/>{<sp/>err(</highlight><highlight class="stringliteral">&quot;Output<sp/>dir<sp/>%s<sp/>does<sp/>not<sp/>exist!\n&quot;</highlight><highlight class="normal">,path);<sp/>exit(1);<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>QCString<sp/>oldDir<sp/>=<sp/>QDir::currentDirPath().utf8();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>to<sp/>the<sp/>html<sp/>output<sp/>directory<sp/>(i.e.<sp/>path)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>QDir::setCurrent(d.absPath());</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>QDir<sp/>thisDir;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>a<sp/>latex<sp/>file<sp/>containing<sp/>one<sp/>formula<sp/>per<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>QCString<sp/>texName=</highlight><highlight class="stringliteral">&quot;_formulas.tex&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;int&gt;</ref><sp/>pagesToGenerate;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>pagesToGenerate.setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="d0/d60/class_formula_list_iterator" kindref="compound" tooltip="Iterator for Formula objects in a FormulaList.">FormulaListIterator</ref><sp/>fli(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="d2/db0/class_formula" kindref="compound" tooltip="Class representing a formula in the output.">Formula</ref><sp/>*formula;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>QFile<sp/>f(texName);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>formulaError=FALSE;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.open(IO_WriteOnly))</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d3c/class_f_text_stream" kindref="compound" tooltip="Simplified and optimized version of QTextStream.">FTextStream</ref><sp/>t(&amp;f);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Config_getBool(</highlight><highlight class="stringliteral">&quot;LATEX_BATCHMODE&quot;</highlight><highlight class="normal">))<sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\batchmode&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\documentclass{article}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\usepackage{epsfig}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>those<sp/>who<sp/>want<sp/>to<sp/>include<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s=Config_getList(</highlight><highlight class="stringliteral">&quot;EXTRA_PACKAGES&quot;</highlight><highlight class="normal">).first();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\usepackage{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s=Config_getList(</highlight><highlight class="stringliteral">&quot;EXTRA_PACKAGES&quot;</highlight><highlight class="normal">).next();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\pagestyle{empty}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\begin{document}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>page=0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fli.toFirst();(formula=fli.current());++fli)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>resultName;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resultName.sprintf(</highlight><highlight class="stringliteral">&quot;form_%d.png&quot;</highlight><highlight class="normal">,formula-&gt;getId());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>formulas<sp/>for<sp/>which<sp/>no<sp/>image<sp/>exists<sp/>are<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QFileInfo<sp/>fi(resultName);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fi.exists())</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>force<sp/>a<sp/>pagebreak<sp/>after<sp/>each<sp/>formula</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>formula-&gt;getFormulaText()<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\pagebreak\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pagesToGenerate.append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(page));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Doxygen::indexList-&gt;addImageFile(resultName);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>page++;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\end{document}&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>f.close();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pagesToGenerate.count()&gt;0)<sp/></highlight><highlight class="comment">//<sp/>there<sp/>are<sp/>new<sp/>formulas</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Running<sp/>latex...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//system(&quot;latex<sp/>_formulas.tex<sp/>&lt;/dev/null<sp/>&gt;/dev/null&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>latexCmd<sp/>=<sp/>Config_getString(</highlight><highlight class="stringliteral">&quot;LATEX_CMD_NAME&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(latexCmd.isEmpty())<sp/>latexCmd=</highlight><highlight class="stringliteral">&quot;latex&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>portable_sysTimerStart();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portable_system(latexCmd,</highlight><highlight class="stringliteral">&quot;_formulas.tex&quot;</highlight><highlight class="normal">)!=0)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;Problems<sp/>running<sp/>latex.<sp/>Check<sp/>your<sp/>installation<sp/>or<sp/>look<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;for<sp/>typos<sp/>in<sp/>_formulas.tex<sp/>and<sp/>check<sp/>_formulas.log!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>formulaError=TRUE;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>portable_sysTimerStop();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Running<sp/>dvips...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>QListIterator&lt;int&gt;<sp/>pli(pagesToGenerate);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pagePtr;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pageIndex=1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;(pagePtr=pli.current());++pli,++pageIndex)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pageNum=*pagePtr;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg(</highlight><highlight class="stringliteral">&quot;Generating<sp/>image<sp/>form_%d.png<sp/>for<sp/>formula\n&quot;</highlight><highlight class="normal">,pageNum);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dviArgs[4096];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>formBase;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>formBase.sprintf(</highlight><highlight class="stringliteral">&quot;_form%d&quot;</highlight><highlight class="normal">,pageNum);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>run<sp/>dvips<sp/>to<sp/>convert<sp/>the<sp/>page<sp/>with<sp/>number<sp/>pageIndex<sp/>to<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>encapsulated<sp/>postscript.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(dviArgs,</highlight><highlight class="stringliteral">&quot;-q<sp/>-D<sp/>600<sp/>-E<sp/>-n<sp/>1<sp/>-p<sp/>%d<sp/>-o<sp/>%s.eps<sp/>_formulas.dvi&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pageIndex,formBase.data());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>portable_sysTimerStart();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portable_system(</highlight><highlight class="stringliteral">&quot;dvips&quot;</highlight><highlight class="normal">,dviArgs)!=0)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;Problems<sp/>running<sp/>dvips.<sp/>Check<sp/>your<sp/>installation!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portable_sysTimerStop();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>portable_sysTimerStop();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>read<sp/>the<sp/>generated<sp/>postscript<sp/>file<sp/>to<sp/>extract<sp/>the<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QFileInfo<sp/>fi(formBase+</highlight><highlight class="stringliteral">&quot;.eps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fi.exists())</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>eps<sp/>=<sp/>fileToString(formBase+</highlight><highlight class="stringliteral">&quot;.eps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=eps.find(</highlight><highlight class="stringliteral">&quot;%%BoundingBox:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i!=-1)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(eps.data()+i,</highlight><highlight class="stringliteral">&quot;%%%%BoundingBox:%d<sp/>%d<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,&amp;x1,&amp;y1,&amp;x2,&amp;y2);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>extract<sp/>bounding<sp/>box!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>we<sp/>generate<sp/>a<sp/>postscript<sp/>file<sp/>which<sp/>contains<sp/>the<sp/>eps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>displays<sp/>it<sp/>in<sp/>the<sp/>right<sp/>colors<sp/>and<sp/>the<sp/>right<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.setName(formBase+</highlight><highlight class="stringliteral">&quot;.ps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.open(IO_WriteOnly))</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d3c/class_f_text_stream" kindref="compound" tooltip="Simplified and optimized version of QTextStream.">FTextStream</ref><sp/>t(&amp;f);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>1<sp/>1<sp/>setrgbcolor&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/><sp/></highlight><highlight class="comment">//<sp/>anti-alias<sp/>to<sp/>white<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;newpath&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-1<sp/>-1<sp/>moveto&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>(x2-x1+2)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-1<sp/>lineto&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>(x2-x1+2)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(y2-y1+2)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lineto&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-1<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(y2-y1+2)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>lineto&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;closepath&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;fill&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/>-x1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>-y1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>translate&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>0<sp/>0<sp/>setrgbcolor&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>formBase<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.eps)<sp/>run&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.close();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scale<sp/>the<sp/>image<sp/>so<sp/>that<sp/>it<sp/>is<sp/>four<sp/>times<sp/>larger<sp/>than<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>sizes<sp/>are<sp/>a<sp/>multiple<sp/>of<sp/>four.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scaleFactor<sp/>=<sp/>16.0/3.0;<sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>zoomFactor<sp/>=<sp/>Config_getInt(</highlight><highlight class="stringliteral">&quot;FORMULA_FONTSIZE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zoomFactor&lt;8<sp/>||<sp/>zoomFactor&gt;50)<sp/>zoomFactor=10;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaleFactor<sp/>*=<sp/>zoomFactor/10.0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gx<sp/>=<sp/>(((int)((x2-x1)*scaleFactor))+3)&amp;~1;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gy<sp/>=<sp/>(((int)((y2-y1)*scaleFactor))+3)&amp;~1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>we<sp/>run<sp/>ghostscript<sp/>to<sp/>convert<sp/>the<sp/>postscript<sp/>to<sp/>a<sp/>pixmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>pixmap<sp/>is<sp/>a<sp/>truecolor<sp/>image,<sp/>where<sp/>only<sp/>black<sp/>and<sp/>white<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>gsArgs[4096];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(gsArgs,</highlight><highlight class="stringliteral">&quot;-q<sp/>-g%dx%d<sp/>-r%dx%dx<sp/>-sDEVICE=ppmraw<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-sOutputFile=%s.pnm<sp/>-dNOPAUSE<sp/>-dBATCH<sp/>--<sp/>%s.ps&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gx,gy,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(scaleFactor*72),(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(scaleFactor*72),</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formBase.data(),formBase.data()</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>portable_sysTimerStart();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portable_system(portable_ghostScriptCommand(),gsArgs)!=0)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;Problem<sp/>running<sp/>ghostscript<sp/>%s<sp/>%s.<sp/>Check<sp/>your<sp/>installation!\n&quot;</highlight><highlight class="normal">,portable_ghostScriptCommand(),gsArgs);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portable_sysTimerStop();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>portable_sysTimerStop();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.setName(formBase+</highlight><highlight class="stringliteral">&quot;.pnm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>imageX=0,imageY=0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>read<sp/>the<sp/>generated<sp/>image<sp/>again,<sp/>to<sp/>obtain<sp/>the<sp/>pixel<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.open(IO_ReadOnly))</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTextStream<sp/>t(&amp;f);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>s;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!t.eof())</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s=t.readLine().utf8();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.length()&lt;2<sp/>||<sp/>s.left(2)!=</highlight><highlight class="stringliteral">&quot;P6&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err(</highlight><highlight class="stringliteral">&quot;ghostscript<sp/>produced<sp/>an<sp/>illegal<sp/>image<sp/>format!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assume<sp/>the<sp/>size<sp/>is<sp/>after<sp/>the<sp/>first<sp/>line<sp/>that<sp/>does<sp/>not<sp/>start<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#<sp/>excluding<sp/>the<sp/>first<sp/>line<sp/>of<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!t.eof()<sp/>&amp;&amp;<sp/>(s=t.readLine().utf8())<sp/>&amp;&amp;<sp/>!s.isEmpty()<sp/>&amp;&amp;<sp/>s.at(0)==</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(s,</highlight><highlight class="stringliteral">&quot;%d<sp/>%d&quot;</highlight><highlight class="normal">,&amp;imageX,&amp;imageY);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imageX&gt;0<sp/>&amp;&amp;<sp/>imageY&gt;0)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Converting<sp/>image...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[imageX*imageY*3];<sp/></highlight><highlight class="comment">//<sp/>rgb<sp/>8:8:8<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>i,x,y,ix,iy;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.readBlock(data,imageX*imageY*3);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d73/class_image" kindref="compound" tooltip="Class representing a bitmap image generated by doxygen.">Image</ref><sp/>srcImage(imageX,imageY),</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage(imageX,imageY),</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstImage(imageX/4,imageY/4);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uchar<sp/>*ps=srcImage.getData();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>image<sp/>to<sp/>black<sp/>(1)<sp/>and<sp/>white<sp/>(0)<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;imageX*imageY;i++)<sp/>*ps++=<sp/>(data[i*3]==0<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>apply<sp/>a<sp/>simple<sp/>box<sp/>filter<sp/>to<sp/>the<sp/>image<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filterMask[]={1,2,1,2,8,2,1,2,1};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y=0;y&lt;srcImage.getHeight();y++)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x=0;x&lt;srcImage.getWidth();x++)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s=0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iy=0;iy&lt;2;iy++)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ix=0;ix&lt;2;ix++)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s+=srcImage.getPixel(x+ix-1,y+iy-1)*filterMask[iy*3+ix];</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.setPixel(x,y,s);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>down-sample<sp/>the<sp/>image<sp/>to<sp/>1/16th<sp/>of<sp/>the<sp/>area<sp/>using<sp/>16<sp/>gray<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>colors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>optimize<sp/>this<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y=0;y&lt;dstImage.getHeight();y++)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x=0;x&lt;dstImage.getWidth();x++)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xp=x&lt;&lt;2;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yp=y&lt;&lt;2;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c=filteredImage.getPixel(xp+0,yp+0)+</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+1,yp+0)+</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+2,yp+0)+</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+3,yp+0)+</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+0,yp+1)+</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+1,yp+1)+</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+2,yp+1)+</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+3,yp+1)+</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+0,yp+2)+</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+1,yp+2)+</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+2,yp+2)+</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+3,yp+2)+</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+0,yp+3)+</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+1,yp+3)+</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+2,yp+3)+</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filteredImage.getPixel(xp+3,yp+3);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>we<sp/>scale<sp/>and<sp/>clip<sp/>the<sp/>color<sp/>value<sp/>so<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resulting<sp/>image<sp/>has<sp/>a<sp/>reasonable<sp/>contrast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstImage.setPixel(x,y,QMIN(15,(c*15)/(16*10)));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>result<sp/>as<sp/>a<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QCString<sp/>resultName;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultName.sprintf(</highlight><highlight class="stringliteral">&quot;form_%d.png&quot;</highlight><highlight class="normal">,pageNum);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>option<sp/>parameter<sp/>1<sp/>is<sp/>used<sp/>here<sp/>as<sp/>a<sp/>temporary<sp/>hack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>select<sp/>the<sp/>right<sp/>color<sp/>palette!<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstImage.save(resultName,1);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>data;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.close();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>intermediate<sp/>image<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thisDir.remove(formBase+</highlight><highlight class="stringliteral">&quot;.eps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thisDir.remove(formBase+</highlight><highlight class="stringliteral">&quot;.pnm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thisDir.remove(formBase+</highlight><highlight class="stringliteral">&quot;.ps&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>intermediate<sp/>files<sp/>produced<sp/>by<sp/>latex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>thisDir.remove(</highlight><highlight class="stringliteral">&quot;_formulas.dvi&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!formulaError)<sp/>thisDir.remove(</highlight><highlight class="stringliteral">&quot;_formulas.log&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>keep<sp/>file<sp/>in<sp/>case<sp/>of<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>thisDir.remove(</highlight><highlight class="stringliteral">&quot;_formulas.aux&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>the<sp/>latex<sp/>file<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!formulaError)<sp/>thisDir.remove(</highlight><highlight class="stringliteral">&quot;_formulas.tex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write/update<sp/>the<sp/>formula<sp/>repository<sp/>so<sp/>we<sp/>know<sp/>what<sp/>text<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>generated<sp/>images<sp/>represent<sp/>(we<sp/>use<sp/>this<sp/>next<sp/>time<sp/>to<sp/>avoid<sp/>regeneration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>images,<sp/>and<sp/>to<sp/>avoid<sp/>forcing<sp/>the<sp/>user<sp/>to<sp/>delete<sp/>all<sp/>images<sp/>in<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>let<sp/>a<sp/>browser<sp/>refresh<sp/>the<sp/>images).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>f.setName(</highlight><highlight class="stringliteral">&quot;formula.repository&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.open(IO_WriteOnly))</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d3c/class_f_text_stream" kindref="compound" tooltip="Simplified and optimized version of QTextStream.">FTextStream</ref><sp/>t(&amp;f);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(fli.toFirst();(formula=fli.current());++fli)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\\form#&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>formula-&gt;getId()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>formula-&gt;getFormulaText()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>f.close();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>directory<sp/>to<sp/>the<sp/>original<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>QDir::setCurrent(oldDir);</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FORMULA_TEST</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="df/d0a/main_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><ref refid="d3/dd0/class_formula_list" kindref="compound" tooltip="A list of Formula objects.">FormulaList</ref><sp/>fl;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>fl.append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/db0/class_formula" kindref="compound" tooltip="Class representing a formula in the output.">Formula</ref>(</highlight><highlight class="stringliteral">&quot;$x^2$&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>fl.append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/db0/class_formula" kindref="compound" tooltip="Class representing a formula in the output.">Formula</ref>(</highlight><highlight class="stringliteral">&quot;$y^2$&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>fl.append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/db0/class_formula" kindref="compound" tooltip="Class representing a formula in the output.">Formula</ref>(</highlight><highlight class="stringliteral">&quot;$\\sqrt{x_0^2+x_1^2+x_2^2}$&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>fl.generateBitmaps(</highlight><highlight class="stringliteral">&quot;dest&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/formula.cpp"/>
  </compounddef>
</doxygen>
