<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="d9/d85/marshal_8cpp" kind="file">
    <compoundname>marshal.cpp</compoundname>
    <includes local="no">qfile.h</includes>
    <includes local="no">assert.h</includes>
    <includes refid="d9/d21/sortdict_8h" local="yes">sortdict.h</includes>
    <includes refid="d9/de0/marshal_8h" local="yes">marshal.h</includes>
    <includes refid="d1/dc6/entry_8h" local="yes">entry.h</includes>
    <includes refid="d1/d2a/section_8h" local="yes">section.h</includes>
    <includes refid="dd/d78/memberlist_8h" local="yes">memberlist.h</includes>
    <includes refid="df/da1/definition_8h" local="yes">definition.h</includes>
    <includes refid="d1/de6/groupdef_8h" local="yes">groupdef.h</includes>
    <includes refid="df/d24/example_8h" local="yes">example.h</includes>
    <includes refid="df/d9b/arguments_8h" local="yes">arguments.h</includes>
    <incdepgraph>
      <node id="3313">
        <label>src/marshal.cpp</label>
        <link refid="marshal.cpp"/>
        <childnode refid="3314" relation="include">
        </childnode>
        <childnode refid="3315" relation="include">
        </childnode>
        <childnode refid="3316" relation="include">
        </childnode>
        <childnode refid="3320" relation="include">
        </childnode>
        <childnode refid="3326" relation="include">
        </childnode>
        <childnode refid="3330" relation="include">
        </childnode>
        <childnode refid="3331" relation="include">
        </childnode>
        <childnode refid="3333" relation="include">
        </childnode>
        <childnode refid="3334" relation="include">
        </childnode>
        <childnode refid="3335" relation="include">
        </childnode>
        <childnode refid="3336" relation="include">
        </childnode>
      </node>
      <node id="3328">
        <label>qcstring.h</label>
      </node>
      <node id="3329">
        <label>qgstring.h</label>
      </node>
      <node id="3314">
        <label>qfile.h</label>
      </node>
      <node id="3315">
        <label>assert.h</label>
      </node>
      <node id="3322">
        <label>qglobal.h</label>
      </node>
      <node id="3335">
        <label>example.h</label>
        <link refid="df/d24/example_8h_source"/>
        <childnode refid="3328" relation="include">
        </childnode>
        <childnode refid="3316" relation="include">
        </childnode>
      </node>
      <node id="3316">
        <label>sortdict.h</label>
        <link refid="d9/d21/sortdict_8h_source"/>
        <childnode refid="3317" relation="include">
        </childnode>
        <childnode refid="3318" relation="include">
        </childnode>
        <childnode refid="3319" relation="include">
        </childnode>
      </node>
      <node id="3331">
        <label>memberlist.h</label>
        <link refid="dd/d78/memberlist_8h_source"/>
        <childnode refid="3317" relation="include">
        </childnode>
        <childnode refid="3332" relation="include">
        </childnode>
        <childnode refid="3316" relation="include">
        </childnode>
        <childnode refid="3327" relation="include">
        </childnode>
      </node>
      <node id="3326">
        <label>entry.h</label>
        <link refid="d1/dc6/entry_8h_source"/>
        <childnode refid="3327" relation="include">
        </childnode>
        <childnode refid="3317" relation="include">
        </childnode>
        <childnode refid="3329" relation="include">
        </childnode>
      </node>
      <node id="3319">
        <label>qintdict.h</label>
      </node>
      <node id="3325">
        <label>sys/types.h</label>
      </node>
      <node id="3327">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="3328" relation="include">
        </childnode>
      </node>
      <node id="3317">
        <label>qlist.h</label>
      </node>
      <node id="3320">
        <label>marshal.h</label>
        <link refid="d9/de0/marshal_8h_source"/>
        <childnode refid="3317" relation="include">
        </childnode>
        <childnode refid="3314" relation="include">
        </childnode>
        <childnode refid="3316" relation="include">
        </childnode>
        <childnode refid="3321" relation="include">
        </childnode>
      </node>
      <node id="3332">
        <label>memberdef.h</label>
        <link refid="d4/d46/memberdef_8h_source"/>
        <childnode refid="3317" relation="include">
        </childnode>
        <childnode refid="3325" relation="include">
        </childnode>
        <childnode refid="3327" relation="include">
        </childnode>
        <childnode refid="3333" relation="include">
        </childnode>
      </node>
      <node id="3334">
        <label>groupdef.h</label>
        <link refid="d1/de6/groupdef_8h_source"/>
        <childnode refid="3316" relation="include">
        </childnode>
        <childnode refid="3333" relation="include">
        </childnode>
      </node>
      <node id="3321">
        <label>store.h</label>
        <link refid="d5/d3f/store_8h_source"/>
        <childnode refid="3322" relation="include">
        </childnode>
        <childnode refid="3323" relation="include">
        </childnode>
        <childnode refid="3324" relation="include">
        </childnode>
      </node>
      <node id="3330">
        <label>section.h</label>
        <link refid="d1/d2a/section_8h_source"/>
        <childnode refid="3316" relation="include">
        </childnode>
      </node>
      <node id="3333">
        <label>definition.h</label>
        <link refid="df/da1/definition_8h_source"/>
        <childnode refid="3317" relation="include">
        </childnode>
        <childnode refid="3318" relation="include">
        </childnode>
        <childnode refid="3327" relation="include">
        </childnode>
      </node>
      <node id="3318">
        <label>qdict.h</label>
      </node>
      <node id="3324">
        <label>portable.h</label>
        <link refid="d2/de2/portable_8h"/>
        <childnode refid="3325" relation="include">
        </childnode>
        <childnode refid="3323" relation="include">
        </childnode>
        <childnode refid="3322" relation="include">
        </childnode>
      </node>
      <node id="3323">
        <label>stdio.h</label>
      </node>
      <node id="3336">
        <label>arguments.h</label>
        <link refid="df/d9b/arguments_8h_source"/>
        <childnode refid="3317" relation="include">
        </childnode>
        <childnode refid="3328" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d9/d85/marshal_8cpp_1ab7770a7f0d95e67620ff6ed347a07a56" prot="public" static="no">
        <name>HEADER</name>
        <initializer>(&apos;D&apos;&lt;&lt;24)+(&apos;O&apos;&lt;&lt;16)+(&apos;X&apos;&lt;&lt;8)+&apos;!&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="14" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1ac84b090bca1a8b427e30aa45b91b0152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalInt</definition>
        <argsstring>(StorageIntf *s, int v)</argsstring>
        <name>marshalInt</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="17" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="16" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a9b70754078d8d25e53cea4163861d0b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalUInt</definition>
        <argsstring>(StorageIntf *s, uint v)</argsstring>
        <name>marshalUInt</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="27" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="26" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a5769b9e33a81fc611e81d923eccfdc4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalUInt64</definition>
        <argsstring>(StorageIntf *s, uint64 v)</argsstring>
        <name>marshalUInt64</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint64</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="37" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1aa5db1f451e1fa0c9c62b186a4c076723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalBool</definition>
        <argsstring>(StorageIntf *s, bool b)</argsstring>
        <name>marshalBool</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="43" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a3c1647b7b22e4f3def34827e2e2b9197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalQCString</definition>
        <argsstring>(StorageIntf *s, const QCString &amp;str)</argsstring>
        <name>marshalQCString</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const QCString &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="49" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a96024fc062c53af7f18eaccd3f2b872f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalQGString</definition>
        <argsstring>(StorageIntf *s, const QGString &amp;str)</argsstring>
        <name>marshalQGString</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const QGString &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="56" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a84124e6d8601d35b614be5a90e830a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalArgumentList</definition>
        <argsstring>(StorageIntf *s, ArgumentList *argList)</argsstring>
        <name>marshalArgumentList</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> *</type>
          <declname>argList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="63" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a02845e404c81106714eeef74afea1c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalArgumentLists</definition>
        <argsstring>(StorageIntf *s, QList&lt; ArgumentList &gt; *argLists)</argsstring>
        <name>marshalArgumentLists</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> &gt; *</type>
          <declname>argLists</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="68" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="67" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1afa2c6746b4717eedb4f25a70c3850cea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalBaseInfoList</definition>
        <argsstring>(StorageIntf *s, QList&lt; BaseInfo &gt; *baseList)</argsstring>
        <name>marshalBaseInfoList</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="de/d64/struct_base_info" kindref="compound">BaseInfo</ref> &gt; *</type>
          <declname>baseList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="86" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="85" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1ae62c8d5fa49b72f88e5bbcb41a93bba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalGroupingList</definition>
        <argsstring>(StorageIntf *s, QList&lt; Grouping &gt; *groups)</argsstring>
        <name>marshalGroupingList</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d7/d59/struct_grouping" kindref="compound">Grouping</ref> &gt; *</type>
          <declname>groups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="106" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="105" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a3d106e8564364051c90a83dfdd063306" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalSectionInfoList</definition>
        <argsstring>(StorageIntf *s, QList&lt; SectionInfo &gt; *anchors)</argsstring>
        <name>marshalSectionInfoList</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d5/d5b/struct_section_info" kindref="compound">SectionInfo</ref> &gt; *</type>
          <declname>anchors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="125" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="124" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a056d7b89c3c39dbd1af6f9eb28f1db19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalItemInfoList</definition>
        <argsstring>(StorageIntf *s, QList&lt; ListItemInfo &gt; *sli)</argsstring>
        <name>marshalItemInfoList</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d8/dd5/struct_list_item_info" kindref="compound">ListItemInfo</ref> &gt; *</type>
          <declname>sli</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="148" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="147" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1ada5049b8b4a842ec632f54db37c50462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalObjPointer</definition>
        <argsstring>(StorageIntf *s, void *obj)</argsstring>
        <name>marshalObjPointer</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="167" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="166" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1afdf5dc85005a565b4b80cba7db74a63c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalSectionDict</definition>
        <argsstring>(StorageIntf *s, SectionDict *sections)</argsstring>
        <name>marshalSectionDict</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="de/d9a/class_section_dict" kindref="compound">SectionDict</ref> *</type>
          <declname>sections</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="173" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="172" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a664aecfb1775a4cf9ff94ba389b828e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalMemberSDict</definition>
        <argsstring>(StorageIntf *s, MemberSDict *memberSDict)</argsstring>
        <name>marshalMemberSDict</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="d6/dd6/class_member_s_dict" kindref="compound">MemberSDict</ref> *</type>
          <declname>memberSDict</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="192" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="191" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1af76cd1ec9eb73f5a4cbad06c48c27f0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalDocInfo</definition>
        <argsstring>(StorageIntf *s, DocInfo *docInfo)</argsstring>
        <name>marshalDocInfo</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="d7/dd5/struct_doc_info" kindref="compound">DocInfo</ref> *</type>
          <declname>docInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="216" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="215" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a96092cb7501de5bd93cbda3c2b96d546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalBriefInfo</definition>
        <argsstring>(StorageIntf *s, BriefInfo *briefInfo)</argsstring>
        <name>marshalBriefInfo</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="d0/da7/struct_brief_info" kindref="compound">BriefInfo</ref> *</type>
          <declname>briefInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="231" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="230" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a207fb0a43b496dcf79a06701b57c93c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalBodyInfo</definition>
        <argsstring>(StorageIntf *s, BodyInfo *bodyInfo)</argsstring>
        <name>marshalBodyInfo</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="db/dab/struct_body_info" kindref="compound">BodyInfo</ref> *</type>
          <declname>bodyInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="247" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="246" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a87b42ee40f1aebe170eef5b27e15a4c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalGroupList</definition>
        <argsstring>(StorageIntf *s, GroupList *groupList)</argsstring>
        <name>marshalGroupList</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="d3/d3b/class_group_list" kindref="compound">GroupList</ref> *</type>
          <declname>groupList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="262" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="261" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a8113ab36bebb2ffd0602b5fc7f004ca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalMemberList</definition>
        <argsstring>(StorageIntf *s, MemberList *ml)</argsstring>
        <name>marshalMemberList</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="dd/d13/class_member_list" kindref="compound">MemberList</ref> *</type>
          <declname>ml</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="280" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="279" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a9bb73b50ace476f2108d5189675b450f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalExampleSDict</definition>
        <argsstring>(StorageIntf *s, ExampleSDict *ed)</argsstring>
        <name>marshalExampleSDict</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="d0/d31/class_example_s_dict" kindref="compound">ExampleSDict</ref> *</type>
          <declname>ed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="303" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="302" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a26813d97b71c2ef287e057b2f5530164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalMemberLists</definition>
        <argsstring>(StorageIntf *s, SDict&lt; MemberList &gt; *mls)</argsstring>
        <name>marshalMemberLists</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="d1/d50/class_s_dict" kindref="compound">SDict</ref>&lt; <ref refid="dd/d13/class_member_list" kindref="compound">MemberList</ref> &gt; *</type>
          <declname>mls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="326" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="325" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a185602a643d5e8f3b6f0ae03ca99852c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalEntry</definition>
        <argsstring>(StorageIntf *s, Entry *e)</argsstring>
        <name>marshalEntry</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="d4/dd7/class_entry" kindref="compound">Entry</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="347" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="346" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1ae4a34dbf2a47e8d951f44561701f7d14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marshalEntryTree</definition>
        <argsstring>(StorageIntf *s, Entry *e)</argsstring>
        <name>marshalEntryTree</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="d4/dd7/class_entry" kindref="compound">Entry</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="404" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="403" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a255d4c42f0fa053036e5746bf14d7eea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int unmarshalInt</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalInt</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="418" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="417" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a54d89e92a9d11449c9c5b213681eea85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>uint unmarshalUInt</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalUInt</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="427" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="426" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a37c333c4d2237c486fbc444da438228f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64</type>
        <definition>uint64 unmarshalUInt64</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalUInt64</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="436" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="435" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a2caf6352c2d7698a031e002a5d925432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool unmarshalBool</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalBool</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="443" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="442" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1ae5a6fd22ea172db6618676276751b574" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QCString</type>
        <definition>QCString unmarshalQCString</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalQCString</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="451" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="450" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a91f63ee894ca3b3e77acfd57c7c3e841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QGString</type>
        <definition>QGString unmarshalQGString</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalQGString</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="465" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="464" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1abae504ddd3883a74185762be17f8b1d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> *</type>
        <definition>ArgumentList* unmarshalArgumentList</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalArgumentList</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="479" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="478" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1aed4cbcaefb61e43c1b8088f210aea56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d7/df8/class_argument_list" kindref="compound">ArgumentList</ref> &gt; *</type>
        <definition>QList&lt;ArgumentList&gt;* unmarshalArgumentLists</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalArgumentLists</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="484" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="483" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a35b9b88b788180c1e87fc0938f6d0ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="de/d64/struct_base_info" kindref="compound">BaseInfo</ref> &gt; *</type>
        <definition>QList&lt;BaseInfo&gt;* unmarshalBaseInfoList</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalBaseInfoList</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="500" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="499" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a290cc79b7f8e523f41e81543fd16f7ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d7/d59/struct_grouping" kindref="compound">Grouping</ref> &gt; *</type>
        <definition>QList&lt;Grouping&gt;* unmarshalGroupingList</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalGroupingList</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="518" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="517" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a7f782e8d49b8db8559e39c3f09425c53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d5/d5b/struct_section_info" kindref="compound">SectionInfo</ref> &gt; *</type>
        <definition>QList&lt;SectionInfo&gt;* unmarshalSectionInfoList</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalSectionInfoList</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="535" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="534" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1aa0dd7a23f5df2a3eb0e0833ef281ca06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/daa/class_q_list" kindref="compound">QList</ref>&lt; <ref refid="d8/dd5/struct_list_item_info" kindref="compound">ListItemInfo</ref> &gt; *</type>
        <definition>QList&lt;ListItemInfo&gt;* unmarshalItemInfoList</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalItemInfoList</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="556" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="555" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a05df47a88dbdb3801f53f4ff1fb56924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* unmarshalObjPointer</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalObjPointer</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="574" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="573" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1aa0228247f6a8b1b7dcb4175ee153592f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/d9a/class_section_dict" kindref="compound">SectionDict</ref> *</type>
        <definition>SectionDict* unmarshalSectionDict</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalSectionDict</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="581" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="580" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1af822b0fa8c5cfbdb5905b4f6d33478da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d6/dd6/class_member_s_dict" kindref="compound">MemberSDict</ref> *</type>
        <definition>MemberSDict* unmarshalMemberSDict</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalMemberSDict</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="599" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="598" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a9a57fb24cf8c6ec3e40eeede849872d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d7/dd5/struct_doc_info" kindref="compound">DocInfo</ref> *</type>
        <definition>DocInfo* unmarshalDocInfo</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalDocInfo</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="626" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="625" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1ac75f74abd69f013d6f10d831e305d2ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d0/da7/struct_brief_info" kindref="compound">BriefInfo</ref> *</type>
        <definition>BriefInfo* unmarshalBriefInfo</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalBriefInfo</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="637" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="636" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a9c5457eaf8116c000ffe69e259ed54c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/dab/struct_body_info" kindref="compound">BodyInfo</ref> *</type>
        <definition>BodyInfo* unmarshalBodyInfo</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalBodyInfo</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="649" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="648" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a40b02cffa1abd6b64ddf4edb4f9313d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d3b/class_group_list" kindref="compound">GroupList</ref> *</type>
        <definition>GroupList* unmarshalGroupList</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalGroupList</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="660" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="659" bodyend="672"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a6aa68d597ae5c8b86a0000e93e0dfd84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dd/d13/class_member_list" kindref="compound">MemberList</ref> *</type>
        <definition>MemberList* unmarshalMemberList</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalMemberList</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="675" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="674" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a216a37cc315a7717178205902f6e4207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d0/d31/class_example_s_dict" kindref="compound">ExampleSDict</ref> *</type>
        <definition>ExampleSDict* unmarshalExampleSDict</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalExampleSDict</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="691" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="690" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a795faa051fbf5d8893a21c2d6b7aedbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d1/d50/class_s_dict" kindref="compound">SDict</ref>&lt; <ref refid="dd/d13/class_member_list" kindref="compound">MemberList</ref> &gt; *</type>
        <definition>SDict&lt;MemberList&gt;* unmarshalMemberLists</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalMemberLists</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="710" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="709" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a9493009573b4ea1d93564a055379cbf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/dd7/class_entry" kindref="compound">Entry</ref> *</type>
        <definition>Entry* unmarshalEntry</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalEntry</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="726" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="725" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="d9/d85/marshal_8cpp_1a67a83de01f7ea58d576ab00c222f3456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/dd7/class_entry" kindref="compound">Entry</ref> *</type>
        <definition>Entry* unmarshalEntryTree</definition>
        <argsstring>(StorageIntf *s)</argsstring>
        <name>unmarshalEntryTree</name>
        <param>
          <type><ref refid="d7/db0/class_storage_intf" kindref="compound">StorageIntf</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" line="790" bodyfile="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp" bodystart="789" bodyend="799"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;qfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sortdict.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;marshal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entry.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;section.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;memberlist.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;definition.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;groupdef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;example.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;arguments.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER<sp/>(&apos;D&apos;&lt;&lt;24)+(&apos;O&apos;&lt;&lt;16)+(&apos;X&apos;&lt;&lt;8)+&apos;!&apos;</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalInt(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>uchar<sp/>b[4];</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>b[0]=((uint)v)&gt;&gt;24;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>b[1]=(((uint)v)&gt;&gt;16)&amp;0xff;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>b[2]=(((uint)v)&gt;&gt;8)&amp;0xff;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>b[3]=v&amp;0xff;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="d7/db0/class_storage_intf_1a97b26023c6cf0590423e428947d6febb" kindref="member">write</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)b,4);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalUInt(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,uint<sp/>v)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>uchar<sp/>b[4];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>b[0]=v&gt;&gt;24;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>b[1]=(v&gt;&gt;16)&amp;0xff;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>b[2]=(v&gt;&gt;8)&amp;0xff;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>b[3]=v&amp;0xff;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="d7/db0/class_storage_intf_1a97b26023c6cf0590423e428947d6febb" kindref="member">write</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)b,4);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalUInt64(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,uint64<sp/>v)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>marshalUInt(s,<sp/>uint(v&gt;&gt;32));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>marshalUInt(s,<sp/>uint(v&amp;0xFFFFFFFF));</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalBool(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="d7/db0/class_storage_intf_1a97b26023c6cf0590423e428947d6febb" kindref="member">write</ref>(&amp;c,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalQCString(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QCString<sp/>&amp;str)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>uint<sp/>l=str.length();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>marshalUInt(s,l);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l&gt;0)<sp/>s-&gt;<ref refid="d7/db0/class_storage_intf_1a97b26023c6cf0590423e428947d6febb" kindref="member">write</ref>(str.data(),l);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalQGString(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QGString<sp/>&amp;str)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>uint<sp/>l=str.length();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>marshalUInt(s,l);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l&gt;0)<sp/>s-&gt;<ref refid="d7/db0/class_storage_intf_1a97b26023c6cf0590423e428947d6febb" kindref="member">write</ref>(str.data(),l);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalArgumentList(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref><sp/>*argList)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>ArgumentList::marshal(s,argList);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalArgumentLists(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<ref refid="db/daa/class_q_list" kindref="compound">QList&lt;ArgumentList&gt;</ref><sp/>*argLists)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argLists==0)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,NULL_LIST);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>pointer<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,argLists-&gt;count());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>QListIterator&lt;ArgumentList&gt;<sp/>ali(*argLists);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref><sp/>*al;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ali.toFirst();(al=ali.current());++ali)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalArgumentList(s,al);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalBaseInfoList(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;BaseInfo&gt;</ref><sp/>*baseList)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(baseList==0)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,NULL_LIST);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>pointer<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,baseList-&gt;count());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>QListIterator&lt;BaseInfo&gt;<sp/>bli(*baseList);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d64/struct_base_info" kindref="compound" tooltip="This class stores information about an inheritance relation.">BaseInfo</ref><sp/>*bi;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bli.toFirst();(bi=bli.current());++bli)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalQCString(s,bi-&gt;<ref refid="de/d64/struct_base_info_1ae8bba327d477830b4664f9d03b05c97b" kindref="member" tooltip="the name of the base class">name</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalInt(s,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)bi-&gt;<ref refid="de/d64/struct_base_info_1aaf46efd63ca2b598a79324042bac83f3" kindref="member" tooltip="inheritance type">prot</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalInt(s,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)bi-&gt;<ref refid="de/d64/struct_base_info_1ab32fa6c3344b6608768043f6ee5a8e6b" kindref="member" tooltip="virtualness">virt</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalGroupingList(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;Grouping&gt;</ref><sp/>*groups)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(groups==0)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,NULL_LIST);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>pointer<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,groups-&gt;count());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>QListIterator&lt;Grouping&gt;<sp/>gli(*groups);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d59/struct_grouping" kindref="compound" tooltip="Grouping info.">Grouping</ref><sp/>*g;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gli.toFirst();(g=gli.current());++gli)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalQCString(s,g-&gt;<ref refid="d7/d59/struct_grouping_1a05e6a053a86cc2f588d065f3880801dc" kindref="member" tooltip="name of the group">groupname</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalInt(s,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)g-&gt;<ref refid="d7/d59/struct_grouping_1aead55d7198ceffe16cb82d2c114e4254" kindref="member" tooltip="priority of this definition">pri</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalSectionInfoList(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;SectionInfo&gt;</ref><sp/>*anchors)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchors==0)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,NULL_LIST);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>pointer<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,anchors-&gt;count());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>QListIterator&lt;SectionInfo&gt;<sp/>sli(*anchors);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d5b/struct_section_info" kindref="compound" tooltip="Class representing a section in a page.">SectionInfo</ref><sp/>*si;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sli.toFirst();(si=sli.current());++sli)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalQCString(s,si-&gt;label);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalQCString(s,si-&gt;title);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalQCString(s,si-&gt;ref);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalInt(s,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)si-&gt;type);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalQCString(s,si-&gt;fileName);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalInt(s,si-&gt;level);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalItemInfoList(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;ListItemInfo&gt;</ref><sp/>*sli)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sli==0)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,NULL_LIST);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>pointer<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,sli-&gt;count());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>QListIterator&lt;ListItemInfo&gt;<sp/>liii(*sli);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/dd5/struct_list_item_info" kindref="compound">ListItemInfo</ref><sp/>*lii;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(liii.toFirst();(lii=liii.current());++liii)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalQCString(s,lii-&gt;type);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalInt(s,lii-&gt;itemId);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalObjPointer(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*b<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;obj;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="d7/db0/class_storage_intf_1a97b26023c6cf0590423e428947d6febb" kindref="member">write</ref>(b,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalSectionDict(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<ref refid="de/d9a/class_section_dict" kindref="compound" tooltip="Unsorted dictionary of SectionInfo objects.">SectionDict</ref><sp/>*sections)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sections==0)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,NULL_LIST);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>pointer<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,sections-&gt;<ref refid="d1/d50/class_s_dict_1a9e95eebac3e87938cc5bc1f79d078c8a" kindref="member">count</ref>());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d50/class_s_dict" kindref="compound" tooltip="Ordered dictionary of elements of type T.">SDict&lt;SectionInfo&gt;::IteratorDict</ref><sp/>sli(*sections);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d5b/struct_section_info" kindref="compound" tooltip="Class representing a section in a page.">SectionInfo</ref><sp/>*si;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sli.toFirst();(si=sli.current());++sli)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalQCString(s,sli.currentKey());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalObjPointer(s,si);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalMemberSDict(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<ref refid="d6/dd6/class_member_s_dict" kindref="compound" tooltip="A sorted dictionary of MemberDef objects.">MemberSDict</ref><sp/>*memberSDict)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memberSDict==0)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,NULL_LIST);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>pointer<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,memberSDict-&gt;<ref refid="d1/d50/class_s_dict_1a9e95eebac3e87938cc5bc1f79d078c8a" kindref="member">count</ref>());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>marshalMemberSDict:<sp/>items=%d\n&quot;,memberSDict-&gt;count());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d50/class_s_dict" kindref="compound" tooltip="Ordered dictionary of elements of type T.">SDict&lt;MemberDef&gt;::IteratorDict</ref><sp/>mdi(*memberSDict);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*md;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count=0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mdi.toFirst();(md=mdi.current());++mdi)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>marshalMemberSDict:<sp/>%d:<sp/>key=%s<sp/>value=%p\n&quot;,count,mdi.currentKey().data(),md);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalQCString(s,mdi.currentKey());</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalObjPointer(s,md);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(count==memberSDict-&gt;<ref refid="d1/d50/class_s_dict_1a9e95eebac3e87938cc5bc1f79d078c8a" kindref="member">count</ref>());</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalDocInfo(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<ref refid="d7/dd5/struct_doc_info" kindref="compound" tooltip="Data associated with a detailed description.">DocInfo</ref><sp/>*docInfo)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(docInfo==0)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,NULL_LIST);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>pointer<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,1);<sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalQCString(s,docInfo-&gt;doc);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalInt(s,docInfo-&gt;line);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalQCString(s,docInfo-&gt;file);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalBriefInfo(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<ref refid="d0/da7/struct_brief_info" kindref="compound" tooltip="Data associated with a brief description.">BriefInfo</ref><sp/>*briefInfo)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(briefInfo==0)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,NULL_LIST);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>pointer<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,1);<sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalQCString(s,briefInfo-&gt;doc);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalQCString(s,briefInfo-&gt;tooltip);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalInt(s,briefInfo-&gt;line);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalQCString(s,briefInfo-&gt;file);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalBodyInfo(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<ref refid="db/dab/struct_body_info" kindref="compound" tooltip="Data associated with description found in the body.">BodyInfo</ref><sp/>*bodyInfo)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bodyInfo==0)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,NULL_LIST);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>pointer<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,1);<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalInt(s,bodyInfo-&gt;<ref refid="db/dab/struct_body_info_1a13ecf2183dee65bdf06cda72cd0363a0" kindref="member" tooltip="line number of the start of the definition">startLine</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalInt(s,bodyInfo-&gt;<ref refid="db/dab/struct_body_info_1adf40ab79b5fe12c0e46fcd272a62cf44" kindref="member" tooltip="line number of the end of the definition">endLine</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalObjPointer(s,bodyInfo-&gt;<ref refid="db/dab/struct_body_info_1a0a09e75f0c6dbd45673103dccc125172" kindref="member" tooltip="file definition containing the function body">fileDef</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalGroupList(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<ref refid="d3/d3b/class_group_list" kindref="compound" tooltip="A list of GroupDef objects.">GroupList</ref><sp/>*groupList)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(groupList==0)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,NULL_LIST);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>pointer<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,groupList-&gt;count());</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>QListIterator&lt;GroupDef&gt;<sp/>gli(*groupList);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d09/class_group_def" kindref="compound" tooltip="A model of a group of symbols.">GroupDef</ref><sp/>*gd=0;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(gli.toFirst();(gd=gli.current());++gli)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalObjPointer(s,gd);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalMemberList(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<ref refid="dd/d13/class_member_list" kindref="compound" tooltip="A list of MemberDef objects.">MemberList</ref><sp/>*ml)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ml==0)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,NULL_LIST);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>pointer<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,ml-&gt;count());</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d3c/class_member_list_iterator" kindref="compound" tooltip="An iterator for MemberDef objects in a MemberList.">MemberListIterator</ref><sp/>mli(*ml);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*md;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>count=0;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mli.toFirst();(md=mli.current());++mli)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalObjPointer(s,md);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(count==ml-&gt;count());</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>ml-&gt;marshal(s);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalExampleSDict(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<ref refid="d0/d31/class_example_s_dict" kindref="compound" tooltip="A sorted dictionary of Example objects.">ExampleSDict</ref><sp/>*ed)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ed==0)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,NULL_LIST);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>pointer<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,ed-&gt;<ref refid="d1/d50/class_s_dict_1a9e95eebac3e87938cc5bc1f79d078c8a" kindref="member">count</ref>());</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>marshalMemberSDict:<sp/>items=%d\n&quot;,memberSDict-&gt;count());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d50/class_s_dict" kindref="compound" tooltip="Ordered dictionary of elements of type T.">SDict&lt;Example&gt;::IteratorDict</ref><sp/>edi(*ed);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/de9/struct_example" kindref="compound" tooltip="Data associated with an example.">Example</ref><sp/>*e;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(edi.toFirst();(e=edi.current());++edi)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>marshalMemberSDict:<sp/>%d:<sp/>key=%s<sp/>value=%p\n&quot;,count,mdi.currentKey().data(),md);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalQCString(s,edi.currentKey());</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalQCString(s,e-&gt;anchor);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalQCString(s,e-&gt;name);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalQCString(s,e-&gt;file);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalMemberLists(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<ref refid="d1/d50/class_s_dict" kindref="compound">SDict&lt;MemberList&gt;</ref><sp/>*mls)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mls==0)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,NULL_LIST);<sp/></highlight><highlight class="comment">//<sp/>null<sp/>pointer<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalUInt(s,mls-&gt;<ref refid="d1/d50/class_s_dict_1a9e95eebac3e87938cc5bc1f79d078c8a" kindref="member">count</ref>());</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>marshalMemberSDict:<sp/>items=%d\n&quot;,memberSDict-&gt;count());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d50/class_s_dict" kindref="compound" tooltip="Ordered dictionary of elements of type T.">SDict&lt;MemberList&gt;::IteratorDict</ref><sp/>mli(*mls);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d13/class_member_list" kindref="compound" tooltip="A list of MemberDef objects.">MemberList</ref><sp/>*ml;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(mli.toFirst();(ml=mli.current());++mli)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>marshalMemberSDict:<sp/>%d:<sp/>key=%s<sp/>value=%p\n&quot;,count,mdi.currentKey().data(),md);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalQCString(s,mli.currentKey());</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marshalObjPointer(s,ml);<sp/></highlight><highlight class="comment">//<sp/>assume<sp/>we<sp/>are<sp/>not<sp/>owner<sp/>of<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalEntry(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<ref refid="d4/dd7/class_entry" kindref="compound" tooltip="Represents an unstructured piece of information, about an entity found in the sources.">Entry</ref><sp/>*e)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>marshalUInt(s,HEADER);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a87d6afbe10ea84859ef03b6f046e34d3" kindref="member" tooltip="member name">name</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a79a9b5736630c3769e645f71dc357b9f" kindref="member" tooltip="member type">type</ref>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>marshalInt(s,e-&gt;<ref refid="d4/dd7/class_entry_1a9197cdd8acd8fc0670e2911a407f3d04" kindref="member" tooltip="entry type (see Sections);">section</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>marshalInt(s,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)e-&gt;<ref refid="d4/dd7/class_entry_1acbb1b4e99978a710863cf9cab6c90553" kindref="member" tooltip="class protection">protection</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>marshalInt(s,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)e-&gt;<ref refid="d4/dd7/class_entry_1a4669c5294781bce55ce0ad654460acbd" kindref="member" tooltip="signal, slot, (dcop) method, or property?">mtype</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>marshalUInt64(s,e-&gt;<ref refid="d4/dd7/class_entry_1a3019e7d39a5c382fb924e22913198133" kindref="member" tooltip="class/member specifiers">spec</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>marshalInt(s,e-&gt;<ref refid="d4/dd7/class_entry_1ae283a992b9a74c6925c6f602ba7d830d" kindref="member" tooltip="define/variable initializer lines to show">initLines</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>marshalBool(s,e-&gt;<ref refid="d4/dd7/class_entry_1ab5f1d92a0b5d8abdf4d42cefc134fdfa" kindref="member" tooltip="static ?">stat</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>marshalBool(s,e-&gt;<ref refid="d4/dd7/class_entry_1a6c5a4c9eda694f2bfd2037d7da08ba5d" kindref="member" tooltip="explicitly defined as external?">explicitExternal</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>marshalBool(s,e-&gt;<ref refid="d4/dd7/class_entry_1a14c9abc36afe46d02521ef846e6bcc27" kindref="member" tooltip="prototype ?">proto</ref>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>marshalBool(s,e-&gt;<ref refid="d4/dd7/class_entry_1a095b43379529186300dd6a8d8830d5dc" kindref="member" tooltip="automatically group class members?">subGrouping</ref>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>marshalBool(s,e-&gt;<ref refid="d4/dd7/class_entry_1ac3b5637ee0f8469650e2d8d694733314" kindref="member" tooltip="do we need to draw the call graph?">callGraph</ref>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>marshalBool(s,e-&gt;<ref refid="d4/dd7/class_entry_1a3693baa860ccc1625b5ac4fd3bc1761c" kindref="member" tooltip="do we need to draw the caller graph?">callerGraph</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>marshalInt(s,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)e-&gt;<ref refid="d4/dd7/class_entry_1aaf045b9c026443fd192064117083911b" kindref="member" tooltip="virtualness of the entry">virt</ref>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a795acc50f8bb2497b2385ee715304076" kindref="member" tooltip="member argument string">args</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a239e75c28fe009869cf25e681d2a2d41" kindref="member" tooltip="member&amp;#39;s bit fields">bitfields</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>marshalArgumentList(s,e-&gt;<ref refid="d4/dd7/class_entry_1a7dfa4587991698fbc8550e563cd71948" kindref="member" tooltip="member arguments as a list">argList</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>marshalArgumentLists(s,e-&gt;<ref refid="d4/dd7/class_entry_1a6fe1bee76d0edf07bdae161814b8e490" kindref="member" tooltip="template argument declarations">tArgLists</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>marshalQGString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a8aa37e42f17105b914db76b0c05d0a1f" kindref="member" tooltip="the program text">program</ref>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>marshalQGString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a2a0c9e7ce364ed2981f49314c33245f9" kindref="member" tooltip="initial value (for variables)">initializer</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a88c55fcdd65a52dce640136f18adccf2" kindref="member" tooltip="include file (2 arg of \class, must be unique)">includeFile</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a32626ce14eb253f6da64ed475419a4ac" kindref="member" tooltip="include name (3 arg of \class)">includeName</ref>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1ac02a6c1dd922221351f6de0286d48d77" kindref="member" tooltip="documentation block (partly parsed)">doc</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>marshalInt(s,e-&gt;<ref refid="d4/dd7/class_entry_1a180b5fdd7f3b963e4b0d2c4ea6e0b1b5" kindref="member" tooltip="line number at which the documentation was found">docLine</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1ac6841c6ec8fd7ae6121364e7e1895e94" kindref="member" tooltip="file in which the documentation was found">docFile</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1ad602ba19af5785515ed81790d843ce4c" kindref="member" tooltip="brief description (doc block)">brief</ref>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>marshalInt(s,e-&gt;<ref refid="d4/dd7/class_entry_1add7a19978ab2b30a9755b8d5e3cbd00a" kindref="member" tooltip="line number at which the brief desc. was found">briefLine</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a9a0b7ed65e6082088ededf633771d3d1" kindref="member" tooltip="file in which the brief desc. was found">briefFile</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a51e209dbd21d11b0c63d246efa6182f2" kindref="member" tooltip="documentation inside the body of a function">inbodyDocs</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>marshalInt(s,e-&gt;<ref refid="d4/dd7/class_entry_1a8eed853bf654e1d583e10f04062ccdde" kindref="member" tooltip="line number at which the body doc was found">inbodyLine</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1aee8cba460792393b5051230c78fbb204" kindref="member" tooltip="file in which the body doc was found">inbodyFile</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a611ec017dea1768b7093bea6e4177cba" kindref="member" tooltip="related class (doc block)">relates</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>marshalInt(s,e-&gt;<ref refid="d4/dd7/class_entry_1a74ff1e30a3ed19f82ce61f70b8a5a413" kindref="member" tooltip="how relates is handled">relatesType</ref>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1ac5ad6c6585645a4427b54e5281316b65" kindref="member" tooltip="property read accessor">read</ref>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a76a68a1f14534f069444ba2704ef7404" kindref="member" tooltip="property write accessor">write</ref>);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1af88583a31bcd3cfc5aa52691f958833f" kindref="member" tooltip="name of the class in which documents are found">inside</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a81b9c13cc15e3460c8d9fdcabeb9342d" kindref="member" tooltip="throw specification">exception</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>marshalArgumentList(s,e-&gt;<ref refid="d4/dd7/class_entry_1a77d30ef01feb28bf83b77d4148968f84" kindref="member" tooltip="where clause (C#) for type constraints">typeConstr</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>marshalInt(s,e-&gt;<ref refid="d4/dd7/class_entry_1a9a2b1e3404f4723d8a6bef5966146ed0" kindref="member" tooltip="line number of the definition in the source">bodyLine</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>marshalInt(s,e-&gt;<ref refid="d4/dd7/class_entry_1a2db88158279ecfe391ea775f63869fc1" kindref="member" tooltip="line number where the definition ends">endBodyLine</ref>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>marshalInt(s,e-&gt;<ref refid="d4/dd7/class_entry_1a9f7167fc5b369f1fcd343946803efa0d" kindref="member" tooltip="member group id">mGrpId</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>marshalBaseInfoList(s,e-&gt;<ref refid="d4/dd7/class_entry_1a22b4c7b8255e183b68c49d5bd9f04017" kindref="member" tooltip="list of base classes">extends</ref>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>marshalGroupingList(s,e-&gt;<ref refid="d4/dd7/class_entry_1af10b19c474b2a7173a79b97124d25fc3" kindref="member" tooltip="list of groups this entry belongs to">groups</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>marshalSectionInfoList(s,e-&gt;<ref refid="d4/dd7/class_entry_1a4608d738e9d9c7798d8b83a2846b3d12" kindref="member" tooltip="list of anchors defined in this entry">anchors</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a736f1dfadfe0c0fabb022c533aa27fdc" kindref="member" tooltip="file this entry was extracted from">fileName</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>marshalInt(s,e-&gt;<ref refid="d4/dd7/class_entry_1a81bf40c0a6646dc1e33097d7e2552c96" kindref="member" tooltip="start line of entry in the source">startLine</ref>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>marshalItemInfoList(s,e-&gt;<ref refid="d4/dd7/class_entry_1a5328bd7f1580a30ad2345840044c2a4b" kindref="member" tooltip="special lists (test/todo/bug/deprecated/..) this entry is in">sli</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>marshalInt(s,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)e-&gt;<ref refid="d4/dd7/class_entry_1a4ee5bbd6ac8bdf2f017d93edcefce5e9" kindref="member" tooltip="programming language in which this entry was found">lang</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>marshalBool(s,e-&gt;<ref refid="d4/dd7/class_entry_1acc4d59ae7ae3e94c3365ab8027593727" kindref="member" tooltip="does this represent an entity that is hidden from the output">hidden</ref>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>marshalBool(s,e-&gt;<ref refid="d4/dd7/class_entry_1acbe763144d791b44aa3620b012d0dd30" kindref="member" tooltip="Artificially introduced item.">artificial</ref>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>marshalInt(s,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)e-&gt;groupDocType);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>marshalQCString(s,e-&gt;<ref refid="d4/dd7/class_entry_1a338fb12273a1a4f5dc124a1faf47d473" kindref="member" tooltip="libclang id">id</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marshalEntryTree(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s,<ref refid="d4/dd7/class_entry" kindref="compound" tooltip="Represents an unstructured piece of information, about an entity found in the sources.">Entry</ref><sp/>*e)</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>marshalEntry(s,e);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>marshalUInt(s,e-&gt;<ref refid="d4/dd7/class_entry_1ac030130465c1a51a13945b2e8738712e" kindref="member">children</ref>()-&gt;count());</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>QListIterator&lt;Entry&gt;<sp/>eli(*e-&gt;<ref refid="d4/dd7/class_entry_1ac030130465c1a51a13945b2e8738712e" kindref="member">children</ref>());</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><ref refid="d4/dd7/class_entry" kindref="compound" tooltip="Represents an unstructured piece of information, about an entity found in the sources.">Entry</ref><sp/>*child;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(eli.toFirst();(child=eli.current());++eli)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>marshalEntryTree(s,child);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unmarshalInt(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>uchar<sp/>b[4];</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="d7/db0/class_storage_intf_1a125b99d1511364f4fe49709feec46bb4" kindref="member">read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)b,4);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=(int)((((uint)b[0])&lt;&lt;24)+((uint)b[1]&lt;&lt;16)+((uint)b[2]&lt;&lt;8)+(uint)b[3]);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;unmarshalInt:<sp/>%x<sp/>%x<sp/>%x<sp/>%x:<sp/>%x<sp/>offset=%llx\n&quot;,b[0],b[1],b[2],b[3],result,f.pos());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal">uint<sp/>unmarshalUInt(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>uchar<sp/>b[4];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="d7/db0/class_storage_intf_1a125b99d1511364f4fe49709feec46bb4" kindref="member">read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)b,4);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>uint<sp/>result=(((uint)b[0])&lt;&lt;24)+((uint)b[1]&lt;&lt;16)+((uint)b[2]&lt;&lt;8)+(uint)b[3];</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;unmarshalUInt:<sp/>%x<sp/>%x<sp/>%x<sp/>%x:<sp/>%x<sp/>offset=%llx\n&quot;,b[0],b[1],b[2],b[3],result,f.pos());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal">uint64<sp/>unmarshalUInt64(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>uint64<sp/>result=uint64(unmarshalUInt(s))&lt;&lt;32;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>result|=unmarshalUInt(s);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unmarshalBool(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="d7/db0/class_storage_intf_1a125b99d1511364f4fe49709feec46bb4" kindref="member">read</ref>(&amp;result,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(result));</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;unmarshalBool:<sp/>%x<sp/>offset=%llx\n&quot;,result,f.pos());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal">QCString<sp/>unmarshalQCString(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>uint<sp/>len<sp/>=<sp/>unmarshalUInt(s);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;unmarshalQCString:<sp/>len=%d<sp/>offset=%llx\n&quot;,len,f.pos());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>QCString<sp/>result(len+1);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>result.at(len)=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len&gt;0)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="d7/db0/class_storage_intf_1a125b99d1511364f4fe49709feec46bb4" kindref="member">read</ref>(result.data(),len);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;unmarshalQCString:<sp/>result=%s\n&quot;,result.data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal">QGString<sp/>unmarshalQGString(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>uint<sp/>len<sp/>=<sp/>unmarshalUInt(s);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;unmarshalQCString:<sp/>len=%d<sp/>offset=%llx\n&quot;,len,f.pos());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>QGString<sp/>result(len+1);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>result.at(len)=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len&gt;0)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="d7/db0/class_storage_intf_1a125b99d1511364f4fe49709feec46bb4" kindref="member">read</ref>(result.data(),len);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;unmarshalQCString:<sp/>result=%s\n&quot;,result.data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><ref refid="d7/df8/class_argument_list" kindref="compound" tooltip="This class represents an function or template argument list.">ArgumentList</ref><sp/>*unmarshalArgumentList(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/df8/class_argument_list_1afa737f8c786a4ea7e3e14d7baf063aea" kindref="member">ArgumentList::unmarshal</ref>(s);</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;ArgumentList&gt;</ref><sp/>*unmarshalArgumentLists(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==NULL_LIST)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>null<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;ArgumentList&gt;</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;ArgumentList&gt;</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>result-&gt;setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>assert(count&lt;1000000);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;unmarshalArgumentLists:<sp/>%d\n&quot;,count);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;count;i++)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;append(unmarshalArgumentList(s));</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;BaseInfo&gt;</ref><sp/>*unmarshalBaseInfoList(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==NULL_LIST)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>null<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;BaseInfo&gt;</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;BaseInfo&gt;</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>result-&gt;setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>assert(count&lt;1000000);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;count;i++)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>name<sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d49/types_8h_1a90e352184df58cd09455fe9996cd4ded" kindref="member" tooltip="Protection level of members.">Protection</ref><sp/>prot<sp/>=<sp/>(<ref refid="d9/d49/types_8h_1a90e352184df58cd09455fe9996cd4ded" kindref="member" tooltip="Protection level of members.">Protection</ref>)unmarshalInt(s);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d49/types_8h_1ab16236bdd10ddf4d73a9847350f0017e" kindref="member" tooltip="Virtualness of a member.">Specifier</ref><sp/>virt<sp/><sp/>=<sp/>(<ref refid="d9/d49/types_8h_1ab16236bdd10ddf4d73a9847350f0017e" kindref="member" tooltip="Virtualness of a member.">Specifier</ref>)unmarshalInt(s);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="de/d64/struct_base_info" kindref="compound" tooltip="This class stores information about an inheritance relation.">BaseInfo</ref>(name,prot,virt));</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;Grouping&gt;</ref><sp/>*unmarshalGroupingList(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==NULL_LIST)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>null<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;Grouping&gt;</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;Grouping&gt;</ref>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>result-&gt;setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>assert(count&lt;1000000);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;count;i++)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>name<sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/d59/struct_grouping_1a9f0ec5ab376b083ebe3274ea79fd2d70" kindref="member" tooltip="Grouping priority.">Grouping::GroupPri_t</ref><sp/>prio<sp/>=<sp/>(<ref refid="d7/d59/struct_grouping_1a9f0ec5ab376b083ebe3274ea79fd2d70" kindref="member" tooltip="Grouping priority.">Grouping::GroupPri_t</ref>)unmarshalInt(s);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d7/d59/struct_grouping" kindref="compound" tooltip="Grouping info.">Grouping</ref>(name,prio));</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;SectionInfo&gt;</ref><sp/>*unmarshalSectionInfoList(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==NULL_LIST)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>null<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;SectionInfo&gt;</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;SectionInfo&gt;</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>result-&gt;setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>assert(count&lt;1000000);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;count;i++)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>label<sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>title<sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>ref<sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>SectionInfo::SectionType<sp/>type<sp/>=<sp/>(SectionInfo::SectionType)unmarshalInt(s);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>fileName<sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d5/d5b/struct_section_info" kindref="compound" tooltip="Class representing a section in a page.">SectionInfo</ref>(fileName,label,title,type,level,ref));</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;ListItemInfo&gt;</ref><sp/>*unmarshalItemInfoList(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==NULL_LIST)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>null<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;ListItemInfo&gt;</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="db/daa/class_q_list" kindref="compound">QList&lt;ListItemInfo&gt;</ref>;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>result-&gt;setAutoDelete(TRUE);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>assert(count&lt;1000000);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;count;i++)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/dd5/struct_list_item_info" kindref="compound">ListItemInfo</ref><sp/>*lii<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/dd5/struct_list_item_info" kindref="compound">ListItemInfo</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>lii-&gt;type<sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>lii-&gt;itemId<sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;append(lii);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*unmarshalObjPointer(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="d7/db0/class_storage_intf_1a125b99d1511364f4fe49709feec46bb4" kindref="member">read</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;result,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><ref refid="de/d9a/class_section_dict" kindref="compound" tooltip="Unsorted dictionary of SectionInfo objects.">SectionDict</ref><sp/>*unmarshalSectionDict(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;unmarshalSectionDict<sp/>count=%d\n&quot;,count);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==NULL_LIST)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>null<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><ref refid="de/d9a/class_section_dict" kindref="compound" tooltip="Unsorted dictionary of SectionInfo objects.">SectionDict</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="de/d9a/class_section_dict" kindref="compound" tooltip="Unsorted dictionary of SectionInfo objects.">SectionDict</ref>(17);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>assert(count&lt;1000000);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;count;i++)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>key<sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d5b/struct_section_info" kindref="compound" tooltip="Class representing a section in a page.">SectionInfo</ref><sp/>*si<sp/>=<sp/>(<ref refid="d5/d5b/struct_section_info" kindref="compound" tooltip="Class representing a section in a page.">SectionInfo</ref><sp/>*)unmarshalObjPointer(s);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>unmarshalSectionDict<sp/>i=%d<sp/>key=%s<sp/>si=%s\n&quot;,count,key.data(),si-&gt;label.data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="d1/d50/class_s_dict_1a121842d9858421076b81ed663034d62c" kindref="member">append</ref>(key,si);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><ref refid="d6/dd6/class_member_s_dict" kindref="compound" tooltip="A sorted dictionary of MemberDef objects.">MemberSDict</ref><sp/>*unmarshalMemberSDict(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;---<sp/>unmarshalMemberSDict<sp/>count=%d\n&quot;,count);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==NULL_LIST)<sp/></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;---<sp/>end<sp/>unmarshalMemberSDict\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>null<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><ref refid="d6/dd6/class_member_s_dict" kindref="compound" tooltip="A sorted dictionary of MemberDef objects.">MemberSDict</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d6/dd6/class_member_s_dict" kindref="compound" tooltip="A sorted dictionary of MemberDef objects.">MemberSDict</ref>;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>assert(count&lt;1000000);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Reading<sp/>%d<sp/>key-value<sp/>pairs\n&quot;,count);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;count;i++)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>unmarshaling<sp/>pair<sp/>%d\n&quot;,i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>key<sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>unmarshaling<sp/>key<sp/>%s\n&quot;,key.data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*md<sp/>=<sp/>(<ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*)unmarshalObjPointer(s);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/>unmarshalMemberSDict<sp/>i=%d<sp/>key=%s<sp/>md=%p\n&quot;,i,key.data(),md);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="d1/d50/class_s_dict_1a121842d9858421076b81ed663034d62c" kindref="member">append</ref>(key,md);<sp/></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;---<sp/>end<sp/>unmarshalMemberSDict\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><ref refid="d7/dd5/struct_doc_info" kindref="compound" tooltip="Data associated with a detailed description.">DocInfo</ref><sp/>*unmarshalDocInfo(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);<sp/></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==NULL_LIST)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><ref refid="d7/dd5/struct_doc_info" kindref="compound" tooltip="Data associated with a detailed description.">DocInfo</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d7/dd5/struct_doc_info" kindref="compound" tooltip="Data associated with a detailed description.">DocInfo</ref>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>result-&gt;doc<sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>result-&gt;line<sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>result-&gt;file<sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><ref refid="d0/da7/struct_brief_info" kindref="compound" tooltip="Data associated with a brief description.">BriefInfo</ref><sp/>*unmarshalBriefInfo(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);<sp/></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==NULL_LIST)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><ref refid="d0/da7/struct_brief_info" kindref="compound" tooltip="Data associated with a brief description.">BriefInfo</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/da7/struct_brief_info" kindref="compound" tooltip="Data associated with a brief description.">BriefInfo</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>result-&gt;doc<sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>result-&gt;tooltip<sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>result-&gt;line<sp/><sp/><sp/><sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>result-&gt;file<sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><ref refid="db/dab/struct_body_info" kindref="compound" tooltip="Data associated with description found in the body.">BodyInfo</ref><sp/>*unmarshalBodyInfo(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);<sp/></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==NULL_LIST)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><ref refid="db/dab/struct_body_info" kindref="compound" tooltip="Data associated with description found in the body.">BodyInfo</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="db/dab/struct_body_info" kindref="compound" tooltip="Data associated with description found in the body.">BodyInfo</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>result-&gt;<ref refid="db/dab/struct_body_info_1a13ecf2183dee65bdf06cda72cd0363a0" kindref="member" tooltip="line number of the start of the definition">startLine</ref><sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>result-&gt;<ref refid="db/dab/struct_body_info_1adf40ab79b5fe12c0e46fcd272a62cf44" kindref="member" tooltip="line number of the end of the definition">endLine</ref><sp/><sp/><sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>result-&gt;<ref refid="db/dab/struct_body_info_1a0a09e75f0c6dbd45673103dccc125172" kindref="member" tooltip="file definition containing the function body">fileDef</ref><sp/><sp/><sp/>=<sp/>(<ref refid="de/db0/class_file_def" kindref="compound" tooltip="A model of a file symbol.">FileDef</ref>*)unmarshalObjPointer(s);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><ref refid="d3/d3b/class_group_list" kindref="compound" tooltip="A list of GroupDef objects.">GroupList</ref><sp/>*unmarshalGroupList(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="660"><highlight class="normal">{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==NULL_LIST)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>null<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>assert(count&lt;1000000);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><ref refid="d3/d3b/class_group_list" kindref="compound" tooltip="A list of GroupDef objects.">GroupList</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d3/d3b/class_group_list" kindref="compound" tooltip="A list of GroupDef objects.">GroupList</ref>;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;count;i++)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d09/class_group_def" kindref="compound" tooltip="A model of a group of symbols.">GroupDef</ref><sp/>*gd<sp/>=<sp/>(<ref refid="d8/d09/class_group_def" kindref="compound" tooltip="A model of a group of symbols.">GroupDef</ref><sp/>*)unmarshalObjPointer(s);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;append(gd);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><ref refid="dd/d13/class_member_list" kindref="compound" tooltip="A list of MemberDef objects.">MemberList</ref><sp/>*unmarshalMemberList(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);<sp/></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==NULL_LIST)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><ref refid="dd/d13/class_member_list" kindref="compound" tooltip="A list of MemberDef objects.">MemberList</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dd/d13/class_member_list" kindref="compound" tooltip="A list of MemberDef objects.">MemberList</ref>;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>assert(count&lt;1000000);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;count;i++)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref><sp/>*md<sp/>=<sp/>(<ref refid="da/d09/class_member_def" kindref="compound" tooltip="A model of a class/file/namespace member symbol.">MemberDef</ref>*)unmarshalObjPointer(s);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;append(md);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>result-&gt;unmarshal(s);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><ref refid="d0/d31/class_example_s_dict" kindref="compound" tooltip="A sorted dictionary of Example objects.">ExampleSDict</ref><sp/>*unmarshalExampleSDict(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);<sp/></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==NULL_LIST)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><ref refid="d0/d31/class_example_s_dict" kindref="compound" tooltip="A sorted dictionary of Example objects.">ExampleSDict</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d31/class_example_s_dict" kindref="compound" tooltip="A sorted dictionary of Example objects.">ExampleSDict</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>assert(count&lt;1000000);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;count;i++)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>key<sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/de9/struct_example" kindref="compound" tooltip="Data associated with an example.">Example</ref><sp/>*e<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="df/de9/struct_example" kindref="compound" tooltip="Data associated with an example.">Example</ref>;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;anchor<sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;name<sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;file<sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="d1/d50/class_s_dict_1a25a85aeba441b4c855ea7be25a4741b5" kindref="member">inSort</ref>(key,e);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><ref refid="d1/d50/class_s_dict" kindref="compound">SDict&lt;MemberList&gt;</ref><sp/>*unmarshalMemberLists(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);<sp/></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count==NULL_LIST)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><ref refid="d1/d50/class_s_dict" kindref="compound">SDict&lt;MemberList&gt;</ref><sp/>*result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d1/d50/class_s_dict" kindref="compound">SDict&lt;MemberList&gt;</ref>(7);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>assert(count&lt;1000000);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;count;i++)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>QCString<sp/>key<sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d13/class_member_list" kindref="compound" tooltip="A list of MemberDef objects.">MemberList</ref><sp/>*ml<sp/>=<sp/>(<ref refid="dd/d13/class_member_list" kindref="compound" tooltip="A list of MemberDef objects.">MemberList</ref><sp/>*)unmarshalObjPointer(s);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="d1/d50/class_s_dict_1a121842d9858421076b81ed663034d62c" kindref="member">append</ref>(key,ml);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><ref refid="d4/dd7/class_entry" kindref="compound" tooltip="Represents an unstructured piece of information, about an entity found in the sources.">Entry</ref><sp/>*<sp/>unmarshalEntry(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="726"><highlight class="normal">{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><ref refid="d4/dd7/class_entry" kindref="compound" tooltip="Represents an unstructured piece of information, about an entity found in the sources.">Entry</ref><sp/>*e<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d4/dd7/class_entry" kindref="compound" tooltip="Represents an unstructured piece of information, about an entity found in the sources.">Entry</ref>;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/>uint<sp/>header=unmarshalUInt(s);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>ASSERT(header==HEADER);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a87d6afbe10ea84859ef03b6f046e34d3" kindref="member" tooltip="member name">name</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a79a9b5736630c3769e645f71dc357b9f" kindref="member" tooltip="member type">type</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a9197cdd8acd8fc0670e2911a407f3d04" kindref="member" tooltip="entry type (see Sections);">section</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1acbb1b4e99978a710863cf9cab6c90553" kindref="member" tooltip="class protection">protection</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="d9/d49/types_8h_1a90e352184df58cd09455fe9996cd4ded" kindref="member" tooltip="Protection level of members.">Protection</ref>)unmarshalInt(s);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a4669c5294781bce55ce0ad654460acbd" kindref="member" tooltip="signal, slot, (dcop) method, or property?">mtype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="d9/d49/types_8h_1a0872178db42722c310fe6117189ed441" kindref="member" tooltip="Kind of method.">MethodTypes</ref>)unmarshalInt(s);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a3019e7d39a5c382fb924e22913198133" kindref="member" tooltip="class/member specifiers">spec</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalUInt64(s);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1ae283a992b9a74c6925c6f602ba7d830d" kindref="member" tooltip="define/variable initializer lines to show">initLines</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1ab5f1d92a0b5d8abdf4d42cefc134fdfa" kindref="member" tooltip="static ?">stat</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalBool(s);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a6c5a4c9eda694f2bfd2037d7da08ba5d" kindref="member" tooltip="explicitly defined as external?">explicitExternal</ref><sp/>=<sp/>unmarshalBool(s);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a14c9abc36afe46d02521ef846e6bcc27" kindref="member" tooltip="prototype ?">proto</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalBool(s);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a095b43379529186300dd6a8d8830d5dc" kindref="member" tooltip="automatically group class members?">subGrouping</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalBool(s);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1ac3b5637ee0f8469650e2d8d694733314" kindref="member" tooltip="do we need to draw the call graph?">callGraph</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalBool(s);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a3693baa860ccc1625b5ac4fd3bc1761c" kindref="member" tooltip="do we need to draw the caller graph?">callerGraph</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalBool(s);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1aaf045b9c026443fd192064117083911b" kindref="member" tooltip="virtualness of the entry">virt</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="d9/d49/types_8h_1ab16236bdd10ddf4d73a9847350f0017e" kindref="member" tooltip="Virtualness of a member.">Specifier</ref>)unmarshalInt(s);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a795acc50f8bb2497b2385ee715304076" kindref="member" tooltip="member argument string">args</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a239e75c28fe009869cf25e681d2a2d41" kindref="member" tooltip="member&amp;#39;s bit fields">bitfields</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a7dfa4587991698fbc8550e563cd71948" kindref="member" tooltip="member arguments as a list">argList</ref>;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a7dfa4587991698fbc8550e563cd71948" kindref="member" tooltip="member arguments as a list">argList</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalArgumentList(s);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a6fe1bee76d0edf07bdae161814b8e490" kindref="member" tooltip="template argument declarations">tArgLists</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalArgumentLists(s);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a8aa37e42f17105b914db76b0c05d0a1f" kindref="member" tooltip="the program text">program</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQGString(s);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a2a0c9e7ce364ed2981f49314c33245f9" kindref="member" tooltip="initial value (for variables)">initializer</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQGString(s);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a88c55fcdd65a52dce640136f18adccf2" kindref="member" tooltip="include file (2 arg of \class, must be unique)">includeFile</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a32626ce14eb253f6da64ed475419a4ac" kindref="member" tooltip="include name (3 arg of \class)">includeName</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1ac02a6c1dd922221351f6de0286d48d77" kindref="member" tooltip="documentation block (partly parsed)">doc</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a180b5fdd7f3b963e4b0d2c4ea6e0b1b5" kindref="member" tooltip="line number at which the documentation was found">docLine</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1ac6841c6ec8fd7ae6121364e7e1895e94" kindref="member" tooltip="file in which the documentation was found">docFile</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1ad602ba19af5785515ed81790d843ce4c" kindref="member" tooltip="brief description (doc block)">brief</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1add7a19978ab2b30a9755b8d5e3cbd00a" kindref="member" tooltip="line number at which the brief desc. was found">briefLine</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a9a0b7ed65e6082088ededf633771d3d1" kindref="member" tooltip="file in which the brief desc. was found">briefFile</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a51e209dbd21d11b0c63d246efa6182f2" kindref="member" tooltip="documentation inside the body of a function">inbodyDocs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a8eed853bf654e1d583e10f04062ccdde" kindref="member" tooltip="line number at which the body doc was found">inbodyLine</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1aee8cba460792393b5051230c78fbb204" kindref="member" tooltip="file in which the body doc was found">inbodyFile</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a611ec017dea1768b7093bea6e4177cba" kindref="member" tooltip="related class (doc block)">relates</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a74ff1e30a3ed19f82ce61f70b8a5a413" kindref="member" tooltip="how relates is handled">relatesType</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="d9/d49/types_8h_1aa370e9ca1d3ff266cab92689bcc37d9e" kindref="member" tooltip="Type of member relation.">RelatesType</ref>)unmarshalInt(s);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1ac5ad6c6585645a4427b54e5281316b65" kindref="member" tooltip="property read accessor">read</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a76a68a1f14534f069444ba2704ef7404" kindref="member" tooltip="property write accessor">write</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1af88583a31bcd3cfc5aa52691f958833f" kindref="member" tooltip="name of the class in which documents are found">inside</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a81b9c13cc15e3460c8d9fdcabeb9342d" kindref="member" tooltip="throw specification">exception</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a77d30ef01feb28bf83b77d4148968f84" kindref="member" tooltip="where clause (C#) for type constraints">typeConstr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalArgumentList(s);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a9a2b1e3404f4723d8a6bef5966146ed0" kindref="member" tooltip="line number of the definition in the source">bodyLine</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a2db88158279ecfe391ea775f63869fc1" kindref="member" tooltip="line number where the definition ends">endBodyLine</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a9f7167fc5b369f1fcd343946803efa0d" kindref="member" tooltip="member group id">mGrpId</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a22b4c7b8255e183b68c49d5bd9f04017" kindref="member" tooltip="list of base classes">extends</ref>;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a22b4c7b8255e183b68c49d5bd9f04017" kindref="member" tooltip="list of base classes">extends</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalBaseInfoList(s);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1af10b19c474b2a7173a79b97124d25fc3" kindref="member" tooltip="list of groups this entry belongs to">groups</ref>;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1af10b19c474b2a7173a79b97124d25fc3" kindref="member" tooltip="list of groups this entry belongs to">groups</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalGroupingList(s);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a4608d738e9d9c7798d8b83a2846b3d12" kindref="member" tooltip="list of anchors defined in this entry">anchors</ref>;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a4608d738e9d9c7798d8b83a2846b3d12" kindref="member" tooltip="list of anchors defined in this entry">anchors</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalSectionInfoList(s);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a736f1dfadfe0c0fabb022c533aa27fdc" kindref="member" tooltip="file this entry was extracted from">fileName</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a81bf40c0a6646dc1e33097d7e2552c96" kindref="member" tooltip="start line of entry in the source">startLine</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalInt(s);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a5328bd7f1580a30ad2345840044c2a4b" kindref="member" tooltip="special lists (test/todo/bug/deprecated/..) this entry is in">sli</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalItemInfoList(s);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a4ee5bbd6ac8bdf2f017d93edcefce5e9" kindref="member" tooltip="programming language in which this entry was found">lang</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="d9/d49/types_8h_1a9974623ce72fc23df5d64426b9178bf2" kindref="member" tooltip="Language as given by extension.">SrcLangExt</ref>)unmarshalInt(s);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1acc4d59ae7ae3e94c3365ab8027593727" kindref="member" tooltip="does this represent an entity that is hidden from the output">hidden</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalBool(s);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1acbe763144d791b44aa3620b012d0dd30" kindref="member" tooltip="Artificially introduced item.">artificial</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalBool(s);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>e-&gt;groupDocType<sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="d4/dd7/class_entry_1a470b655d0d6179559a11a81e6617d509" kindref="member">Entry::GroupDocType</ref>)unmarshalInt(s);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a338fb12273a1a4f5dc124a1faf47d473" kindref="member" tooltip="libclang id">id</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>unmarshalQCString(s);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><ref refid="d4/dd7/class_entry" kindref="compound" tooltip="Represents an unstructured piece of information, about an entity found in the sources.">Entry</ref><sp/>*<sp/>unmarshalEntryTree(<ref refid="d7/db0/class_storage_intf" kindref="compound" tooltip="Abstract interface for file based memory storage operations.">StorageIntf</ref><sp/>*s)</highlight></codeline>
<codeline lineno="790"><highlight class="normal">{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><ref refid="d4/dd7/class_entry" kindref="compound" tooltip="Represents an unstructured piece of information, about an entity found in the sources.">Entry</ref><sp/>*e<sp/>=<sp/>unmarshalEntry(s);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>uint<sp/>count<sp/>=<sp/>unmarshalUInt(s);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>uint<sp/>i;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;count;i++)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;<ref refid="d4/dd7/class_entry_1a8c8479030e7a983413308cd412a926ff" kindref="member">addSubEntry</ref>(unmarshalEntryTree(s));</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Mat/Projects/doxygraph/examples/doxygen-1.8.4/src/marshal.cpp"/>
  </compounddef>
</doxygen>
